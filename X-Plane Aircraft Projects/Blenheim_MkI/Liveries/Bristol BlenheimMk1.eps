%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 04138.eps
%%Creator: Adobe Illustrator(R) 23.0
%%For: Onno van Braam
%%CreationDate: 26/07/2019
%%BoundingBox: 0 0 879 726
%%HiResBoundingBox: 0 0 878.2856 725.6500
%%CropBox: 0 0 878.2856 725.6500
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.0.4%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 23.0.4 x589 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: font ArialMT
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: ArialMT
%%DocumentNeededFonts: ArialMT
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                    
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/"
            xmlns:xmpRights="http://ns.adobe.com/xap/1.0/rights/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <dc:format>application/postscript</dc:format>
         <dc:rights>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Copyright 2009 - 2011, Onno van Braam, EVOlution Graphics</rdf:li>
            </rdf:Alt>
         </dc:rights>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Onno van Braam</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Bristol Blenheim_S</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 23.0 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2019-07-26T10:41:08+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-07-26T10:41:08+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-07-26T10:41:08+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>212</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA1AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q8g1DyP8AnNJ5v1e6&#xA;07zCbTQr67WZImvJZHEKAskUMckUqW6ltpPSKkilD1xVA2XlH/nJRrO7i1DzNZvPdvKTLHIEVI/S&#xA;RIlRY7SN4zVXNY5FozKx5UZWVV9e8k/nv/ibW9Q8t+YIbS0urhptPW7up7lET0nRFjtZEeFOPqH4&#xA;fsl+DGvHFVS38r/85HC5+t3Hmewa4W0ukjjVVFt9ZmkcQhovqwrHFGkTq1S/MuCzIeOKqvlXyz/z&#xA;kNa63Bc695msrrTvVtpLy1iSMCRaQrcLRrdmjPESUEUiryoaCpGKvXcVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqTavqd4t0tpZrMOADT3EMHrgFuiVJVQafE&#xA;eu1PHFUFpnmm5OozaZdWV5JLG37q5kgS2Rw3QDnIFeu9GXruKAj4lU8+vuu8tpPEv83FZN/9WJpG&#xA;/DFXfpO2/kn/AOkef/mjFXfpXTRs9zHE3eOU+m4+aPxYfSMVbTU9Nd1RLuFnYgKokQkk7AAA4qic&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiriQoJJoBuSegGKpX5X1T9KaDZ3/qif11J9UADl&#xA;xYrUgAUO24p1xVNMVdirsVdirsVdirsVdirz6zv7K+na4vYBHe3Fw9apI4CiQpF8QnjrSNV6IMVR&#xA;OjuklpeQ3FzZm9MzoTLNFBNGbeV41JjgiQfbD0bqy98VZPouqxX0UsfqpJc2rBJwjK3UVVvh23Hs&#xA;PbbFUxxV2KpXqnmTyzp5kg1PUrS2YUWWGeaNTSQHiGRjX4gNq9cVQuj6h5P1gsNOihmoGIJtjGGC&#xA;PwcoZEUOFf4TxrQ4qmn6KsB/dxeh4+gzQ1/1vTKV9q4qx+xaaPzNoMYuJ2judHvpp43mlkR5ElsA&#xA;rlXZl5L6j0PufHFWVYq7FXYq7FXYq7FXYq7FXYq7FVCa5ZX9KFPVnpUqTxVR4u1DT22JPh1oqs9P&#xA;VTv68A9vRc0+n1RX7sVbW4uImC3SrxJos8ZPEk9OSndK9tyPfFUi/Mq6urXyNq8to7R3Xo8YDGTz&#xA;LMwHFabknpTFVv5cvAnlmKyjV4pLOWdHt5keKRFed3jqkgVqMjAg0xVkM1y4cxW8fqzD7VTxRe/x&#xA;NRqfIAn6N8VWenqv/LRB/wAiH/6rYq2lxNG4julVeRokyH4GPYEHdSfDce9cVROKuxV2KuxV2KsK&#xA;n0fUbHT/ANFrcagqJ/d6hZq8khXny6CbiGps37oD+XFWL+VgtxrUkNvrGrxgPfS8pbSaMyM12zIH&#xA;JgiZ+UTc6Kf1EYqn+haTB+lry51rVRNd+nCIjI8MsXpyAupi+sRlwONOn0164qnklj5cKgNqEKjk&#xA;pqPqa7hgQKiPudqd8VXfUvL3/LfB/wADZf8AVLFUs1nQPKd7p9xazXcM8dzLGsqf6JVOZRGZCsYZ&#xA;Cq/ECOh3xVAWn5deRYLV7FNQur2pdwouBNcIs1OQUwr6oRilfCuKoew0zy9pSalFpltfm5AkNvHL&#xA;wupJWTkpaOK5DsKMm4A718aKpV5o1HTzdWh0xbmLVLf1I4x+jOIgicKXEryWvpKzBVoBFJ02IDcs&#xA;VY0Nc1i8eaO0muzdW0nGe5mtEFu7Bd0VYLWFqqKV+BPme6qe6Vb2+uafpcAuri1uZJWNwbQNzKS3&#xA;KITyZ2RFj9WnDjWPZTXqVUb5qur/AMq6dez6XrXpx2jm14wvFcSKRHCw+sK6pHHNWflwC7IQe4oq&#xA;9J0LW7PWLFLq2kR6gcwjrIBUVFGQsCD/AGdQcVTHFUn1HTfMk1y0lhrS2kDcaQSWiT8aGpo3OM7+&#xA;9cVSy+tvzJitJlsLmwubygNvLcM0EVeW4eJIJWIK+Eg3xVRtNU/MiKBjqenW7TcJSDZRK8YYN+63&#xA;e8WRuS/apHselcVRNv5mv09Nb9WtnIkMjSWF1HGCjhUHqBpIwZFPL7TU98VUJfzEsor+O0b6q3qz&#xA;JbKUuWLLI6hh6qeiDGhDbM3gcVSi6uvzD0+6TW9Ie21TTL2Fr670eWVQw4hA/wBWuPTSnwsAA7EC&#xA;h69MVeT+cv8AnIjVrnXol036xptnCVSS3SVEkkIqXDVimpQ1AZftCn2emKsu0aXz/wCbIvr9vNrA&#xA;8rSqqhLe4sTez0+0KySWyQhuW/UjpviqL8zzXM11Y2WqLqMGmQOWka+ms5FmmWSREWsrSWx/dQS8&#xA;1kYVrsGxVAeXtRkj1Zbuza8miWJhqcFpLZq/F5nUMghKhSGVKmZlYqKbmlFU01fSfzLspDf6MdX9&#xA;AfvtSsr26seLECsjW0qzTFAd6K6bfLbFXm6f85Ba1Z+ZIZ4Li8utN2pYXk0ZLh60J9OAHbsKnl/k&#xA;9lXrVtrnnzzrHY3enxxaH5WvyAkjOjX1zGVZyVPGZYaiPbbkNiK9lU6k/MW3tJjY3BtGu7YKLmR7&#xA;r0kO8iFlJi4lmaA0XxIGKpi3mhnnVIW5BlYssFpd3XBlKhVZkCU5VP2gOmKoNdZ8+TWam301Rclt&#xA;2lt1SMAx1oVe9STaQhSQDtvSvw4q6wT80J4pG1A6daSuV9IW0rkIPSAbkjwScj6tSKSbr4HoqmEW&#xA;k+bzOHm1+MQ1BaGKyQNTfb1Gdvv4Yqn+Ksc8/wDlrVvMnl59H07Uv0YLmRBdzcObNb1+NFNRxPf3&#xA;pSoBriqZ22gaPaxrHaWqWoRFjDW9YWKIKKrPGVZgB4nFW7nR45ojELm4iQlWbjKWJKMGUhpPUZaE&#xA;fskYqo/oa6jFINQmr1Dzs8rA+wDxpT2ZTiqV6jbeatLgvr+G9+vxj9+baKALO3CNVKRhUn5MeG3w&#xA;/RiqX25/MW7hS7v9F0ws1fRtZm9W4SM7hZph6cat7IhHyOKrLeDzPbximgPbDjxk9C5Yqo6niEug&#xA;5FT2Wp8MVQY8uCFPrUmixzO/xzw2/wBft7gFhVlWZEHMA9m6+PTFUFp+k6d9Tkgk8tatNBKzNIoa&#xA;eL15KbufV9KdAzDcM/sOQ6qrIIfMEVrZzL5Zngkh4PdwxpWRnUwyMUbnIFr6fHknxV6bYqkv5jTa&#xA;zqvlPXP0r5evhZwOklqZmR4hGfTUgM9wXZlmTkDxFeXSgxV6j5S8stolssIKwwRiRYLOEIIkWSTn&#xA;WiqnE7fZHwg8qddlWQ4q7FXYq7FXYqpT2trcACeFJgv2RIoalfCoxVI7Xyn5dnshFJYxxzon1e5a&#xA;IekxZBx5HhxrX7Sk70IOKvnbzD+RmoN5v022t2hhh1ye9SBHo/otAGaZf+LE4oSvIg8aKa0rir23&#xA;yl5AtLLyVa6fLe3unwcPUZLS7a34JXkrepCIyGZQGkoaci37O2KoLV9C1iG+iuLaK+uuKrOjgBph&#xA;68twXj9RqcWRGXkBShPVg2yqE8qaC+sWEEolvBBdx0DspBijE/M8ZXXir/bUhK9tyDsqy228rerY&#xA;3LDVNR+t3SMs6SXcjxpNx4sqpIJFRQ38op8xir5w1H8kLqPzfHpcEsVvC9rc3MSsqsUjhmCtHQH4&#xA;yohO5YV+j4lX0ZoHkby9pXl6ztryxjb6lCqOJWMwpGvBS+3F24AA/D9+Kp5pGl2lnbI0drFbzNyd&#xA;giKpX1GLlKqOi1piqPxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVKvNOgx6/5fvdHklMC3aBf&#xA;WA5cSrBlPGq13XpXFU1xV2KuxV2KuxV2KuxVQmtnMnrQP6U9ApJHJGA7MtVrSu1CD9G2KvBPzLuf&#xA;PMH5seXPQsAyWU8culwR3iqt0bi6aS4ALIvpclIibmN6V3GKvcrGxultLeG8dOMMaJ6EVShKACrO&#xA;wBbpUDivvXFUwxVQsbG0sLSO0s4hDbRCkca1oATXv7nFXTW8nMzW7iOU/bDCqPTpyAI39x+OKvA/&#xA;OCeepPzq06K301VkFu8VnbreKEnglkunknLFRwHCZ1ZGFfg2rUYq96SCeV1kumWikMlum6Bh0LMQ&#xA;C5HUbAe1QDiqJxV2KuxV2KuxVLrOfzA8Aa7srWKfk4KRXUki8Q5CHkYEO6UJ264qr+pqv/LPB/yP&#xA;f/qjirvU1X/lng/5Hv8A9UcVd6mq/wDLPB/yPf8A6o4q71NV/wCWeD/ke/8A1RxVoy6oBU28AA6n&#xA;13/6o4qxO3/Nvyncapa6VFqFodQvfQ+qW5e5Uyi6XnAyFrYArIv2WrQ4qy31NV/5Z4P+R7/9UcVd&#xA;6mq/8s8H/I9/+qOKu9TVf+WeD/ke/wD1RxV3qar/AMs8H/I9/wDqjirvU1X/AJZ4P+R7/wDVHFWr&#xA;WXV2u5VuraCK0CqYZYp3kkZz9oNG0UaqB2PM18B3VReKoFZtc+tTq1pbC2Uj6tKLly7qRuXT0KIQ&#xA;ewZvn2xVU9TVf+WeD/ke/wD1RxV3qar/AMs8H/I9/wDqjirvU1X/AJZ4P+R7/wDVHFXepqv/ACzw&#xA;f8j3/wCqOKu9TVf+WeD/AJHv/wBUcVQV3pQvL21vrrS7Oe8sSWtJ3kZnjLdeJMO2Ko31NV/5Z4P+&#xA;R7/9UcVSvWvNUOitbpqXoQPdNxt0DzyMx5pH0jgc05zIKnxxVfofmRdds2vNLWG4tlfh6heeME8V&#xA;ccfUgQsCrqQw2OKpj6mq/wDLPB/yPf8A6o4qg5dL9bU4NVl0yzfUbZGiguzK3qIj/aUN6Nabn7z4&#xA;nFUZ6mq/8s8H/I9/+qOKu9TVf+WeD/ke/wD1RxV3qar/AMs8H/I9/wDqjirvU1X/AJZ4P+R7/wDV&#xA;HFXepqv/ACzwf8j3/wCqOKqF5P5gSAtaWVrLPyQBJbqSNeJcBzyEDnZKkbdcVTHFXYq7FXYq7FXY&#xA;qkVv5D8lW93FeQaHZR3ULpLDMsCBkeMBUKGnw8QopTwGKp7iqE1LUBZW5dYZLqY/3dtCOUjdAT7K&#xA;K7k/roMVQ0GrXwubWC+sGt1uo+Ynjf1Yo5Nv3UrFU4seVF2oTt1xVNMVdirsVdirsVdirsVdirsV&#xA;dirsVdiqHutO0+7lgluraKeW2bnbySIrNG1Q3JCR8Jqo6Yq7T9O0/TbRLPT7aK0tIq+nbwIsca8i&#xA;WNFUACpNcVRGKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVjKpLqGtm4EMUqNHKIkuY5OJii&#xA;kRU4My8fiq7h1BqGAOwBxVVl06GI3s0lvbrPb28NzEIYwqo8bySAVO5+JBU7VHYYqyHFXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVG+uDbWVxcgcjD&#xA;G8gXffgpNNt+2KsT8uCOOVotUljtWhtLcQxpLPalSzSCSsUjJxLcFJoKH3xVW1myhvbfUo9MuZJJ&#xA;mgtUDx3NxJx5zSBuQidmI41qPDFU+0ETDQ9OE0rTTC1hEsz1LO3pjkzFqmpO++Ko7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqlvmKaOLSZDK4jjd4o3&#xA;JDMOEkiq4KqQxBUmtO2KpXpWpxrPczRz28iMI4g9xcTRs3AFywSYSso/e8acu2Kqkt+t1PfQrqFr&#xA;Yzvb24injmE1P3kpbY+j222OKppobKdJtUDiT0YxC0imqs0P7tmU1bYldt8VR2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVA6g05urJLdFeVXeYiRii8&#xA;FjMZ3CvvylXtiqp6mq/8s8H/ACPf/qjiqDuru8tbh7qW15mKznlEFqzSyTGIoyoFKR1b4iEHviqt&#xA;oc5ms5OS8JVnnEifF8JaVnH21Q/ZcHpiqYYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FUqvWtn1ULP649CAFPQE+/rOeXIw+HoilcVd/uO/5fv+n7FVJL&#xA;iyg1WAoLs1gmB9SO6k/bi6Bw34YqitJaEzX/AKSsga458XR4yecSVbi4U0LA7+NcVTDFXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqhH1WwWd4PV5SRU9UIrOEr/OVBCf7LFU&#xA;WCGAINQdwR0IxV2KuxV2KuxVJvrmqJf3pt9P+tReoqpP6yJULElVAYdFct9NcVQdxr/maPWLSyGk&#xA;RcLuOdkU3BLj0vS/eOyxlEjBloftMew7FVMLhbkTwzXVyYZODqkNpEZWAYoWqzLJyUcRv6a4qkEO&#xA;o6nN5xS2hu547OWGNZPVW2WRihvBVV4cqcoh1Wo70xVIvOfnE6JNokt9r6NZPrUcc06BEjMKRoWT&#xA;90GJoZfiqTir0+OSOWNZI2DxuAyOpBUqRUEEdQcVXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYqgdbvWs9OklQM0rFY4ljR5H5OQtVSNZHbiCWNFOwr0xVJtDurSK4QpHMlUnd4eFzM&#xA;0amRIY+bSJ6lXFszUcA4qm+kXUMv1yGHlwtZ/TVXVkZQ8aS04uFNB6m23TFUwxV2KuxV2KpZp13O&#xA;LUMtnM6SvJNG6mGhSWRpF6yA/ZYYqoXn1251S1MVs0EscM/GWSREYVaIHjwFwD7hh+PRVA32r6pG&#xA;GF9pEN/DEzq0sYlojKFqSkkLALRvt8t9/DFVJNLvovNwuraxSGGOCD1EhlVIi3+lqCy8FZt5Rvx2&#xA;364qkXnvRZbm68utr1tZXaTa9bosYQyIRJEBukqmm0FDua1xV6UAAAAKAbADFXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqkHnL1/qNn6BX1TeRKA8fqqQ4ZDVOMhOzdhiqV+XJZ7T&#xA;UtWSe8tbZy0B4yQmKo9PqFJtv+I4qnOiSerq2qv6sc9fq/72IUQ0Qjb4n/XiqdYqhm1TTFYq13Cr&#xA;KaMpkQEEdjviqDn81eXYWZX1CFileYjb1OJArRuHKhpvQ4qgbzzzoCwSmG6YBVJe69KQxxCn2t1+&#xA;Mj+VQd9jTFUn0PWvLj2SPBcpeOixxObiOeOaJ44lXgs4jZzxp86mvLFUa/mXRUYXCz3sCxowLsY5&#xA;FCtQsS0xkNPgHft88VUNa1zSLrRbq6s9bmuJI4J3tlRU9J3EbKFYrEoI5e+Krbr80vJ9nqczS3E3&#xA;FraFgTBLGac5R0lWMmvagxVTv/M/lDzNcaVDHqJt7nT7+K+FvLDKrMYQw4dONSJAeuKs6R0kQPGw&#xA;dGFVZTUEeIIxVvFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWGebdL8yyWkUY1iN&#xA;4pZFjW3/AEfFLI0zH4DG7zRpHTrVgfbfFUg0TR/O9jNqNsmsPDe1jaWX6pFIrEg8SVghkXZKDqv8&#xA;Sqq6VpHmL9MX5vVn1NR6fq+jLNH6lRVC8M9zagcQCtDyB2OKpld6YoiUTeVRcOZIiHmhgdgqyKzD&#xA;ks161ONdjxHzxVMFvrWJQJvLyWsKigdoXKLTsfTgfiKdzQYqxLzTqunNp7Q/UFlIMp9KBJ5GdWmm&#xA;aJY1+r8PgZvUIqOS7UbpirFp9YV4rq+0uxnXR4pH+t20zxRCRlaYh2F2yIgRZBUk/EDToKYqzH8u&#xA;fNFk+nXcPpSxl2aNYLR4LmSAB5GEZNqzgyJGy9FJxVmkOsWDXazFtRSO2t2R/WtLmOFuRB5vziWr&#xA;qI+vShOKsa1+40u90rVZLLQdRlkmiuRDfx8REZCGHqgicMBy3+zX2rtirGfMHmL8v00F7SbSpZdU&#xA;+olYJUkt5/TlKMiktHcPwIkWtDuKdMVTvV/Mnk7U5Y0soVlujVJLpvSlejLReZLO7hftd9gV70xV&#xA;mXlSCSPTVYIYbVwDbWzIY2Rd+qsFI2otKb05blsVTrFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FUg86Wf1vT7WFpPSj+tRvJJRTQIrMB8bxKKsAN2xVKPK5SwvtTjW/t4VlMMqfWAhZ&#xA;l4tHyXhPTjzjZfmDiqd6DMJ9U1eVZo7gK8ETSw7JzWIMV+0+4WRe/fFU7xV2KuxVD3FlHITLGFju&#xA;6fBOB8VR0DU+0viMVSXTvrV1pdvDfQyPG0MPG0txRGj9JDV5n4bh67BlPsRiq1vLumNcx276Jp5e&#xA;VHf6xMouXAQqKEPGrN9v+fFUDrul2UWj3VlAulxxzRzwP6cCRNGxjP2V9Td6sNhvUjFU3by75fn1&#xA;Wf1tMtJeNvAF5wRtQc5dhVfbFUF5ou00ObQTp8MVu2oarb2MxSOMEwypIzLXif5B0xVlGKuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVDanZLe2Mts1AWoyFgGAdGDoSrAg0ZR2xVJ&#xA;NGuY7e69C5ZLY2izBkdlUqJ2ikG/GJSOfMAqtNu/XFU7sUfjLO6lWuJDJwIoQoUIlQdwSqAkHviq&#xA;JxV2KuxV2KpZYafA0LhmmBSaZQizzKFUSNwUKHAUcKUHhiqGvbSJNYs4Inl9aaC4Kl7ifiAjw1P2&#xA;wT9r7IO+KoTUtC8uwNHJq1zcv6jM6oJrhIy/wlqiE8mGy7SM3QdSK4qgIZ4bvzlEtncXhsHghEg5&#xA;XKoxH1zq7srD4oxSmxpirGPzE8z2GgyaBc6rcztbJrsT/wB1cbLDHGeXpzGR1CiZu/xV+VFXrcUq&#xA;SxJLGapIoZCQRUMKjY74quxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KtFVJB&#xA;IBK/ZPh8sVbxV2KuxV2KuxVILm2sxql59Y1OazeUxzJGk6xLwMYjBoe/KJq4qg5dC0CXUYL59cma&#xA;a3WRYi10pKmX068SfsikW4GxxVMG1VI7uO3i1a2eOSOSRnn4MwKMgABjeFafH4VxVLLbTLqbzQ2q&#xA;WT2s0MMcayhZWYNIfrJbixWT0ifrHIop+/FVLWvKWs6jd6VPJIkgs9VivZg7Bi0KooYGkcK/CY1p&#xA;8P6t1WZ4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqgL&#xA;hrqLVE+rxpIbiBvU9RylPQcceNEfr6xriqr6mq/8s8H/ACPf/qjiqHM86alFJeLFBFHbTsXEhYAB&#xA;oixYskYAAxVdpF1FdPfzRbxm5Kq2xB4RRrUUJ2NNsVTDFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYql+rrbhrSaeQwxJKVlmEjRAK8bABnUrs0nDau5pi&#xA;qlz0H/lv/wCn2T/qpiqFlby/NdSW0l3HLbyWskVyklyXBSchQAWckVEbVpiqY6KIvqJMT+ojTTlZ&#xA;CxkLD1nAPMlidvfFUdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVS/wAwRJJpFwZBWOLjPIKITxgcStQSApWibctq9cVSfSp9PjurmOHUBZQskUvpBrIV&#xA;duaFv3asv2Y1HXtiqIkmkLai1jqcbzC3twlxK0PCMmSXqUSgr7g4qmmi1/RFmzHk8kKSSPseTuoZ&#xA;22AHxMSemKozFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYqsuIUngkgevCVWRqdaMKGmKsV8sSSWs5X/Sruaa0gV0aWBhG1uWD8U9SsYPqjY+Htiqr5huN&#xA;UeDUvqdrPDdR29vLFLyt/hMUsklfiaRf2f5TiqeaLBdwaPYwXlPrcVvElzxNV9RUAehAWo5ewxVG&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqx+a1&#xA;v4NZpE8/1Z0leEQ/V9mldHkX98o/aUt9o9fbFW5frytcRywXDrexw2qzym2qOTurnjEwrwV+X2cV&#xA;T/FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXmOp/85D+RNO1S502W&#xA;21aWe2u7nTy8GnzSxyXFm/pzpE67PwNK08R44qo2P/OR3kbUJPTsNN127kHL4INLuJD8FOWyA9OQ&#xA;r8xir0Hy15hsfMWiW+sWKTR21z6gWO5jaGZWikaJ1kjb4lZXQgg4qmeKuxV2KuxVDajp2n6lbPZX&#xA;0KXNu9C0MgqNjUH2oehxVC2mgabBdW1ywNxdWUP1ezlmId4YmoCFNAfi4AFjuadcVTPFXYq7FXYq&#xA;7FXYq7FXYq7FXYqluu6hNYWguEdI409R55HQyBY4oXkJA5x/ydzglOMImUug+axhKUoxj1NITyl5&#xA;hbWLe6MksE0ltKEWa3oEdHjVw1A8y/CxaMlZGUshoewhikZCy5WrwDHIAXuLo8xufIc6sWAd1vmv&#xA;zfb+XVtzNazXP1lLl1MKlgv1WBpzzIDU5BKDLHFQsX5l+UnnSAzzwzGUQyxTW1xE0LNL6KGdZEUx&#xA;LI/2S9KjfoCQq66/MTQoNVnsVLXEUdtbXMd9bq89uzXc08CRvLErxxn1LfiOTblvY4qqf8rB8vR6&#xA;VZ6hdyPALxFZIgjyNzPpL6Y4ruedwijxriqiv5n+T3jmmW4nNtb8hcXP1a49GN0ViYnk4cVk+Bl4&#xA;k15Dj1Iqqoj80vLwmu4Hiu/WteDMi2tyaLPtB6pMS+i8knwBH3r9NFUVpH5ieXdRtLi4rPbmytEv&#xA;b9JYJR6KPCk/FiF+JvTlUgL9r9mtDRVUl8/eXoWRbgXduzen6gms7mP0vXlMEHq84xw9WVSiV+0c&#xA;VVNJ89eXtVuYra1e4WWZ/SjE9rcQAyegLpU5SxovJrc+oFrXjiqf4q7FXksH/Km/0vqn6N/T3139&#xA;Jah+kf0X/ib0v0h6g+v8fqf7nlzpy9PbpTtiqX6T/wAqH/TF9+iP8Qfpb1p/0h9U/wAV+t61YvX9&#xA;T09+dfS5d68O/HFXp/kv/Dv+HLb/AA76v6J5z+l6/wBZ9b1PXk9f1Prf+kc/W58vU3riqd4qxr8x&#xA;P8K/4Vuf8VfWP0Jzi+sfVfrXqc+Y9Kn1L99/e8ePH9qmKvM4/wDlSPK2+p/4k9H0oPT+r/4i9D0v&#xA;Ri9P/I/ueHPjvT7ffFW4v+VK+lbU/wAT+n6Sej6n+JKcPrC8q8tq+px51/Zp+ziqY2X/ACpv6ov1&#xA;L9NcfqclPq/6c9f6tzj5cvT/AHvLnw48vjrWn7WKpVb/APKhfrdpw/T31nj+1/iClPWav1qvwfb5&#xA;V9X9n/J44qzf8rf8C8b/APwp+lOFY/rP6T/SXT0x6XD9I/Fx4dOOKs9xV2KuxV2KuxV2KuxV2Kux&#xA;VB6pw9FeXSrfy0p6bcuXLanGuYOvrhF957v5sru+lWyigPLn99f/AFn6x+lOafWvrXo8vT4/uvS9&#xA;D4PR+1x78uVd65s8nSuTTDr3qHnL/Cno2n+IfV4c5fq3o/WuX9xJ63P6r8Xp+jz5c/h8d6ZU2Jbq&#xA;v/Kuf8Wf6Zz/AMQetB6vo/XPt/uvQ9f0f3XD7PH1Pg+3/l4qt1b/AJVt+nx9d5/XfRsvU9H659R9&#xA;P6zP9S9f0P8AQ+X1n1eHqfFyp/k4qkEP/KkuLf71elwi4fWP0x6fLjael6PrfB6/+8393+85U/ar&#xA;iqyw/wCVZfpDVvrX1v8ARvqQ+l6v6R+rV+qPX1f2PVr6lPW+PlSnxcMVZUP+VffpPX+n131LH9O1&#xA;+sU5+u31Otfg/veX2Nv5tsVSm0/5VZ6af73en+i5/S+vfpen6M4xet6f1r/dfH068f64qqS/8q0+&#xA;sL9b/SHr1h9b65+l6/37fVfrXr/s+vy+r+tty/u98VZBF/hP63Y+n/vR9eH1L++/3s/RjU67f7wV&#xA;+18P+zxVkGKv/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:DocumentID>xmp.did:73675773-8934-488c-922c-dc83b1af9575</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:73675773-8934-488c-922c-dc83b1af9575</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:79AE110971C1DE11AAC7AC14CF027332</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:cc6fa5fa-1db8-2542-b9df-49db0aa3fed9</stRef:instanceID>
            <stRef:documentID>xmp.did:D9A7813747DCE311977DDAAC9B067286</stRef:documentID>
            <stRef:originalDocumentID>uuid:79AE110971C1DE11AAC7AC14CF027332</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F6CA1011EC72DF11ABD7ADA872BA7E6D</stEvt:instanceID>
                  <stEvt:when>2010-06-08T12:55:06+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:73675773-8934-488c-922c-dc83b1af9575</stEvt:instanceID>
                  <stEvt:when>2019-07-26T10:41:08+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <pdf:GTS_PDFXVersion>PDF/X-1:2001</pdf:GTS_PDFXVersion>
         <pdf:Trapped>False</pdf:Trapped>
         <pdf:GTS_PDFXConformance>PDF/X-1a:2001</pdf:GTS_PDFXConformance>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
         <pdfx:GTS_PDFXConformance>PDF/X-1a:2001</pdfx:GTS_PDFXConformance>
         <pdfx:GTS_PDFXVersion>PDF/X-1:2001</pdfx:GTS_PDFXVersion>
         <xmpRights:WebStatement>http://www.the-blueprints.com</xmpRights:WebStatement>
         <xmpRights:Marked>True</xmpRights:Marked>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>328.066966</stDim:w>
            <stDim:h>261.994855</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>ArialMT</stFnt:fontName>
                  <stFnt:fontFamily>Arial</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.01.2x</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Arial.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Process Cyan</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 877 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>40.000001</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>AutoCAD Color</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -725.65 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 725.65 li
878.286 725.65 li
878.286 0 li
cp
clp
163.199 132.303 mo
163.281 132.415 163.269 132.573 163.168 132.671 cv
162.804 133.021 li
162.694 133.127 162.515 133.124 162.408 133.013 cv
160.521 131.052 li
160.414 130.941 160.417 130.762 160.528 130.655 cv
160.891 130.307 li
161.002 130.2 161.181 130.203 161.287 130.314 cv
161.655 130.696 li
168.358 125.817 li
147.318 123.413 126.35 120.778 105.448 117.968 cv
91.4453 116.085 77.4717 114.124 63.5264 112.101 cv
61.2314 111.767 58.937 111.433 56.6431 111.096 cv
54.9145 115.563 li
54.8589 115.706 54.7651 115.822 54.6489 115.903 cv
53.4048 117.207 li
54.0664 118.055 54.4604 119.121 54.4604 120.279 cv
54.4604 123.042 52.2207 125.282 49.4575 125.282 cv
46.6953 125.282 44.4556 123.042 44.4556 120.279 cv
44.4556 117.516 46.6953 115.277 49.4575 115.277 cv
50.5337 115.277 51.5298 115.616 52.3452 116.193 cv
52.9927 115.441 li
52.915 115.284 52.8931 115.098 52.9443 114.917 cv
54.1191 110.72 li
46.584 109.578 39.0395 108.256 31.5015 106.859 cv
26.831 105.994 22.1631 105.1 17.5015 104.202 cv
14.6719 103.657 12.0918 102.543 9.85839 101.001 cv
7.31884 99.249 5.22704 96.9434 3.7246 94.2915 cv
3.07616 93.1465 2.53759 91.937 2.12011 90.6797 cv
1.51757 90.6797 li
1.13671 90.6797 .825184 90.3682 .825184 89.9883 cv
.825184 89.6074 1.13671 89.2969 1.51757 89.2969 cv
1.71532 89.2969 li
1.03417 86.6172 .893543 83.7559 1.39843 80.8633 cv
1.85057 78.2671 2.40184 75.6855 3.03807 73.1147 cv
3.16063 72.6177 3.28661 72.1216 3.41552 71.6255 cv
2.53417 71.6255 li
2.1538 71.6255 1.84227 71.3149 1.84227 70.9341 cv
1.84227 70.5547 2.1538 70.2437 2.53417 70.2437 cv
3.78514 70.2437 li
3.93505 69.6914 4.08934 69.1396 4.24706 68.5884 cv
5.1704 65.3579 6.21874 62.1416 7.36425 58.9336 cv
7.71093 57.9634 8.06249 57.0044 8.4204 56.0615 cv
9.13329 54.1738 9.8701 52.3477 10.6362 50.6118 cv
12.3452 46.7407 14.2012 43.3223 16.2783 40.689 cv
21.4175 34.1733 27.9131 32.4644 36.9043 40.6074 cv
38.0889 41.6797 39.3164 42.9233 40.5898 44.3496 cv
40.9521 44.7549 41.3125 45.1611 41.6709 45.5693 cv
41.6836 45.584 41.6963 45.5986 41.709 45.6143 cv
50.9346 56.1162 59.0088 67.4565 67.1123 79.7861 cv
68.8428 82.4194 71.312 84.1699 74.2099 84.8726 cv
75.1763 85.106 76.1899 85.2236 77.2392 85.2188 cv
105.439 85.0864 li
144.876 84.9019 li
157.039 84.8447 li
157.039 82.3359 li
144.413 82.3228 li
143.99 82.3228 143.99 81.5093 144.413 81.5093 cv
147.684 81.5093 li
147.684 79.7012 li
147.684 79.6001 147.768 79.5166 147.869 79.5166 cv
148.048 79.5166 li
148.15 79.5166 148.233 79.6001 148.233 79.7012 cv
148.233 81.5093 li
157.138 81.5093 li
157.181 81.4014 157.236 81.3003 157.303 81.207 cv
157.303 78.3696 li
157.303 78.2676 157.386 78.1841 157.488 78.1841 cv
158.083 78.1841 li
158.186 78.1841 158.269 78.2676 158.269 78.3696 cv
158.269 80.6265 li
158.329 80.6187 158.391 80.6143 158.454 80.6143 cv
160.523 80.6108 li
161.915 78.2988 164.427 76.7534 167.352 76.7534 cv
174.141 76.7544 li
178.681 76.7544 181.644 80.3462 181.644 84.73 cv
182.048 84.7275 li
183.92 84.7188 li
184.604 84.7163 li
187.531 84.7021 li
189.056 84.6948 li
192.127 84.6802 li
203.229 84.6284 li
206.238 84.6143 li
222.699 84.5371 li
234.28 84.4824 li
234.512 59.1509 li
234.521 58.0898 236.369 58.061 236.384 59.1426 cv
236.732 84.3945 li
254.261 84.3945 li
275.817 84.3945 li
277.525 84.3945 li
302.496 84.3945 li
304.56 84.3945 li
311.981 84.3945 319.1 87.5811 325.4 92.3188 cv
325.44 92.3491 325.578 92.4795 325.687 92.5796 cv
326.002 91.3252 326.412 90.1602 326.884 89.0527 cv
327.034 88.7017 327.556 88.7827 327.591 89.1636 cv
327.755 90.8828 327.887 92.6021 327.989 94.3213 cv
328.312 94.5483 li
335.113 100.389 340.722 107.958 344.486 114.759 cv
344.939 115.576 345.114 116.471 345.03 117.336 cv
344.926 118.419 344.416 119.454 343.538 120.226 cv
340.832 122.608 337.486 124.625 333.535 126.296 cv
331.955 126.964 330.278 127.577 328.506 128.136 cv
328.558 135.729 328.295 144.371 327.104 150.68 cv
327.034 151.055 326.546 151.141 326.396 150.789 cv
325.265 148.133 324.24 137.823 324.553 129.254 cv
321.564 130.01 318.348 130.635 314.91 131.134 cv
312.309 131.512 309.581 131.817 306.731 132.053 cv
306.731 133.108 li
306.731 133.937 305.903 134.5 305.133 134.195 cv
303.974 133.737 302.898 133.196 301.905 132.573 cv
289.861 133.019 277.514 133.082 265.012 132.828 cv
264.558 132.82 264.103 132.811 263.648 132.8 cv
249.164 132.482 234.481 131.746 219.834 130.697 cv
203.692 129.542 187.592 128.008 171.848 126.239 cv
171.782 126.232 171.615 126.225 171.461 126.217 cv
163.199 132.303 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
ef
54.1191 110.72 mo
52.9443 114.917 li
52.8931 115.098 52.915 115.284 52.9927 115.441 cv
52.3452 116.193 li
51.5298 115.616 50.5337 115.277 49.4575 115.277 cv
46.6953 115.277 44.4556 117.516 44.4556 120.279 cv
44.4556 123.042 46.6953 125.282 49.4575 125.282 cv
52.2207 125.282 54.4604 123.042 54.4604 120.279 cv
54.4604 119.121 54.0664 118.055 53.4048 117.207 cv
54.6489 115.903 li
54.7651 115.822 54.8589 115.706 54.9145 115.563 cv
56.6431 111.096 li
56.5659 111.085 56.4883 111.073 56.4106 111.062 cv
55.647 110.95 54.8833 110.836 54.1191 110.72 cv
cp
.619532 .538659 .52932 .256565 cmyk
ef
49.4575 118.205 mo
48.312 118.205 47.3843 119.133 47.3843 120.279 cv
47.3843 121.424 48.312 122.354 49.4575 122.354 cv
50.603 122.354 51.5322 121.424 51.5322 120.279 cv
51.5322 119.958 51.4585 119.654 51.3296 119.383 cv
50.4736 120.279 li
50.4736 120.84 50.0185 121.296 49.4575 121.296 cv
48.896 121.296 48.4409 120.84 48.4409 120.279 cv
48.4409 119.718 48.896 119.263 49.4575 119.263 cv
49.5351 119.263 49.6108 119.271 49.6836 119.288 cv
50.4131 118.438 li
50.1279 118.29 49.8022 118.205 49.4575 118.205 cv
cp
.0704051 .0445258 .0503853 0 cmyk
ef
147.684 81.5093 mo
144.413 81.5093 li
143.99 81.5093 143.99 82.3228 144.413 82.3228 cv
157.039 82.3359 li
157.039 84.8447 li
158.38 84.8389 li
164.888 84.8091 li
164.888 82.0293 li
164.888 81.916 164.874 81.8057 164.849 81.6997 cv
164.7 81.0786 164.139 80.6143 163.473 80.6143 cv
160.523 80.6108 li
158.454 80.6143 li
158.269 80.6265 li
158.269 78.3696 li
158.269 78.2676 158.186 78.1841 158.083 78.1841 cv
157.488 78.1841 li
157.386 78.1841 157.303 78.2676 157.303 78.3696 cv
157.303 81.207 li
157.236 81.3003 157.181 81.4014 157.138 81.5093 cv
148.233 81.5093 li
148.233 79.7012 li
148.233 79.6001 148.15 79.5166 148.048 79.5166 cv
147.869 79.5166 li
147.768 79.5166 147.684 79.6001 147.684 79.7012 cv
147.684 81.5093 li
cp
.619532 .538659 .52932 .256565 cmyk
ef
171.272 78.0928 mo
171.272 84.7778 li
180.098 84.7363 li
180.093 81.0845 177.542 78.0938 173.637 78.0938 cv
171.272 78.0928 li
cp
164.85 81.6997 mo
164.874 81.8057 164.888 81.916 164.888 82.0293 cv
164.888 84.8091 li
169.849 84.7842 li
169.849 81.6997 li
169.849 78.0928 li
167.788 78.0928 li
165.807 78.0928 164.045 78.8911 162.8 80.1709 cv
162.706 80.2676 162.539 80.4614 162.41 80.6143 cv
163.473 80.6143 li
164.139 80.6143 164.7 81.0786 164.85 81.6997 cv
164.85 81.6997 li
cp
.0704051 .0445258 .0503853 0 cmyk
ef
160.528 130.655 mo
160.417 130.762 160.414 130.941 160.521 131.052 cv
162.408 133.013 li
162.515 133.124 162.694 133.127 162.804 133.021 cv
163.168 132.671 li
163.269 132.573 163.281 132.415 163.199 132.303 cv
171.461 126.217 li
172.543 125.42 li
172.885 125.168 172.946 124.691 172.681 124.362 cv
172.263 123.843 li
172.016 123.536 171.572 123.477 171.253 123.708 cv
171.068 123.844 li
170.079 124.563 li
168.358 125.817 li
161.655 130.696 li
161.287 130.314 li
161.181 130.203 161.002 130.2 160.891 130.307 cv
160.528 130.655 li
cp
.619532 .538659 .52932 .256565 cmyk
ef
234.512 59.1509 mo
234.28 84.4824 li
234.256 87.186 li
234.253 87.5337 234.53 87.8115 234.877 87.8081 cv
236.164 87.793 li
236.506 87.7896 236.777 87.5117 236.771 87.1694 cv
236.732 84.3945 li
236.384 59.1426 li
236.369 58.061 234.521 58.0898 234.512 59.1509 cv
cp
ef
312.111 95.3076 mo
310.862 95.4219 309.611 95.7651 308.36 96.3481 cv
308.218 96.415 308.139 96.5215 308.139 96.6445 cv
308.139 96.7681 308.217 96.874 308.359 96.9414 cv
309.499 97.4766 310.721 97.8315 312.028 97.998 cv
314.735 98.3423 314.831 95.0571 312.111 95.3076 cv
cp
ef
312.111 106.452 mo
310.862 106.593 309.611 107.012 308.36 107.728 cv
308.218 107.809 308.139 107.939 308.139 108.091 cv
308.139 108.242 308.217 108.372 308.359 108.453 cv
309.499 109.109 310.721 109.544 312.028 109.749 cv
314.735 110.17 314.831 106.145 312.111 106.452 cv
cp
ef
312.111 119.365 mo
310.862 119.481 309.611 119.823 308.36 120.407 cv
308.218 120.474 308.139 120.579 308.139 120.703 cv
308.139 120.827 308.217 120.933 308.359 121 cv
309.499 121.535 310.721 121.89 312.028 122.056 cv
314.735 122.4 314.831 119.115 312.111 119.365 cv
cp
ef
321.985 108.923 mo
321.985 114.901 li
322.542 114.901 li
323.016 114.901 323.403 114.514 323.403 114.04 cv
323.403 113.235 li
324.751 113.235 li
324.957 113.621 325.363 113.884 325.828 113.884 cv
325.909 113.884 li
325.909 117.031 325.794 119.239 325.244 122.19 cv
324.867 124.209 324.648 126.651 324.553 129.254 cv
324.24 137.823 325.265 148.133 326.396 150.789 cv
326.546 151.141 327.034 151.055 327.104 150.68 cv
328.295 144.371 328.558 135.729 328.506 128.136 cv
328.466 122.209 328.235 116.922 328.106 113.884 cv
328.396 113.884 328.662 113.782 328.872 113.612 cv
329.032 113.483 329.159 113.313 329.238 113.12 cv
329.262 113.063 329.281 113.004 329.295 112.942 cv
329.281 113.004 329.263 113.063 329.24 113.121 cv
331.542 113.121 li
331.542 113.096 li
331.543 113.121 li
331.564 113.461 331.849 113.732 332.193 113.732 cv
333.535 113.732 li
333.895 113.732 334.186 113.439 334.186 113.081 cv
334.186 110.743 li
334.186 110.385 333.895 110.092 333.535 110.092 cv
332.193 110.092 li
331.849 110.092 331.563 110.363 331.544 110.704 cv
329.238 110.704 li
329.056 110.257 328.617 109.94 328.106 109.94 cv
328.154 108.799 328.19 107.658 328.214 106.517 cv
328.255 104.572 328.261 102.628 328.229 100.684 cv
328.193 98.563 328.114 96.4424 327.989 94.3213 cv
327.887 92.6021 327.755 90.8828 327.591 89.1636 cv
327.556 88.7827 327.034 88.7017 326.884 89.0527 cv
326.412 90.1602 326.002 91.3252 325.687 92.5796 cv
325.099 94.9082 324.836 97.5435 325.105 100.682 cv
325.196 101.74 325.347 102.855 325.567 104.035 cv
325.72 104.861 325.806 105.647 325.853 106.427 cv
325.923 107.58 325.909 108.716 325.909 109.94 cv
325.828 109.94 li
325.448 109.94 325.106 110.117 324.882 110.393 cv
325.127 110.591 li
324.75 110.591 li
323.403 110.591 li
323.403 109.785 li
323.403 109.571 323.326 109.376 323.197 109.226 cv
323.039 109.041 322.804 108.923 322.542 108.923 cv
321.985 108.923 li
cp
ef
320.681 92.6777 mo
321.967 93.9194 323.25 95.2397 324.524 96.6377 cv
325.022 97.1792 li
325.095 95.5049 325.332 93.9863 325.687 92.5796 cv
325.613 92.5112 325.525 92.4292 325.464 92.3745 cv
320.362 92.3745 li
320.469 92.4741 320.575 92.5752 320.681 92.6777 cv
cp
.0704051 .0445258 .0503853 0 cmyk
ef
327.989 94.3213 mo
328.114 96.4424 328.193 98.563 328.229 100.684 cv
334.524 100.684 li
332.593 98.5137 330.515 96.4404 328.312 94.5483 cv
327.989 94.3213 li
cp
ef
259.128 712.834 mo
259.92 712.834 li
259.92 713.735 li
.619532 .538659 .52932 .256565 cmyk
ef
259.128 713.735 mo
259.128 712.834 li
259.128 713.735 li
cp
ef
232.612 712.834 mo
233.404 712.834 li
233.404 713.735 li
ef
232.612 713.735 mo
232.612 712.834 li
232.612 713.735 li
cp
ef
287.846 401.498 mo
287.846 431.156 li
305.452 431.532 321.208 432.917 331.286 437.397 cv
332.448 437.913 333.381 438.596 334.167 439.512 cv
334.391 439.774 334.603 440.053 334.805 440.354 cv
340.016 448.11 li
340.392 448.67 340.57 449.25 340.57 449.926 cv
340.57 450.204 li
340.57 450.481 li
340.57 451.155 340.392 451.737 340.016 452.297 cv
334.805 460.053 li
334.603 460.354 334.391 460.633 334.167 460.895 cv
333.381 461.811 332.447 462.493 331.286 463.01 cv
321.208 467.491 305.452 468.875 287.846 469.25 cv
287.846 498.909 li
289.694 498.887 291.564 498.889 293.454 498.915 cv
298.317 498.977 303.307 499.186 308.371 499.512 cv
309.011 499.553 309.855 499.62 310.776 499.745 cv
313.866 500.161 317.816 501.215 317.816 504.034 cv
317.816 515.022 li
320.073 515.022 li
320.073 514.004 li
320.073 513.512 320.476 513.11 320.968 513.11 cv
321.252 513.11 li
321.252 507.543 li
321.252 506.028 321.146 504.733 320.898 503.237 cv
319.058 492.092 319.998 482.764 322.06 474.165 cv
322.156 473.764 322.742 473.801 322.787 474.211 cv
324.061 485.971 324.077 499.27 323.651 513.11 cv
324.081 513.11 324.443 513.414 324.527 513.821 cv
326.518 513.821 li
326.776 513.821 326.986 514.032 326.986 514.289 cv
326.986 514.877 li
326.986 515.135 326.776 515.346 326.518 515.346 cv
324.546 515.346 li
324.546 516.038 li
324.931 516.038 li
329.584 516.038 li
329.889 516.038 330.138 516.286 330.138 516.592 cv
330.138 518.819 li
330.138 519.123 329.889 519.372 329.584 519.372 cv
326.884 519.372 li
326.884 521.131 li
326.884 521.707 326.415 522.178 325.838 522.178 cv
323.795 522.178 li
323.878 528.59 323.605 534.645 322.811 540.178 cv
322.765 540.495 322.34 540.534 322.216 540.241 cv
318.896 532.317 320.968 529.36 320.968 522 cv
320.968 519.778 li
317.816 519.778 li
317.816 531.805 li
317.816 535.438 311.72 536.206 308.951 536.247 cv
301.521 536.35 294.463 536.243 287.846 535.897 cv
287.212 535.864 286.583 535.829 285.957 535.791 cv
284.617 547.973 li
282.553 566.729 li
282.009 571.678 li
281.696 574.522 li
280.879 581.946 li
277.546 612.237 li
276.729 619.661 li
275.651 629.461 li
274.671 638.36 li
274.595 639.065 li
274.76 639.049 274.927 639.039 275.093 639.032 cv
275.41 639.018 275.672 639.266 275.672 639.584 cv
275.672 639.84 li
276.379 639.84 li
276.685 639.84 276.934 640.086 276.934 640.393 cv
276.934 642.467 li
276.934 642.772 276.685 643.02 276.379 643.02 cv
275.672 643.02 li
275.672 643.276 li
275.672 643.596 275.404 643.85 275.084 643.827 cv
274.751 643.805 274.414 643.768 274.083 643.711 cv
273.99 644.555 li
274.154 644.539 274.318 644.53 274.482 644.522 cv
274.8 644.506 275.063 644.756 275.063 645.075 cv
275.063 645.329 li
275.769 645.329 li
276.075 645.329 276.323 645.577 276.323 645.883 cv
276.323 647.957 li
276.323 648.262 276.075 648.512 275.769 648.512 cv
275.063 648.512 li
275.063 648.766 li
275.063 649.088 274.793 649.338 274.473 649.319 cv
274.143 649.297 273.808 649.258 273.479 649.204 cv
271.389 668.19 li
270.504 676.231 268.59 682.278 265.991 686.5 cv
265.554 687.209 265.097 687.87 264.623 688.477 cv
263.669 689.7 262.644 690.715 261.561 691.532 cv
261.109 691.873 260.648 692.178 260.178 692.452 cv
256.251 694.721 251.69 694.622 247.055 692.43 cv
245.006 691.459 242.942 690.082 240.915 688.317 cv
240.169 687.672 239.431 686.975 238.699 686.227 cv
236.612 684.092 234.583 681.549 232.665 678.622 cv
230.513 675.334 228.502 671.563 226.71 667.35 cv
225.569 664.661 224.517 661.791 223.573 658.752 cv
222.748 656.09 222.006 653.297 221.363 650.379 cv
220.972 648.608 220.618 646.789 220.302 644.928 cv
219.852 642.264 li
217.948 631.038 li
216.52 622.614 li
215.009 613.688 li
213.587 605.291 li
212.779 600.524 li
209.63 581.94 li
206.769 565.057 li
203.875 547.973 li
200.675 529.094 li
200.123 525.829 li
195.516 498.633 li
193.749 488.221 li
193.539 486.975 193.28 485.795 192.977 484.676 cv
188.986 469.952 177.185 465.95 162.112 465.497 cv
162.104 465.497 li
160.394 465.461 li
156.581 465.381 li
68.9316 457.065 li
68.4448 457.018 67.999 456.948 67.5576 456.846 cv
66.4341 466.327 66.4819 480.749 64.5561 493.575 cv
62.9331 504.385 59.9077 514.063 53.5981 518.692 cv
48.748 522.25 43.2515 522.313 38.1055 519.684 cv
34.3032 517.745 30.6933 514.334 27.6767 509.784 cv
23.5254 503.522 20.4971 495.094 19.6396 485.35 cv
19.478 483.512 19.3935 481.629 19.3931 479.706 cv
18.2827 479.706 li
17.7744 479.706 17.3594 479.291 17.3594 478.784 cv
17.3594 463.897 li
17.3594 462.252 18.1489 460.836 19.5513 459.973 cv
21.4263 458.817 li
29.8633 453.614 li
31.6777 452.495 li
21.9424 451.963 11.2871 451.551 .960437 451.131 cv
.122547 451.096 .122547 449.311 .960437 449.278 cv
11.2871 448.856 21.9424 448.444 31.6777 447.913 cv
29.8633 446.793 li
21.4263 441.592 li
19.5513 440.436 li
18.1489 439.571 17.3594 438.157 17.3594 436.51 cv
17.3594 421.624 li
17.3594 421.115 17.7744 420.702 18.2827 420.702 cv
19.3931 420.702 li
19.3935 418.777 19.478 416.895 19.6396 415.058 cv
20.4971 405.313 23.5249 396.887 27.6758 390.624 cv
30.6933 386.072 34.3032 382.663 38.105 380.723 cv
43.2515 378.095 48.748 378.157 53.5981 381.716 cv
59.9277 386.359 62.9497 396.034 64.5664 406.833 cv
66.4888 419.676 66.4243 434.108 67.5732 443.557 cv
68.0093 443.457 68.4507 443.387 68.9316 443.342 cv
156.581 435.026 li
160.394 434.946 li
160.46 434.945 li
161.985 434.913 li
161.991 434.913 161.997 434.913 162.002 434.913 cv
177.128 434.477 188.976 430.49 192.977 415.731 cv
193.28 414.612 193.539 413.431 193.749 412.185 cv
195.516 401.773 li
200.123 374.578 li
200.675 371.313 li
203.875 352.434 li
206.769 335.351 li
209.63 318.469 li
212.779 299.884 li
213.587 295.114 li
215.009 286.719 li
216.52 277.794 li
217.948 269.37 li
219.852 258.144 li
220.302 255.48 li
220.618 253.618 220.973 251.799 221.363 250.026 cv
222.007 247.109 222.748 244.317 223.573 241.655 cv
224.517 238.616 225.569 235.747 226.71 233.058 cv
228.502 228.844 230.513 225.073 232.665 221.786 cv
234.583 218.858 236.613 216.314 238.699 214.181 cv
239.431 213.433 240.17 212.734 240.915 212.089 cv
242.943 210.326 245.006 208.948 247.055 207.979 cv
251.69 205.786 256.251 205.687 260.178 207.957 cv
260.648 208.229 261.109 208.535 261.561 208.875 cv
262.644 209.693 263.668 210.709 264.623 211.93 cv
265.096 212.539 265.553 213.197 265.99 213.908 cv
268.589 218.129 270.504 224.176 271.389 232.218 cv
273.479 251.205 li
273.808 251.148 274.143 251.11 274.473 251.089 cv
274.793 251.068 275.063 251.32 275.063 251.642 cv
275.063 251.896 li
275.769 251.896 li
276.075 251.896 276.323 252.145 276.323 252.45 cv
276.323 254.524 li
276.323 254.829 276.075 255.078 275.769 255.078 cv
275.063 255.078 li
275.063 255.333 li
275.063 255.651 274.8 255.9 274.482 255.886 cv
274.318 255.878 274.154 255.867 273.99 255.852 cv
274.083 256.697 li
274.414 256.639 274.751 256.6 275.084 256.579 cv
275.404 256.559 275.672 256.811 275.672 257.132 cv
275.672 257.386 li
276.379 257.386 li
276.685 257.386 276.934 257.634 276.934 257.94 cv
276.934 260.015 li
276.934 260.319 276.685 260.568 276.379 260.568 cv
275.672 260.568 li
275.672 260.823 li
275.672 261.142 275.41 261.391 275.093 261.376 cv
274.927 261.368 274.76 261.356 274.595 261.341 cv
274.671 262.047 li
275.651 270.946 li
276.729 280.748 li
277.546 288.172 li
280.879 318.462 li
281.696 325.886 li
282.009 328.729 li
282.553 333.679 li
284.617 352.434 li
285.957 364.616 li
286.583 364.579 287.212 364.543 287.846 364.511 cv
294.463 364.163 301.521 364.057 308.951 364.16 cv
311.72 364.2 317.816 364.97 317.816 368.6 cv
317.816 380.628 li
320.968 380.628 li
320.968 378.407 li
320.968 371.048 318.896 368.09 322.216 360.167 cv
322.34 359.873 322.765 359.914 322.811 360.229 cv
323.605 365.762 323.878 371.816 323.795 378.229 cv
325.838 378.229 li
326.415 378.229 326.884 378.699 326.884 379.275 cv
326.884 381.035 li
329.584 381.035 li
329.889 381.035 330.138 381.284 330.138 381.591 cv
330.138 383.815 li
330.138 384.121 329.889 384.368 329.584 384.368 cv
324.931 384.368 li
324.546 384.368 li
324.546 385.062 li
326.518 385.062 li
326.776 385.062 326.986 385.272 326.986 385.529 cv
326.986 386.119 li
326.986 386.377 326.776 386.587 326.518 386.587 cv
324.527 386.587 li
324.443 386.991 324.081 387.298 323.651 387.298 cv
324.077 401.137 324.061 414.436 322.787 426.196 cv
322.742 426.605 322.156 426.643 322.06 426.243 cv
319.998 417.644 319.058 408.314 320.898 397.171 cv
321.146 395.674 321.252 394.38 321.252 392.863 cv
321.252 387.298 li
320.968 387.298 li
320.476 387.298 320.073 386.896 320.073 386.404 cv
320.073 385.386 li
317.816 385.386 li
317.816 396.373 li
317.816 399.191 313.865 400.245 310.776 400.662 cv
309.855 400.787 309.011 400.854 308.371 400.895 cv
303.307 401.22 298.317 401.43 293.454 401.493 cv
291.564 401.518 289.694 401.52 287.846 401.498 cv
cp
0 0 0 0 cmyk
ef
275.063 251.896 mo
275.063 255.078 li
275.769 255.078 li
276.075 255.078 276.323 254.829 276.323 254.524 cv
276.323 252.45 li
276.323 252.145 276.075 251.896 275.769 251.896 cv
275.063 251.896 li
cp
.0704051 .0445258 .0503853 0 cmyk
ef
275.672 257.386 mo
275.672 260.568 li
276.379 260.568 li
276.685 260.568 276.934 260.319 276.934 260.015 cv
276.934 257.94 li
276.934 257.634 276.685 257.386 276.379 257.386 cv
275.672 257.386 li
cp
ef
309.58 370.299 mo
309.58 367.721 303.562 369.087 303.562 370.299 cv
303.562 371.508 309.58 372.874 309.58 370.299 cv
cp
.619532 .538659 .52932 .256565 cmyk
ef
309.58 382.804 mo
309.58 379.583 303.562 381.291 303.562 382.804 cv
303.562 384.316 309.58 386.023 309.58 382.804 cv
cp
ef
309.58 395.146 mo
309.58 392.57 303.562 393.936 303.562 395.146 cv
303.562 396.355 309.58 397.724 309.58 395.146 cv
cp
ef
320.968 380.628 mo
317.816 380.628 li
317.816 385.386 li
320.073 385.386 li
320.073 386.404 li
320.073 386.896 320.476 387.298 320.968 387.298 cv
321.252 387.298 li
321.252 392.863 li
321.252 394.38 321.146 395.674 320.898 397.171 cv
319.058 408.314 319.998 417.644 322.06 426.243 cv
322.156 426.643 322.742 426.605 322.787 426.196 cv
324.061 414.436 324.077 401.137 323.651 387.298 cv
324.081 387.298 324.443 386.991 324.527 386.587 cv
326.518 386.587 li
326.776 386.587 326.986 386.377 326.986 386.119 cv
326.986 385.529 li
326.986 385.272 326.776 385.062 326.518 385.062 cv
324.546 385.062 li
324.546 384.368 li
324.931 384.368 li
329.584 384.368 li
329.889 384.368 330.138 384.121 330.138 383.815 cv
330.138 381.591 li
330.138 381.284 329.889 381.035 329.584 381.035 cv
326.884 381.035 li
326.884 379.275 li
326.884 378.699 326.415 378.229 325.838 378.229 cv
323.795 378.229 li
323.878 371.816 323.605 365.762 322.811 360.229 cv
322.765 359.914 322.34 359.873 322.216 360.167 cv
318.896 368.09 320.968 371.048 320.968 378.407 cv
320.968 380.628 li
cp
ef
162.256 439.575 mo
158.814 441.467 156.373 444.913 155.917 448.862 cv
155.866 449.303 155.84 449.75 155.84 450.204 cv
155.84 450.657 155.866 451.104 155.917 451.545 cv
156.117 453.282 156.702 454.92 157.586 456.372 cv
158.713 458.223 160.326 459.77 162.254 460.829 cv
163.893 461.731 165.758 462.28 167.744 462.366 cv
168.284 462.368 li
168.705 462.37 li
169.994 462.327 171.233 462.088 172.394 461.682 cv
172.404 461.682 li
174.711 460.877 176.708 459.42 178.167 457.551 cv
179.775 455.495 180.73 452.938 180.73 450.204 cv
180.73 444.987 177.253 440.416 172.404 438.725 cv
172.394 438.725 li
171.233 438.319 169.994 438.079 168.705 438.037 cv
168.701 438.037 li
168.284 438.038 li
167.773 438.04 li
165.777 438.122 163.902 438.67 162.256 439.575 cv
cp
.0704051 .0445258 .0503853 0 cmyk
ef
191.669 434.957 mo
188.539 434.957 li
188.336 434.957 188.171 435.123 188.171 435.325 cv
188.171 435.568 li
188.171 435.77 188.336 435.935 188.539 435.935 cv
191.669 435.935 li
191.87 435.935 192.036 435.77 192.036 435.568 cv
192.036 435.325 li
192.036 435.123 191.87 434.957 191.669 434.957 cv
cp
ef
202.183 434.957 mo
194.883 434.957 li
194.681 434.957 194.517 435.123 194.517 435.325 cv
194.517 435.568 li
194.517 435.77 194.681 435.935 194.883 435.935 cv
202.183 435.935 li
202.383 435.935 202.549 435.77 202.549 435.568 cv
202.549 435.325 li
202.549 435.123 202.383 434.957 202.183 434.957 cv
cp
ef
251.717 435.796 mo
245.251 435.796 li
244.937 435.796 244.682 436.052 244.682 436.365 cv
244.682 437.057 li
244.682 437.369 244.937 437.625 245.251 437.625 cv
251.717 437.625 li
252.031 437.625 252.287 437.369 252.287 437.057 cv
252.287 436.365 li
252.287 436.052 252.031 435.796 251.717 435.796 cv
cp
ef
282.749 434.515 mo
278.192 434.515 li
277.924 434.515 277.705 434.734 277.705 435.002 cv
277.705 435.595 li
277.705 435.861 277.924 436.08 278.192 436.08 cv
282.749 436.08 li
283.018 436.08 283.235 435.861 283.235 435.595 cv
283.235 435.002 li
283.235 434.734 283.018 434.515 282.749 434.515 cv
cp
ef
290.487 433.136 mo
286.599 433.136 li
286.125 433.136 285.737 433.521 285.737 433.996 cv
285.737 435.568 li
285.737 436.042 286.125 436.429 286.599 436.429 cv
290.487 436.429 li
290.961 436.429 291.35 436.042 291.35 435.568 cv
291.35 433.996 li
291.35 433.521 290.961 433.136 290.487 433.136 cv
cp
ef
297.633 433.766 mo
292.711 433.766 li
292.331 433.766 292.019 434.077 292.019 434.457 cv
292.019 435.718 li
292.019 436.098 292.331 436.409 292.711 436.409 cv
297.633 436.409 li
298.013 436.409 298.325 436.098 298.325 435.718 cv
298.325 434.457 li
298.325 434.077 298.013 433.766 297.633 433.766 cv
cp
ef
301.049 465.012 mo
301.049 466.639 li
307.674 466.442 313.678 465.866 318.68 464.674 cv
322.968 463.653 326.519 462.18 329.094 460.11 cv
334.992 451.948 li
335.304 451.516 335.304 448.891 334.992 448.459 cv
329.094 440.297 li
326.519 438.227 322.968 436.755 318.68 435.732 cv
313.678 434.542 307.674 433.964 301.049 433.768 cv
301.049 435.394 li
301.049 437.347 li
304.439 437.527 307.202 437.555 309.755 438.331 cv
309.755 438.331 li
311.76 438.942 313.636 440.014 315.585 441.989 cv
320.453 448.459 li
320.718 448.809 320.718 451.598 320.453 451.948 cv
315.585 458.418 li
313.637 460.391 311.761 461.463 309.756 462.075 cv
309.754 462.075 li
307.202 462.852 304.439 462.877 301.049 463.059 cv
301.049 465.012 li
cp
ef
275.063 648.51 mo
275.063 645.329 li
275.769 645.329 li
276.075 645.329 276.323 645.579 276.323 645.883 cv
276.323 647.957 li
276.323 648.262 276.075 648.51 275.769 648.51 cv
275.063 648.51 li
cp
ef
275.672 643.022 mo
275.672 639.838 li
276.379 639.838 li
276.685 639.838 276.934 640.088 276.934 640.391 cv
276.934 642.467 li
276.934 642.772 276.685 643.022 276.379 643.022 cv
275.672 643.022 li
cp
ef
309.58 530.108 mo
309.58 532.686 303.562 531.321 303.562 530.108 cv
303.562 528.899 309.58 527.534 309.58 530.108 cv
cp
.619532 .538659 .52932 .256565 cmyk
ef
309.58 517.604 mo
309.58 520.825 303.562 519.116 303.562 517.604 cv
303.562 516.09 309.58 514.383 309.58 517.604 cv
cp
ef
309.58 505.26 mo
309.58 507.836 303.562 506.471 303.562 505.26 cv
303.562 504.051 309.58 502.684 309.58 505.26 cv
cp
ef
320.968 519.78 mo
317.816 519.78 li
317.816 515.022 li
320.073 515.022 li
320.073 514.002 li
320.073 513.51 320.476 513.11 320.968 513.11 cv
321.252 513.11 li
321.252 507.543 li
321.252 506.028 321.146 504.733 320.898 503.237 cv
319.058 492.092 319.998 482.764 322.06 474.165 cv
322.156 473.764 322.742 473.801 322.787 474.211 cv
324.061 485.971 324.077 499.27 323.651 513.11 cv
324.081 513.11 324.443 513.416 324.527 513.821 cv
326.518 513.821 li
326.776 513.821 326.986 514.03 326.986 514.288 cv
326.986 514.877 li
326.986 515.135 326.776 515.344 326.518 515.344 cv
324.546 515.344 li
324.546 516.039 li
324.931 516.039 li
329.584 516.039 li
329.889 516.039 330.138 516.286 330.138 516.592 cv
330.138 518.817 li
330.138 519.123 329.889 519.372 329.584 519.372 cv
326.884 519.372 li
326.884 521.131 li
326.884 521.707 326.415 522.178 325.838 522.178 cv
323.795 522.178 li
323.878 528.59 323.605 534.645 322.811 540.178 cv
322.765 540.493 322.34 540.534 322.216 540.241 cv
318.896 532.317 320.968 529.36 320.968 522 cv
320.968 519.78 li
cp
ef
191.669 465.45 mo
188.539 465.45 li
188.336 465.45 188.171 465.284 188.171 465.082 cv
188.171 464.838 li
188.171 464.637 188.336 464.473 188.539 464.473 cv
191.669 464.473 li
191.87 464.473 192.036 464.637 192.036 464.838 cv
192.036 465.082 li
192.036 465.284 191.87 465.45 191.669 465.45 cv
cp
.0704051 .0445258 .0503853 0 cmyk
ef
202.183 465.45 mo
194.883 465.45 li
194.681 465.45 194.517 465.284 194.517 465.082 cv
194.517 464.838 li
194.517 464.637 194.681 464.473 194.883 464.473 cv
202.183 464.473 li
202.383 464.473 202.549 464.637 202.549 464.838 cv
202.549 465.082 li
202.549 465.284 202.383 465.45 202.183 465.45 cv
cp
ef
251.717 464.612 mo
245.251 464.612 li
244.937 464.612 244.682 464.356 244.682 464.041 cv
244.682 463.35 li
244.682 463.038 244.937 462.782 245.251 462.782 cv
251.717 462.782 li
252.031 462.782 252.287 463.038 252.287 463.35 cv
252.287 464.041 li
252.287 464.356 252.031 464.612 251.717 464.612 cv
cp
ef
282.749 465.893 mo
278.192 465.893 li
277.924 465.893 277.705 465.672 277.705 465.405 cv
277.705 464.813 li
277.705 464.545 277.924 464.327 278.192 464.327 cv
282.749 464.327 li
283.018 464.327 283.235 464.545 283.235 464.813 cv
283.235 465.405 li
283.235 465.672 283.018 465.893 282.749 465.893 cv
cp
ef
290.487 467.272 mo
286.599 467.272 li
286.125 467.272 285.737 466.885 285.737 466.411 cv
285.737 464.838 li
285.737 464.366 286.125 463.979 286.599 463.979 cv
290.487 463.979 li
290.961 463.979 291.35 464.366 291.35 464.838 cv
291.35 466.411 li
291.35 466.885 290.961 467.272 290.487 467.272 cv
cp
ef
297.633 466.641 mo
292.711 466.641 li
292.331 466.641 292.019 466.331 292.019 465.95 cv
292.019 464.69 li
292.019 464.309 292.331 463.999 292.711 463.999 cv
297.633 463.999 li
298.013 463.999 298.325 464.309 298.325 464.69 cv
298.325 465.95 li
298.325 466.331 298.013 466.641 297.633 466.641 cv
cp
ef
236.06 445.354 mo
233.539 445.354 li
233.226 445.354 232.969 445.61 232.969 445.924 cv
232.969 446.534 li
232.969 446.848 233.226 447.104 233.539 447.104 cv
236.06 447.104 li
236.373 447.104 236.629 446.848 236.629 446.534 cv
236.629 445.924 li
236.629 445.61 236.373 445.354 236.06 445.354 cv
cp
.619532 .538659 .52932 .256565 cmyk
ef
627.353 77.8965 mo
627.531 59.3833 li
627.533 59.0703 627.753 58.8901 628.007 58.8442 cv
628.009 58.8428 li
628.353 58.7798 628.755 58.9595 628.759 59.3818 cv
628.982 77.0176 li
631.001 77.0176 li
631.121 68.394 631.296 60.1284 631.667 53.0815 cv
631.947 47.7231 632.339 43.0693 632.904 39.4971 cv
633.837 33.5967 634.185 33.4556 635.136 39.4531 cv
636.449 47.7178 636.835 61.8105 637.048 77.0176 cv
639.136 77.0176 li
639.55 77.0176 639.763 77.4204 639.777 77.8345 cv
642.927 77.9282 645.466 80.1577 645.466 83.4268 cv
645.466 84.7051 li
645.802 84.7075 646.076 84.9824 646.076 85.3208 cv
646.076 85.5112 li
646.076 85.8501 645.8 86.1274 645.462 86.1274 cv
645.464 87.2207 li
664.166 87.6699 li
664.234 87.5361 664.38 87.4424 664.56 87.4746 cv
665.001 87.5557 665.437 87.6421 665.865 87.7349 cv
679.226 88.0713 li
700.16 88.5991 li
708.498 88.8091 708.304 89.272 705.275 89.7275 cv
701.683 90.2671 694.105 90.7959 692.031 90.8784 cv
676.173 91.5083 li
680.078 93.5708 683.501 96.1211 686.941 98.7949 cv
690.371 94.2847 695.791 91.3735 701.892 91.3735 cv
708.41 91.3735 714.152 94.6938 717.517 99.7378 cv
723.267 95.6182 729.38 91.4829 739.806 88.5508 cv
740.156 88.4512 740.427 88.8677 740.189 89.1455 cv
736.222 93.8125 731.919 96.8252 727.392 99.1836 cv
731.578 98.9189 li
784.605 95.5708 li
822.048 93.2065 li
835.648 92.3477 li
843.701 91.8384 li
843.701 91.8394 li
850 91.4419 li
850 91.4414 li
862.339 90.6626 li
865.017 90.4932 li
867.427 90.3408 885.742 91.3135 873.095 93.1748 cv
872.208 93.3027 li
870.255 93.5874 li
866.406 94.1479 li
866.408 94.1479 li
864.521 94.4224 li
862.558 94.708 li
830.875 99.3184 li
816.81 101.364 li
813.718 101.814 li
797.384 104.191 li
784.605 106.051 li
733.121 113.542 li
719.896 115.466 li
719.117 118.103 717.775 120.497 716.009 122.51 cv
718.093 125.265 li
718.361 125.604 718.308 126.096 717.976 126.373 cv
715.613 128.338 li
715.267 128.625 714.761 128.575 714.48 128.227 cv
713.025 126.437 li
713.148 151.45 li
713.152 151.862 712.824 152.192 712.41 152.192 cv
710.876 152.192 li
710.876 155.709 li
710.876 156.15 li
710.876 156.59 710.515 156.951 710.076 156.951 cv
708.789 156.951 li
708.386 156.951 708.052 156.652 707.996 156.267 cv
705.875 156.267 li
705.875 165.592 li
705.875 167.17 704.583 168.46 703.005 168.46 cv
700.363 168.46 li
698.787 168.46 697.496 167.17 697.496 165.592 cv
697.496 156.267 li
695.609 156.267 li
695.535 156.633 695.21 156.909 694.824 156.909 cv
693.576 156.909 li
693.136 156.909 692.777 156.55 692.777 156.109 cv
692.777 155.425 li
692.777 151.948 li
691.496 151.948 li
691.087 151.948 690.757 151.616 690.757 151.209 cv
690.757 126.296 li
690.033 127.034 li
688.953 128.131 li
688.652 128.44 688.156 128.452 687.837 128.157 cv
685.587 126.065 li
685.257 125.761 685.242 125.251 685.554 124.928 cv
686.681 123.741 li
687.814 122.556 li
687.357 122.039 686.929 121.497 686.533 120.933 cv
685.693 121.157 li
684.55 121.463 683.144 119.46 684.082 118.524 cv
684.769 117.837 li
684.617 117.504 684.476 117.165 684.347 116.821 cv
652.363 118.092 li
652.363 121.591 li
652.363 126.857 li
652.363 129.078 651.013 130.993 649.093 131.825 cv
648.435 132.11 647.712 132.268 646.953 132.268 cv
642.439 132.268 li
635.056 132.268 li
635.056 141.17 li
635.056 141.407 634.863 141.601 634.625 141.601 cv
633.423 141.601 li
633.185 141.601 632.992 141.407 632.992 141.17 cv
632.992 132.268 li
621.097 132.268 li
619.292 132.268 617.689 131.378 616.707 130.014 cv
616.173 131.165 li
616.173 131.458 615.939 131.694 615.646 131.694 cv
615.353 131.694 615.119 131.458 615.119 131.165 cv
615.119 131.035 615.166 130.916 615.244 130.824 cv
615.998 128.668 li
615.794 128.102 615.685 127.492 615.685 126.857 cv
615.685 121.591 li
615.685 118.092 li
583.703 116.821 li
583.572 117.165 583.431 117.504 583.281 117.837 cv
583.966 118.524 li
584.904 119.46 583.498 121.463 582.355 121.157 cv
581.515 120.933 li
581.119 121.498 580.691 122.04 580.234 122.556 cv
581.365 123.741 li
582.496 124.928 li
582.804 125.251 582.789 125.761 582.462 126.065 cv
580.208 128.157 li
579.892 128.452 579.398 128.44 579.093 128.131 cv
578.013 127.034 li
577.291 126.296 li
577.291 151.209 li
577.291 151.616 576.958 151.948 576.552 151.948 cv
575.271 151.948 li
575.271 155.425 li
575.271 156.109 li
575.271 156.55 574.912 156.909 574.472 156.909 cv
573.224 156.909 li
572.837 156.909 572.513 156.633 572.439 156.267 cv
570.55 156.267 li
570.55 165.592 li
570.55 167.17 569.263 168.46 567.685 168.46 cv
565.042 168.46 li
563.466 168.46 562.173 167.17 562.173 165.592 cv
562.173 156.267 li
560.052 156.267 li
559.996 156.652 559.662 156.951 559.259 156.951 cv
557.972 156.951 li
557.531 156.951 557.173 156.59 557.173 156.15 cv
557.173 155.709 li
557.173 152.192 li
555.638 152.192 li
555.224 152.192 554.898 151.862 554.898 151.45 cv
555.025 126.5 li
553.568 128.227 li
553.285 128.575 552.779 128.625 552.435 128.338 cv
550.074 126.373 li
549.74 126.096 549.687 125.604 549.955 125.265 cv
552.054 122.527 li
550.281 120.511 548.935 118.11 548.154 115.466 cv
534.927 113.542 li
483.443 106.051 li
470.664 104.191 li
454.328 101.814 li
446.001 100.602 li
435.276 99.042 li
405.485 94.707 li
397.792 93.5874 li
395.839 93.3027 li
394.953 93.1748 li
382.306 91.3135 400.619 90.3408 403.031 90.4932 cv
405.707 90.6626 li
418.049 91.4414 li
424.347 91.8384 li
435.742 92.5586 li
435.751 92.5591 435.76 92.5596 435.768 92.5601 cv
446.001 93.2065 li
483.443 95.5708 li
536.47 98.9189 li
540.656 99.1836 li
536.128 96.8252 531.826 93.8125 527.859 89.1455 cv
527.625 88.8677 527.892 88.4512 528.24 88.5508 cv
538.666 91.4829 544.781 95.6182 550.531 99.7378 cv
553.898 94.6938 559.638 91.3735 566.156 91.3735 cv
572.257 91.3735 577.679 94.2847 581.105 98.7949 cv
584.546 96.1216 587.97 93.5713 591.873 91.5083 cv
576.015 90.8784 li
573.941 90.7959 566.363 90.2671 562.771 89.7275 cv
559.742 89.272 559.55 88.8091 567.886 88.5991 cv
588.822 88.0713 li
602.183 87.7349 li
602.611 87.6421 603.046 87.5557 603.488 87.4746 cv
603.667 87.4424 603.814 87.5361 603.882 87.6699 cv
622.583 87.2207 li
622.587 86.1274 li
622.248 86.1274 621.97 85.8501 621.97 85.5112 cv
621.97 85.3208 li
621.97 84.9829 622.244 84.708 622.58 84.7051 cv
622.58 84.1509 li
622.58 83.4268 li
622.58 80.7031 624.345 78.7002 626.753 78.0542 cv
626.847 78.0293 627.103 77.9609 627.353 77.8965 cv
cp
599.693 91.8198 mo
595.318 95.4492 591.275 97.812 587.375 99.7466 cv
615.966 99.6416 li
616.085 98.8862 616.242 98.1548 616.437 97.4487 cv
616.929 95.6577 617.654 94.0269 618.591 92.5718 cv
599.693 91.8198 li
599.693 91.8198 li
cp
649.457 92.5723 mo
650.394 94.0269 651.119 95.6582 651.609 97.4487 cv
651.804 98.1553 651.962 98.8862 652.082 99.6416 cv
680.673 99.7466 li
676.773 97.8115 672.73 95.4492 668.355 91.8198 cv
649.457 92.5723 li
649.457 92.5723 li
cp
0 0 0 0 cmyk
ef
627.531 59.3833 mo
627.353 77.8965 li
627.289 84.7051 li
629.076 84.7051 li
629.001 78.7261 li
628.982 77.0176 li
628.759 59.3818 li
628.755 58.9595 628.353 58.7798 628.007 58.8442 cv
627.753 58.8901 627.533 59.0703 627.531 59.3833 cv
cp
628.009 58.8428 mo
628.009 58.8428 li
628.009 58.8428 li
cp
.619532 .538659 .52932 .256565 cmyk
ef
639.751 84.7051 mo
645.462 84.7051 li
645.462 84.7051 645.464 84.7051 645.466 84.7051 cv
645.466 83.4268 li
645.466 80.1577 642.927 77.9282 639.777 77.8345 cv
639.789 78.2739 639.576 78.7261 639.136 78.7261 cv
638.857 78.7261 li
629.001 78.7261 li
629.076 84.7051 li
631.984 84.7051 li
631.988 84.7046 631.99 84.7041 631.994 84.7051 cv
632.306 84.667 632.615 84.6377 632.923 84.6167 cv
633.662 84.5664 634.392 84.564 635.125 84.6094 cv
635.47 84.6304 635.818 84.6626 636.166 84.7051 cv
639.751 84.7051 li
cp
626.753 78.0542 mo
624.345 78.7002 622.58 80.7031 622.58 83.4268 cv
622.58 84.1509 li
622.58 84.7051 li
622.582 84.7051 622.583 84.7051 622.587 84.7051 cv
627.289 84.7051 li
627.353 77.8965 li
626.753 78.0542 li
626.753 78.0542 li
cp
.0704051 .0445258 .0503853 0 cmyk
ef
442.688 94.1978 mo
441.406 94.1978 440.367 95.2363 440.367 96.5171 cv
440.367 97.5288 441.016 98.3882 441.919 98.7046 cv
442.857 98.8281 li
444.058 98.7412 445.003 97.7407 445.003 96.5171 cv
445.003 95.2363 443.966 94.1978 442.688 94.1978 cv
cp
437.033 93.6284 mo
435.752 93.6284 434.715 94.6655 434.715 95.9463 cv
434.715 96.7617 435.136 97.4795 435.771 97.8931 cv
436.135 98.1289 436.567 98.2656 437.033 98.2656 cv
437.282 98.2656 437.521 98.2261 437.746 98.1538 cv
438.678 97.8525 439.352 96.978 439.352 95.9463 cv
439.352 94.6655 438.313 93.6284 437.033 93.6284 cv
437.033 93.6284 li
cp
ef
825.363 94.1978 mo
826.644 94.1978 827.683 95.2363 827.683 96.5171 cv
827.683 97.5288 827.035 98.3882 826.13 98.7046 cv
825.193 98.8281 li
823.992 98.7412 823.046 97.7407 823.046 96.5171 cv
823.046 95.2363 824.083 94.1978 825.363 94.1978 cv
cp
831.017 93.6284 mo
832.298 93.6284 833.335 94.6655 833.335 95.9463 cv
833.335 96.7617 832.916 97.4795 832.279 97.8931 cv
831.916 98.1289 831.482 98.2656 831.017 98.2656 cv
830.769 98.2656 830.529 98.2261 830.304 98.1538 cv
829.373 97.8525 828.699 96.978 828.699 95.9463 cv
828.699 94.6655 829.738 93.6284 831.017 93.6284 cv
831.017 93.6284 li
cp
ef
570.55 154.591 mo
570.55 156.267 li
572.439 156.268 li
572.433 156.231 li
572.439 156.267 li
572.513 156.633 572.837 156.909 573.224 156.909 cv
574.472 156.909 li
574.912 156.909 575.271 156.55 575.271 156.109 cv
575.271 155.425 li
575.271 151.948 li
572.423 151.948 li
572.308 151.948 li
571.9 151.948 571.57 151.616 571.57 151.209 cv
571.57 142.953 li
571.57 141.403 570.718 140.046 569.46 139.325 cv
569.48 140.709 569.441 142.106 569.328 143.523 cv
570.068 144.043 570.55 144.902 570.55 145.868 cv
570.55 154.591 li
cp
560.06 156.15 mo
560.06 156.19 560.058 156.229 560.052 156.267 cv
560.06 156.15 li
560.06 156.15 li
cp
557.173 152.192 mo
557.173 155.709 li
557.173 156.15 li
557.173 156.59 557.531 156.951 557.972 156.951 cv
559.259 156.951 li
559.662 156.951 559.996 156.652 560.052 156.267 cv
562.173 156.267 li
562.173 154.571 li
562.173 145.868 li
562.173 144.445 563.224 143.257 564.587 143.037 cv
564.472 141.594 564.414 140.211 564.402 138.874 cv
562.539 139.294 561.14 140.966 561.14 142.953 cv
561.14 151.454 li
561.14 151.859 560.808 152.192 560.402 152.192 cv
560.06 152.192 li
557.173 152.192 li
557.173 152.192 li
cp
.619532 .538659 .52932 .256565 cmyk
ef
562.173 156.267 mo
562.173 165.592 li
562.173 167.17 563.466 168.46 565.042 168.46 cv
567.685 168.46 li
569.263 168.46 570.55 167.17 570.55 165.592 cv
570.55 156.267 li
570.55 154.591 li
570.55 145.868 li
570.55 144.902 570.068 144.043 569.328 143.523 cv
569.068 146.808 568.406 150.203 567.119 153.807 cv
566.998 154.15 566.505 154.126 566.414 153.773 cv
565.4 149.795 564.847 146.268 564.587 143.037 cv
563.224 143.257 562.173 144.445 562.173 145.868 cv
562.173 154.571 li
562.173 156.267 li
cp
ef
581.105 98.7949 mo
580.234 99.4731 579.361 100.159 578.478 100.847 cv
575.662 97.1172 571.191 94.707 566.156 94.707 cv
560.753 94.707 556.001 97.4814 553.244 101.683 cv
552.337 101.038 551.439 100.388 550.531 99.7378 cv
544.781 95.6182 538.666 91.4829 528.24 88.5508 cv
527.892 88.4512 527.625 88.8677 527.859 89.1455 cv
531.826 93.8125 536.128 96.8252 540.656 99.1836 cv
543.316 100.569 546.054 101.729 548.847 102.867 cv
549.873 103.283 550.904 103.696 551.941 104.117 cv
551.156 105.969 550.718 108.005 550.718 110.143 cv
550.718 118.375 557.166 125.103 565.285 125.553 cv
565.181 126.659 565.068 127.762 564.958 128.873 cv
564.644 132.053 564.367 135.301 564.402 138.874 cv
564.414 140.211 564.472 141.594 564.587 143.037 cv
564.847 146.268 565.4 149.795 566.414 153.773 cv
566.505 154.126 566.998 154.15 567.119 153.807 cv
568.406 150.203 569.068 146.808 569.328 143.523 cv
569.441 142.106 569.48 140.709 569.46 139.325 cv
569.414 135.765 568.994 132.29 568.507 128.765 cv
568.357 127.67 568.201 126.57 568.044 125.462 cv
575.677 124.531 581.593 118.028 581.593 110.143 cv
581.593 107.64 580.996 105.278 579.939 103.188 cv
580.951 102.728 581.962 102.274 582.978 101.814 cv
584.429 101.156 585.892 100.482 587.375 99.7466 cv
591.275 97.812 595.318 95.4492 599.693 91.8198 cv
601.033 90.708 602.404 89.4771 603.812 88.1035 cv
603.943 87.9761 603.951 87.8032 603.882 87.6699 cv
603.814 87.5361 603.667 87.4424 603.488 87.4746 cv
602.195 87.7324 li
602.191 87.7334 602.187 87.7339 602.183 87.7349 cv
598.292 88.5757 594.935 89.8926 591.873 91.5083 cv
587.97 93.5713 584.546 96.1216 581.105 98.7949 cv
cp
ef
697.498 154.591 mo
697.498 156.267 li
695.609 156.268 li
695.617 156.231 li
695.609 156.267 li
695.537 156.633 695.212 156.909 694.824 156.909 cv
693.576 156.909 li
693.136 156.909 692.777 156.55 692.777 156.109 cv
692.777 155.425 li
692.777 151.948 li
695.625 151.948 li
695.74 151.948 li
696.148 151.948 696.478 151.616 696.478 151.209 cv
696.478 142.953 li
696.478 141.403 697.33 140.046 698.587 139.325 cv
698.568 140.709 698.607 142.106 698.72 143.523 cv
697.982 144.043 697.498 144.902 697.498 145.868 cv
697.498 154.591 li
cp
707.988 156.15 mo
707.988 156.19 707.99 156.229 707.996 156.267 cv
707.988 156.15 li
707.988 156.15 li
cp
710.875 152.192 mo
710.875 155.709 li
710.875 156.15 li
710.875 156.59 710.517 156.951 710.076 156.951 cv
708.789 156.951 li
708.388 156.951 708.052 156.652 707.996 156.267 cv
705.875 156.267 li
705.875 154.571 li
705.875 145.868 li
705.875 144.445 704.824 143.257 703.46 143.037 cv
703.578 141.594 703.634 140.211 703.646 138.874 cv
705.511 139.294 706.908 140.966 706.908 142.953 cv
706.908 151.454 li
706.908 151.859 707.24 152.192 707.646 152.192 cv
707.988 152.192 li
710.875 152.192 li
710.875 152.192 li
cp
ef
705.875 156.267 mo
705.875 165.592 li
705.875 167.17 704.583 168.46 703.005 168.46 cv
700.363 168.46 li
698.787 168.46 697.498 167.17 697.498 165.592 cv
697.498 156.267 li
697.498 154.591 li
697.498 145.868 li
697.498 144.902 697.982 144.043 698.72 143.523 cv
698.982 146.808 699.642 150.203 700.929 153.807 cv
701.05 154.15 701.544 154.126 701.634 153.773 cv
702.648 149.795 703.201 146.268 703.46 143.037 cv
704.824 143.257 705.875 144.445 705.875 145.868 cv
705.875 154.571 li
705.875 156.267 li
cp
ef
686.943 98.7949 mo
687.814 99.4731 688.687 100.159 689.57 100.847 cv
692.386 97.1172 696.857 94.707 701.894 94.707 cv
707.294 94.707 712.046 97.4814 714.804 101.683 cv
715.71 101.038 716.609 100.388 717.517 99.7378 cv
723.267 95.6182 729.382 91.4829 739.808 88.5508 cv
740.158 88.4512 740.425 88.8677 740.191 89.1455 cv
736.222 93.8125 731.919 96.8252 727.392 99.1836 cv
724.732 100.569 721.994 101.729 719.201 102.867 cv
718.177 103.283 717.146 103.696 716.109 104.117 cv
716.894 105.969 717.33 108.005 717.33 110.143 cv
717.33 118.375 710.882 125.103 702.763 125.553 cv
702.869 126.659 702.982 127.762 703.089 128.873 cv
703.404 132.053 703.683 135.301 703.646 138.874 cv
703.634 140.211 703.578 141.594 703.46 143.037 cv
703.201 146.268 702.648 149.795 701.634 153.773 cv
701.544 154.126 701.05 154.15 700.929 153.807 cv
699.642 150.203 698.982 146.808 698.72 143.523 cv
698.607 142.106 698.568 140.709 698.587 139.325 cv
698.634 135.765 699.054 132.29 699.541 128.765 cv
699.691 127.67 699.849 126.57 700.003 125.462 cv
692.371 124.531 686.457 118.028 686.457 110.143 cv
686.457 107.64 687.052 105.278 688.109 103.188 cv
687.099 102.728 686.087 102.274 685.07 101.814 cv
683.619 101.156 682.156 100.482 680.673 99.7466 cv
676.773 97.812 672.732 95.4492 668.355 91.8198 cv
667.015 90.708 665.644 89.4771 664.236 88.1035 cv
664.107 87.9761 664.097 87.8032 664.166 87.6699 cv
664.234 87.5361 664.38 87.4424 664.56 87.4746 cv
665.855 87.7324 li
665.859 87.7334 665.863 87.7339 665.865 87.7349 cv
669.757 88.5757 673.113 89.8926 676.175 91.5083 cv
680.08 93.5713 683.501 96.1216 686.943 98.7949 cv
cp
ef
622.582 119.596 mo
622.433 119.927 622.572 120.318 622.896 120.479 cv
632.234 125.149 li
632.687 125.374 633.214 125.048 633.214 124.543 cv
633.214 117.613 li
633.214 117.24 632.91 116.935 632.537 116.935 cv
624.216 116.935 li
623.945 116.935 623.712 117.086 623.599 117.334 cv
622.582 119.596 li
cp
618.591 92.5718 mo
617.654 94.0269 616.929 95.6577 616.437 97.4487 cv
616.242 98.1548 616.085 98.8862 615.966 99.6416 cv
615.841 100.419 615.757 101.222 615.718 102.049 cv
615.699 102.391 615.689 102.737 615.685 103.088 cv
616.847 103.959 li
616.847 103.961 li
616.972 104.191 617.216 104.349 617.501 104.349 cv
619.759 104.349 li
619.759 104.349 li
619.876 104.756 620.166 105.095 620.576 105.277 cv
622.05 105.937 li
623.521 106.593 li
623.527 106.596 li
623.632 106.663 623.759 106.703 623.898 106.703 cv
632.46 106.667 li
632.83 106.664 633.134 106.361 633.134 105.99 cv
633.134 101.141 li
633.134 100.768 632.83 100.463 632.457 100.463 cv
624.5 100.463 li
624.304 100.463 624.126 100.546 624.001 100.68 cv
624.132 99.8135 li
624.164 99.8135 624.195 99.8135 624.226 99.8135 cv
632.478 99.8135 li
632.816 99.8135 633.091 99.5376 633.091 99.1978 cv
633.091 93.1904 li
633.091 92.8501 632.816 92.5742 632.478 92.5742 cv
625.224 92.5742 li
621.867 92.5742 li
619.835 92.5742 li
618.646 92.5742 li
618.591 92.5718 li
618.591 92.5718 li
cp
623.49 108.211 mo
623.851 115.479 li
623.871 115.838 624.167 116.122 624.529 116.122 cv
632.498 116.122 li
632.869 116.122 633.173 115.817 633.173 115.444 cv
633.173 108.177 li
633.173 107.804 632.869 107.5 632.498 107.5 cv
624.166 107.5 li
623.777 107.5 623.468 107.821 623.49 108.211 cv
623.49 108.211 li
cp
.0704051 .0445258 .0503853 0 cmyk
ef
645.466 119.596 mo
645.615 119.927 645.476 120.318 645.15 120.479 cv
635.814 125.149 li
635.361 125.374 634.832 125.048 634.832 124.543 cv
634.832 117.613 li
634.832 117.24 635.136 116.935 635.509 116.935 cv
643.832 116.935 li
644.101 116.935 644.335 117.086 644.449 117.334 cv
645.466 119.596 li
cp
649.457 92.5718 mo
650.394 94.0269 651.119 95.6577 651.609 97.4487 cv
651.806 98.1548 651.962 98.8862 652.082 99.6416 cv
652.207 100.419 652.291 101.222 652.33 102.049 cv
652.349 102.391 652.359 102.737 652.361 103.088 cv
651.201 103.959 li
651.199 103.961 li
651.076 104.191 650.832 104.349 650.546 104.349 cv
648.289 104.349 li
648.289 104.349 li
648.171 104.756 647.882 105.095 647.472 105.277 cv
645.996 105.937 li
644.525 106.593 li
644.521 106.596 li
644.416 106.663 644.289 106.703 644.15 106.703 cv
635.587 106.667 li
635.216 106.664 634.914 106.361 634.914 105.99 cv
634.914 101.141 li
634.914 100.768 635.218 100.463 635.591 100.463 cv
643.548 100.463 li
643.744 100.463 643.921 100.546 644.044 100.68 cv
643.916 99.8135 li
643.884 99.8135 643.853 99.8135 643.82 99.8135 cv
635.57 99.8135 li
635.232 99.8135 634.955 99.5376 634.955 99.1978 cv
634.955 93.1904 li
634.955 92.8501 635.232 92.5742 635.57 92.5742 cv
642.824 92.5742 li
646.179 92.5742 li
648.212 92.5742 li
649.4 92.5742 li
649.457 92.5718 li
649.457 92.5718 li
cp
644.558 108.211 mo
644.197 115.479 li
644.177 115.838 643.88 116.122 643.519 116.122 cv
635.55 116.122 li
635.179 116.122 634.873 115.817 634.873 115.444 cv
634.873 108.177 li
634.873 107.804 635.179 107.5 635.55 107.5 cv
643.882 107.5 li
644.271 107.5 644.578 107.821 644.558 108.211 cv
644.558 108.211 li
cp
ef
617.185 124.172 mo
617.185 127.025 619.388 129.38 622.236 129.571 cv
627.447 129.92 li
627.447 126.959 li
626.306 126.565 625.175 126.126 624.064 125.63 cv
623.337 125.306 622.896 124.627 622.896 123.832 cv
622.896 120.479 li
621.755 120.331 621.132 119.268 620.904 117.515 cv
617.185 120.421 li
617.185 124.172 li
cp
ef
615.998 128.668 mo
615.244 130.823 li
615.242 130.824 li
615.166 130.916 615.119 131.035 615.119 131.165 cv
615.119 131.458 615.353 131.694 615.646 131.694 cv
615.939 131.694 616.173 131.458 616.173 131.165 cv
616.707 130.014 li
616.41 129.604 616.169 129.152 615.998 128.668 cv
cp
.619532 .538659 .52932 .256565 cmyk
ef
632.992 130.291 mo
632.992 132.268 li
632.992 141.17 li
632.992 141.407 633.185 141.601 633.423 141.601 cv
634.625 141.601 li
634.863 141.601 635.056 141.407 635.056 141.17 cv
635.056 132.268 li
635.056 128.692 li
635.056 128.455 634.863 128.261 634.625 128.261 cv
633.423 128.261 li
633.234 128.261 633.072 128.383 633.015 128.552 cv
633 128.596 632.992 128.643 632.992 128.692 cv
632.992 130.291 li
cp
ef
.5 lw
1 lc
1 lj
2.6131 ml
[] 0 dsh
true sadj
222.699 59.5806 mo
222.699 84.5366 li
41.7085 45.6138 mo
222.699 59.5806 li
234.511 59.5806 li
50.4736 120.279 mo
54.6484 115.903 li
49.6831 119.287 mo
52.9922 115.441 li
54.1753 110.518 mo
52.9443 114.916 li
52.8364 115.298 53.0517 115.697 53.4302 115.818 cv
54.001 116 li
54.374 116.119 54.7724 115.928 54.9141 115.563 cv
56.6562 111.062 li
50.4131 118.438 mo
50.1274 118.289 49.8022 118.204 49.457 118.204 cv
48.312 118.204 47.3838 119.133 47.3838 120.279 cv
47.3838 121.424 48.312 122.353 49.457 122.353 cv
50.6025 122.353 51.5317 121.424 51.5317 120.279 cv
51.5317 119.958 51.458 119.654 51.3291 119.383 cv
52.3447 116.193 mo
51.5293 115.615 50.5332 115.276 49.457 115.276 cv
46.6948 115.276 44.4551 117.515 44.4551 120.279 cv
44.4551 123.042 46.6948 125.281 49.457 125.281 cv
52.2207 125.281 54.4599 123.042 54.4599 120.279 cv
54.4599 119.12 54.0659 118.054 53.4048 117.206 cv
49.457 121.295 mo
50.0185 121.295 50.4736 120.84 50.4736 120.279 cv
50.4736 119.717 50.0185 119.262 49.457 119.262 cv
48.8955 119.262 48.4404 119.717 48.4404 120.279 cv
48.4404 120.84 48.8955 121.295 49.457 121.295 cv
49.457 121.295 li
cp
34.6943 48.9043 mo
37.3379 48.9043 li
37.6953 48.9043 37.9883 48.6108 37.9883 48.2529 cv
37.9883 47.0737 li
37.9883 46.7158 37.6953 46.4224 37.3379 46.4224 cv
34.6943 46.4224 li
34.3364 46.4224 34.0434 46.7158 34.0434 47.0737 cv
34.0434 48.2529 li
34.0434 48.6108 34.3364 48.9043 34.6943 48.9043 cv
34.6943 48.9043 li
cp
30.2109 66.6987 mo
31.9619 66.7241 li
32.4653 66.7309 32.8833 66.3247 32.8901 65.8213 cv
32.9116 64.3208 li
32.9184 63.8179 32.5122 63.4004 32.0088 63.3931 cv
30.2578 63.3682 li
29.7544 63.3608 29.3369 63.7671 29.3296 64.271 cv
29.3086 65.7705 li
29.3013 66.2739 29.7075 66.6919 30.2109 66.6987 cv
30.2109 66.6987 li
cp
28.9189 61.7554 mo
38.0215 61.7554 li
29.0015 56.2241 mo
39.2617 56.2241 li
28.7568 50.6929 mo
40.5273 50.6929 li
29.1631 45.5688 mo
41.7085 45.5688 li
28.8379 40.6069 mo
37.0376 40.6069 li
26.2353 40.6885 mo
16.1103 40.6885 li
25.9101 45.5688 mo
13.1323 45.5688 li
25.9912 50.6113 mo
10.458 50.6113 li
25.9912 56.061 mo
8.41991 56.061 li
25.9912 61.5923 mo
6.47362 61.5923 li
26.8047 68.5879 mo
4.22362 68.5879 li
25.3398 81.7651 mo
6.84423 81.7651 li
25.1777 88.1904 mo
5.9829 88.1904 li
25.7471 94.291 mo
3.13524 94.291 li
9.8579 101.001 mo
25.9101 101.001 li
5.47997 76.6602 mo
23.8496 76.6602 li
24.2783 76.6602 24.6289 76.3096 24.6289 75.8809 cv
24.6289 75.6099 li
24.6289 75.1807 24.2783 74.8301 23.8496 74.8301 cv
5.47997 74.8301 li
5.05175 74.8301 4.70116 75.1807 4.70116 75.6099 cv
4.70116 75.8809 li
4.70116 76.3096 5.05175 76.6602 5.47997 76.6602 cv
5.47997 76.6602 li
cp
43.75 92.4155 mo
43.75 102.465 li
37.9477 104.58 mo
32.8862 104.58 li
32.9048 103.387 mo
37.9477 103.387 li
27.8271 104.905 mo
32.4717 104.905 li
32.7099 104.905 32.9048 104.71 32.9048 104.471 cv
32.9048 103.387 li
32.9048 103.148 32.7099 102.953 32.4717 102.953 cv
27.8271 102.953 li
27.5889 102.953 27.394 103.148 27.394 103.387 cv
27.394 104.471 li
27.394 104.71 27.5889 104.905 27.8271 104.905 cv
27.8271 104.905 li
cp
38.5981 105.393 mo
43.5605 105.393 li
43.9184 105.393 44.2104 105.1 44.2104 104.743 cv
44.2104 103.116 li
44.2104 102.758 43.9184 102.465 43.5605 102.465 cv
38.5981 102.465 li
38.2407 102.465 37.9477 102.758 37.9477 103.116 cv
37.9477 104.743 li
37.9477 105.1 38.2407 105.393 38.5981 105.393 cv
38.5981 105.393 li
cp
57.7178 98.6826 mo
60.7183 98.6826 li
61.1904 98.6826 61.5766 98.2964 61.5766 97.8237 cv
61.5766 96.3691 li
61.5766 95.897 61.1904 95.5103 60.7183 95.5103 cv
57.7178 95.5103 li
57.2456 95.5103 56.8594 95.897 56.8594 96.3691 cv
56.8594 97.8237 li
56.8594 98.2964 57.2456 98.6826 57.7178 98.6826 cv
57.7178 98.6826 li
cp
31.5015 106.247 mo
55.8555 106.247 li
56.2969 106.247 56.6562 106.606 56.6562 107.046 cv
56.6562 111.062 li
38.5581 97.3403 mo
40.2661 97.3403 li
41.0933 97.3403 41.7705 96.6631 41.7705 95.8359 cv
41.7705 94.6968 li
41.7705 93.8691 41.0933 93.1924 40.2661 93.1924 cv
38.5581 93.1924 li
37.73 93.1924 37.0537 93.8691 37.0537 94.6968 cv
37.0537 95.8359 li
37.0537 96.6631 37.73 97.3403 38.5581 97.3403 cv
38.5581 97.3403 li
cp
38.5581 85.4243 mo
40.2661 85.4243 li
41.0933 85.4243 41.7705 84.7466 41.7705 83.9194 cv
41.7705 82.7808 li
41.7705 81.9531 41.0933 81.2759 40.2661 81.2759 cv
38.5581 81.2759 li
37.73 81.2759 37.0537 81.9531 37.0537 82.7808 cv
37.0537 83.9194 li
37.0537 84.7466 37.73 85.4243 38.5581 85.4243 cv
38.5581 85.4243 li
cp
35.4038 69.7246 mo
55.7324 69.7246 li
33.6977 79.7705 mo
66.7309 79.7705 li
41.2905 47.4263 mo
66.2016 85.48 li
66.4643 85.8818 66.352 87.4043 66.352 87.9434 cv
62.9844 87.5293 mo
64.9136 85.8325 68.1577 84.7246 74.2099 84.8721 cv
31.5015 104.905 mo
31.5015 106.858 li
31.5015 72.9795 mo
31.5015 102.953 li
41.7085 45.6138 mo
36.3027 69.0103 li
36.2051 69.4341 35.8389 69.7246 35.4038 69.7246 cv
30.228 69.7246 li
29.7202 69.7246 29.3057 70.1396 29.3057 70.6479 cv
29.3057 72.0557 li
29.3057 72.5645 29.7202 72.9795 30.228 72.9795 cv
32.7749 72.9795 li
33.2827 72.9795 33.6977 73.3931 33.6977 73.9019 cv
33.6977 103.387 li
105.438 90.1406 mo
105.438 85.0859 li
144.876 90.1406 mo
70.5278 90.1406 li
198.429 84.6943 mo
198.429 85.0693 li
198.429 85.6113 198.872 86.0537 199.414 86.0537 cv
200.516 86.0537 li
201.059 86.0537 201.499 85.6113 201.499 85.0693 cv
201.499 84.6797 li
189.056 84.6943 mo
189.056 85.0693 li
189.056 85.6113 189.497 86.0537 190.039 86.0537 cv
191.142 86.0537 li
191.684 86.0537 192.126 85.6113 192.126 85.0693 cv
192.126 84.6797 li
194.748 87.7412 mo
194.748 86.1602 li
194.748 85.8555 194.998 85.606 195.303 85.606 cv
197.225 85.606 li
197.53 85.606 197.779 85.8555 197.779 86.1602 cv
197.779 87.7412 li
187.531 84.7017 mo
187.531 86.6343 li
187.531 87.2441 188.027 87.7412 188.638 87.7412 cv
202.122 87.7412 li
202.732 87.7412 203.229 87.2441 203.229 86.6343 cv
203.229 84.6279 li
184.604 84.7158 mo
184.604 87.7563 li
184.604 88.1289 184.907 88.4326 185.28 88.4326 cv
205.562 88.4326 li
205.934 88.4326 206.237 88.1289 206.237 87.7563 cv
206.237 84.6138 li
162.458 89.084 mo
164.937 89.084 li
165.296 89.084 165.589 88.7905 165.589 88.4326 cv
165.589 86.5215 li
165.589 86.1631 165.296 85.8701 164.937 85.8701 cv
162.458 85.8701 li
162.1 85.8701 161.806 86.1631 161.806 86.5215 cv
161.806 88.4326 li
161.806 88.7905 162.1 89.084 162.458 89.084 cv
162.458 89.084 li
cp
166.931 89.084 mo
169.412 89.084 li
169.77 89.084 170.062 88.7905 170.062 88.4326 cv
170.062 86.5215 li
170.062 86.1631 169.77 85.8701 169.412 85.8701 cv
166.931 85.8701 li
166.573 85.8701 166.28 86.1631 166.28 86.5215 cv
166.28 88.4326 li
166.28 88.7905 166.573 89.084 166.931 89.084 cv
166.931 89.084 li
cp
171.669 89.084 mo
174.15 89.084 li
174.507 89.084 174.8 88.7905 174.8 88.4326 cv
174.8 86.5215 li
174.8 86.1631 174.507 85.8701 174.15 85.8701 cv
171.669 85.8701 li
171.311 85.8701 171.018 86.1631 171.018 86.5215 cv
171.018 88.4326 li
171.018 88.7905 171.311 89.084 171.669 89.084 cv
171.669 89.084 li
cp
164.849 81.6992 mo
169.849 81.6992 li
157.303 81.2065 mo
157.303 78.3691 li
157.303 78.2671 157.386 78.1836 157.488 78.1836 cv
158.083 78.1836 li
158.185 78.1836 158.268 78.2671 158.268 78.3691 cv
158.268 80.6519 li
147.684 81.5088 mo
147.684 79.7007 li
147.684 79.5996 147.767 79.5161 147.869 79.5161 cv
148.048 79.5161 li
148.15 79.5161 148.233 79.5996 148.233 79.7007 cv
148.233 81.5088 li
157.038 81.5088 mo
144.413 81.5088 li
143.99 81.5088 143.99 82.3223 144.413 82.3223 cv
157.038 82.3223 li
164.888 84.8086 mo
164.888 82.0288 li
164.888 81.25 164.252 80.6138 163.472 80.6138 cv
158.453 80.6138 li
157.673 80.6138 157.038 81.25 157.038 82.0288 cv
157.038 84.8442 li
171.272 78.0923 mo
171.272 84.7773 li
169.849 78.0923 mo
169.849 84.7837 li
162.43 80.582 mo
163.683 79.064 165.602 78.0923 167.788 78.0923 cv
173.636 78.0933 li
177.545 78.0933 180.098 81.0898 180.098 84.7461 cv
160.522 80.6104 mo
161.915 78.2983 164.427 76.7529 167.351 76.7529 cv
174.141 76.7539 li
178.681 76.7539 181.643 80.3457 181.643 84.7295 cv
182.048 84.7271 mo
175.4 92.2295 162.338 94.8198 158.379 84.8384 cv
158.055 92.3267 mo
158.055 107.393 li
144.876 84.9014 mo
144.876 91.4033 li
144.876 91.9121 145.291 92.3267 145.799 92.3267 cv
171.814 92.3267 li
176.765 92.3267 181.21 88.6021 183.919 84.7183 cv
20.2934 89.8994 mo
70.4321 89.8994 li
42.1518 87.5566 mo
40.2422 88.3608 40.7007 91.7671 42.2612 92.3276 cv
45.1929 87.4023 mo
43.2827 88.2065 43.7441 91.9395 45.3052 92.4995 cv
69.8252 90.835 mo
63.0508 93.7598 44.6709 93.1123 20.6714 90.3271 cv
20.1675 90.2686 20.167 89.5308 20.6694 89.4717 cv
39.729 87.2134 61.0322 86.1128 69.6885 88.6396 cv
70.7388 88.9468 70.8291 90.4009 69.8252 90.835 cv
69.8252 90.835 li
cp
6.84423 76.6602 mo
6.84423 87.3369 li
6.84423 87.811 6.45751 88.1978 5.9829 88.1978 cv
1.47313 88.1978 li
3.03759 73.1143 mo
5.9829 73.1143 li
6.45751 73.1143 6.84423 73.501 6.84423 73.9756 cv
6.84423 74.8301 li
1.51708 90.6792 mo
3.79442 90.6792 li
4.17479 90.6792 4.48632 90.3677 4.48632 89.9878 cv
4.48632 89.9878 li
4.48632 89.6069 4.17479 89.2964 3.79442 89.2964 cv
1.51708 89.2964 li
1.13671 89.2964 .825184 89.6069 .825184 89.9878 cv
.825184 89.9878 li
.825184 90.3677 1.13671 90.6792 1.51708 90.6792 cv
1.51708 90.6792 li
cp
2.53368 71.625 mo
4.81102 71.625 li
5.19139 71.625 5.50292 71.3145 5.50292 70.9336 cv
5.50292 70.9336 li
5.50292 70.5542 5.19139 70.2432 4.81102 70.2432 cv
2.53368 70.2432 li
2.15331 70.2432 1.84179 70.5542 1.84179 70.9336 cv
1.84179 70.9336 li
1.84179 71.3145 2.15331 71.625 2.53368 71.625 cv
2.53368 71.625 li
cp
301.905 132.572 mo
260.005 134.126 214.423 131.033 171.499 126.2 cv
328.18 94.4351 mo
335.041 100.292 340.698 107.913 344.486 114.758 cv
345.505 116.598 345.117 118.837 343.537 120.226 cv
335.981 126.877 323.438 130.681 306.651 132.059 cv
236.732 84.394 mo
304.56 84.394 li
312.054 84.394 319.241 87.6436 325.586 92.4595 cv
2.12011 90.6792 mo
4.35448 97.4121 10.0683 102.771 17.501 104.202 cv
30.4507 106.696 43.4463 109.16 56.4106 111.062 cv
93.5161 116.504 130.823 121.527 168.358 125.816 cv
3.41552 71.625 mo
2.61815 74.688 1.93798 77.7651 1.39794 80.8628 cv
.893543 83.7554 1.03368 86.6167 1.71532 89.2964 cv
234.279 84.4819 mo
77.2392 85.2183 li
73.0395 85.2378 69.4189 83.2964 67.1118 79.7856 cv
58.6821 66.96 50.2842 55.2046 40.5898 44.3491 cv
23.1128 24.7793 14.2788 39.5732 7.36425 58.9331 cv
6.02294 62.689 4.81542 66.4556 3.78466 70.2432 cv
194.935 124.175 mo
194.935 127.006 li
171.068 122.178 mo
187.323 123.761 203.578 124.878 219.834 125.594 cv
170.904 120.093 mo
191.553 121.033 212.648 121.585 234.166 121.765 cv
105.448 113.84 mo
127.131 116.245 148.814 118.344 170.497 119.899 cv
170.819 119.922 171.068 120.19 171.068 120.513 cv
171.068 123.843 li
172.88 124.858 mo
188.488 126.488 204.136 127.896 219.834 129.029 cv
144.979 121.709 mo
153.354 122.721 161.738 123.676 170.134 124.568 cv
144.979 107.393 mo
144.979 123.007 li
105.448 107.393 mo
105.448 117.983 li
218.021 89.9434 mo
218.021 101.912 li
178.759 89.9434 mo
278.201 89.9434 li
198.216 102.309 mo
203.991 102.309 li
204.439 102.309 204.805 101.943 204.805 101.496 cv
204.805 100.275 li
204.805 99.8286 204.439 99.4624 203.991 99.4624 cv
198.216 99.4624 li
197.769 99.4624 197.402 99.8286 197.402 100.275 cv
197.402 101.496 li
197.402 101.943 197.769 102.309 198.216 102.309 cv
198.216 102.309 li
cp
198.146 104.106 mo
198.146 110.725 li
66.6509 107.393 mo
173.429 107.393 li
175.56 107.393 177.377 107.245 179.48 106.9 cv
192.93 104.699 206.26 102.854 219.322 101.814 cv
66.6509 91.4502 mo
66.6509 112.528 li
63.5264 112.101 mo
63.5264 91.7754 li
161.654 130.695 mo
171.253 123.708 li
171.571 123.477 172.016 123.535 172.263 123.842 cv
172.681 124.361 li
172.945 124.691 172.884 125.168 172.543 125.419 cv
163.199 132.303 li
160.52 131.051 mo
162.408 133.013 li
162.515 133.124 162.694 133.127 162.804 133.02 cv
163.167 132.671 li
163.278 132.564 163.282 132.386 163.175 132.275 cv
161.287 130.313 li
161.181 130.202 161.002 130.199 160.891 130.306 cv
160.528 130.655 li
160.417 130.762 160.414 130.94 160.52 131.051 cv
160.52 131.051 li
cp
234.592 121.927 mo
234.592 124.947 li
219.834 130.697 mo
219.834 124.831 li
219.834 124.513 220.095 124.262 220.415 124.278 cv
239.561 125.192 li
240.742 123.87 mo
242.527 127.766 246.461 130.472 251.027 130.472 cv
253.574 130.472 255.926 129.629 257.816 128.207 cv
238.775 123.372 mo
240.521 128.459 245.347 132.116 251.027 132.116 cv
254.443 132.116 257.551 130.793 259.864 128.631 cv
265.012 129.141 mo
265.012 132.828 li
263.647 129.141 mo
263.647 132.799 li
331.512 106.516 mo
331.512 109.225 li
325.696 109.225 mo
323.134 109.225 li
334.325 109.225 mo
328.143 109.225 li
328.214 106.516 mo
332.813 106.516 li
321.985 102.329 mo
325.852 106.427 li
328.416 119.61 mo
330.123 119.277 331.829 118.872 333.535 118.413 cv
321.985 120.488 mo
323.162 120.404 324.337 120.274 325.513 120.105 cv
333.535 113.731 mo
333.535 126.34 li
321.985 100.682 mo
325.104 100.682 li
333.581 107.828 mo
340.147 107.828 li
328.229 100.683 mo
334.42 100.683 li
312.538 92.374 mo
325.21 92.374 li
338.628 117.336 mo
345.039 117.336 li
324.62 127.282 mo
321.5 128.849 318.26 130.138 314.91 131.133 cv
328.29 101.024 mo
331.836 105.405 335.271 110.37 338.457 115.838 cv
338.908 116.612 338.757 117.575 338.083 118.165 cv
335.049 120.818 331.851 123.154 328.5 125.153 cv
304.56 86.6504 mo
310.527 86.3706 316.154 88.3022 320.681 92.6772 cv
322.102 94.0488 323.519 95.5171 324.925 97.0796 cv
279.842 86.1421 mo
279.842 93.2227 li
278.201 86.1421 mo
278.201 93.2227 li
291.359 93.2227 mo
273.208 93.2227 li
290.092 91.043 mo
301.316 91.043 li
301.719 91.043 302.047 90.7139 302.047 90.3105 cv
302.047 89.5786 li
302.047 89.1758 301.719 88.8472 301.316 88.8472 cv
290.092 88.8472 li
289.689 88.8472 289.359 89.1758 289.359 89.5786 cv
289.359 90.3105 li
289.359 90.7139 289.689 91.043 290.092 91.043 cv
290.092 91.043 li
cp
275.817 84.394 mo
275.817 85.5869 li
275.817 85.96 275.512 86.2637 275.139 86.2637 cv
254.938 86.2637 li
254.566 86.2637 254.261 85.96 254.261 85.5869 cv
254.261 84.394 li
302.496 84.394 mo
302.496 85.4644 li
302.496 85.8374 302.191 86.1421 301.818 86.1421 cv
278.201 86.1421 li
277.829 86.1421 277.524 85.8374 277.524 85.4644 cv
277.524 84.394 li
304.56 84.394 mo
304.56 92.2949 li
277.437 127.746 mo
280.983 129.935 li
282.932 126.488 mo
282.932 129.849 li
281.627 126.488 mo
281.627 129.907 li
252.626 124.271 mo
252.626 126.295 li
252.626 126.853 253.006 127.322 253.553 127.439 cv
265.072 129.894 277.508 130.819 291.515 129.131 cv
277.669 126.708 mo
282.232 126.563 286.796 126.055 291.359 125.042 cv
277.669 122.805 mo
282.01 122.826 286.584 122.5 291.359 121.869 cv
274.842 127.075 mo
276.063 127.075 li
276.409 127.075 276.693 126.792 276.693 126.445 cv
276.693 123.902 li
276.693 123.556 276.409 123.272 276.063 123.272 cv
274.842 123.272 li
274.495 123.272 274.212 123.556 274.212 123.902 cv
274.212 126.445 li
274.212 126.792 274.495 127.075 274.842 127.075 cv
274.842 127.075 li
cp
247.31 122.865 mo
256.767 125.562 266.604 127.306 276.885 127.943 cv
277.312 127.97 277.669 127.635 277.669 127.207 cv
277.669 115.637 li
222.833 115.804 mo
229.02 120.246 237.017 123.329 246.494 125.302 cv
246.916 125.39 247.31 125.07 247.31 124.64 cv
247.31 116.563 li
268.787 113.296 mo
268.787 114.117 li
268.787 114.32 268.953 114.486 269.157 114.486 cv
273.419 114.486 li
273.623 114.486 273.79 114.32 273.79 114.117 cv
273.79 112.921 li
250.809 113.596 mo
250.809 114.417 li
250.809 114.621 250.974 114.787 251.178 114.787 cv
255.686 114.787 li
255.889 114.787 256.055 114.621 256.055 114.417 cv
256.055 113.614 li
251.214 110.999 mo
251.214 111.819 li
251.214 112.022 251.38 112.189 251.583 112.189 cv
256.091 112.189 li
256.294 112.189 256.459 112.022 256.459 111.819 cv
256.459 111.015 li
252.189 104.719 mo
252.189 103.897 li
252.189 103.694 252.356 103.528 252.56 103.528 cv
257.066 103.528 li
257.271 103.528 257.436 103.694 257.436 103.897 cv
257.436 104.701 li
251.786 106.183 mo
251.786 107.005 li
251.786 107.208 251.952 107.375 252.155 107.375 cv
256.663 107.375 li
256.866 107.375 257.031 107.208 257.031 107.005 cv
257.031 106.201 li
254.956 99.5093 mo
254.956 100.331 li
254.956 100.535 255.122 100.7 255.326 100.7 cv
259.833 100.7 li
260.037 100.7 260.202 100.535 260.202 100.331 cv
260.202 99.5269 li
274.781 99.7852 mo
276.731 99.3442 278.207 98.4443 279.351 97.4146 cv
240.063 99.1172 mo
276.47 100.474 275.002 98.2134 278.104 96.4663 cv
238.258 102.036 mo
274.665 103.393 277.736 101.874 280.513 98.3384 cv
232.746 104.167 mo
269.152 105.523 280.701 104.827 281.667 99.2959 cv
231.023 105.539 mo
267.43 106.895 283.086 106.957 282.995 100.451 cv
227.685 108.105 mo
268.483 109.543 285.382 109.112 285.291 102.604 cv
224.675 110.325 mo
266.043 112.006 286.884 110.805 286.468 103.811 cv
221.606 112.502 mo
263.057 114.835 289.412 113.805 288.996 106.811 cv
235.211 101.167 mo
237.489 101.167 li
237.724 101.167 237.916 100.975 237.916 100.74 cv
237.916 100.272 li
237.916 100.038 237.724 99.8452 237.489 99.8452 cv
235.211 99.8452 li
234.977 99.8452 234.785 100.038 234.785 100.272 cv
234.785 100.74 li
234.785 100.975 234.977 101.167 235.211 101.167 cv
235.211 101.167 li
cp
215.087 104.616 mo
231.389 105.56 li
216.695 103.528 mo
232.746 104.167 li
217.195 115.5 mo
222.883 111.732 228.264 107.81 233.302 103.717 cv
233.539 103.524 233.815 103.455 234.12 103.469 cv
236.529 103.574 li
237.01 103.595 237.431 103.372 237.684 102.963 cv
241.64 96.5684 li
239.748 92.5039 mo
251.655 92.5039 li
252.197 92.5039 252.639 92.062 252.639 91.52 cv
252.639 90.3911 li
263.212 90.3745 mo
263.976 91.6138 264.396 92.7256 266.092 92.7446 cv
272.523 92.8164 li
239.27 92.4067 mo
237.473 97.2031 270.547 95.9639 273.208 93.2026 cv
271.282 94.0615 mo
283.814 114.56 li
238.014 92.7319 mo
232.033 98.8257 265.253 98.3789 276.22 95.1177 cv
190.693 113.014 mo
197.45 110.787 204.206 108.944 210.961 107.584 cv
202.891 114.414 mo
209.545 108.153 215.587 104.015 224.644 98.5024 cv
229.799 95.3652 234.892 93.4121 240.056 92.2197 cv
246.916 90.6343 259.977 89.0073 269.045 91.3203 cv
275.71 93.0205 293.934 108.371 290.371 112.068 cv
287.209 115.349 267.715 116.75 263.782 116.73 cv
231.828 116.565 201.168 115.653 177.39 110.766 cv
176.871 110.658 176.506 110.212 176.506 109.681 cv
176.506 107.267 li
236.77 87.1689 mo
236.383 59.1421 li
236.369 58.0605 234.521 58.0894 234.511 59.1504 cv
234.255 87.1855 li
234.252 87.5332 234.53 87.811 234.877 87.8076 cv
236.164 87.7925 li
236.506 87.7891 236.776 87.5112 236.77 87.1689 cv
236.77 87.1689 li
cp
306.731 129.895 mo
306.731 133.108 li
306.731 133.937 305.903 134.499 305.132 134.195 cv
302.54 133.168 300.359 131.729 298.597 129.873 cv
308.764 129.899 mo
308.764 129.03 li
308.764 128.658 309.068 128.353 309.441 128.353 cv
313.742 128.353 li
314.114 128.353 314.418 128.658 314.418 129.03 cv
314.418 129.745 li
313.109 124.376 mo
313.109 127.732 li
311.836 124.376 mo
311.836 127.666 li
302.454 124.376 mo
302.454 127.732 li
301.181 124.376 mo
301.181 127.776 li
315.661 129.54 mo
315.661 128.224 li
315.661 127.956 315.447 127.737 315.181 127.731 cv
305.704 127.495 298.012 127.718 291.362 128.58 cv
324.93 113.234 mo
323.403 113.234 li
323.403 110.59 mo
324.741 110.59 li
322.098 108.923 mo
322.542 108.923 li
323.016 108.923 323.403 109.309 323.403 109.784 cv
323.403 114.04 li
323.403 114.514 323.016 114.901 322.542 114.901 cv
321.985 114.901 li
328.106 113.878 mo
328.399 120.804 329.226 139.442 327.103 150.679 cv
327.033 151.055 326.545 151.141 326.396 150.789 cv
324.92 147.325 323.626 130.852 325.243 122.19 cv
325.794 119.236 325.909 117.028 325.909 113.878 cv
328.106 109.939 mo
328.399 103.014 328.25 96.0879 327.591 89.1631 cv
327.555 88.7822 327.033 88.7012 326.883 89.0522 cv
325.242 92.9092 324.344 97.4688 325.566 104.035 cv
325.947 106.082 325.909 107.889 325.909 109.939 cv
331.542 113.121 mo
329.24 113.121 li
329.22 110.703 mo
331.543 110.703 li
332.193 113.731 mo
333.535 113.731 li
333.894 113.731 334.186 113.439 334.186 113.081 cv
334.186 110.743 li
334.186 110.384 333.894 110.091 333.535 110.091 cv
332.193 110.091 li
331.835 110.091 331.542 110.384 331.542 110.743 cv
331.542 113.081 li
331.542 113.439 331.835 113.731 332.193 113.731 cv
332.193 113.731 li
cp
324.882 110.393 mo
328.872 113.612 li
325.828 113.884 mo
328.106 113.884 li
328.777 113.884 329.327 113.335 329.327 112.664 cv
329.327 111.159 li
329.327 110.488 328.777 109.939 328.106 109.939 cv
325.828 109.939 li
325.158 109.939 324.608 110.488 324.608 111.159 cv
324.608 112.664 li
324.608 113.335 325.158 113.884 325.828 113.884 cv
325.828 113.884 li
cp
314.608 93.1099 mo
317.345 93.4316 321.985 94.584 321.985 98.0459 cv
321.985 124.638 li
321.985 128.814 315.144 129.917 312 129.908 cv
292.709 129.857 li
291.965 129.855 291.359 129.249 291.359 128.504 cv
291.359 121.073 li
312.111 119.365 mo
310.862 119.48 309.611 119.822 308.36 120.407 cv
308.218 120.473 308.139 120.579 308.139 120.703 cv
308.139 120.826 308.216 120.933 308.359 120.999 cv
309.499 121.534 310.721 121.889 312.028 122.055 cv
314.735 122.4 314.831 119.114 312.111 119.365 cv
312.111 119.365 li
cp
312.111 95.3071 mo
310.862 95.4214 309.611 95.7646 308.36 96.3477 cv
308.218 96.4146 308.139 96.521 308.139 96.644 cv
308.139 96.7676 308.216 96.8735 308.359 96.9409 cv
309.499 97.4761 310.721 97.8311 312.028 97.9976 cv
314.735 98.3418 314.831 95.0566 312.111 95.3071 cv
312.111 95.3071 li
cp
312.111 106.451 mo
310.862 106.593 309.611 107.011 308.36 107.728 cv
308.218 107.809 308.139 107.939 308.139 108.09 cv
308.139 108.242 308.216 108.371 308.359 108.453 cv
309.499 109.109 310.721 109.544 312.028 109.748 cv
314.735 110.17 314.831 106.145 312.111 106.451 cv
312.111 106.451 li
cp
291.359 122.242 mo
297.85 122.242 li
291.359 117.321 mo
297.85 117.321 li
297.574 111.496 mo
291.359 111.496 li
291.359 105.282 mo
297.85 105.282 li
298.023 99.8569 mo
291.359 99.8569 li
291.359 96.0093 mo
297.85 96.0093 li
297.85 114.636 mo
316.069 114.636 li
297.85 92.2295 mo
297.85 124.376 li
312.538 92.374 mo
292.416 92.1768 li
291.83 92.1714 291.359 92.6367 291.359 93.2227 cv
291.359 123.331 li
291.359 123.907 291.83 124.376 292.405 124.376 cv
312.502 124.376 li
314.467 124.376 316.069 122.774 316.069 120.81 cv
316.069 95.9404 li
316.069 93.9878 314.49 92.3931 312.538 92.374 cv
312.538 92.374 li
cp
0 0 0 1 cmyk
@
49.8945 450.204 mo
231.055 460.581 li
194.677 454.374 mo
194.677 456.629 li
194.677 457.039 194.341 457.376 193.93 457.376 cv
192.842 457.376 li
192.431 457.376 192.095 457.039 192.095 456.629 cv
192.095 454.374 li
192.095 453.961 192.431 453.626 192.842 453.626 cv
193.93 453.626 li
194.341 453.626 194.677 453.961 194.677 454.374 cv
194.677 454.374 li
cp
309.754 462.076 mo
318.68 464.674 li
301.048 457.451 mo
311.73 457.764 322.834 459.061 334.167 460.895 cv
291.35 464.838 mo
291.35 466.412 li
291.35 466.885 290.96 467.272 290.487 467.272 cv
286.599 467.272 li
286.125 467.272 285.737 466.885 285.737 466.412 cv
285.737 464.838 li
285.737 464.365 286.125 463.978 286.599 463.978 cv
290.487 463.978 li
290.96 463.978 291.35 464.365 291.35 464.838 cv
291.35 464.838 li
cp
298.324 464.69 mo
298.324 465.951 li
298.324 466.33 298.012 466.642 297.633 466.642 cv
292.711 466.642 li
292.331 466.642 292.019 466.33 292.019 465.951 cv
292.019 464.69 li
292.019 464.309 292.331 463.998 292.711 463.998 cv
297.633 463.998 li
298.012 463.998 298.324 464.309 298.324 464.69 cv
298.324 464.69 li
cp
286.085 463.144 mo
286.085 461.831 li
286.085 461.254 286.555 460.786 287.13 460.786 cv
297.318 460.786 li
297.894 460.786 298.364 461.254 298.364 461.831 cv
298.364 463.144 li
284.916 468.059 mo
284.916 464.313 li
284.916 463.669 285.442 463.144 286.085 463.144 cv
299.096 463.144 li
274.251 467.84 mo
274.251 458.755 li
172.393 461.681 mo
274.251 462.616 li
283.235 464.814 mo
283.235 465.404 li
283.235 465.672 283.017 465.892 282.749 465.892 cv
278.191 465.892 li
277.924 465.892 277.705 465.672 277.705 465.404 cv
277.705 464.814 li
277.705 464.545 277.924 464.327 278.191 464.327 cv
282.749 464.327 li
283.017 464.327 283.235 464.545 283.235 464.814 cv
283.235 464.814 li
cp
276.282 458.755 mo
276.282 467.883 li
234.106 460.07 mo
234.106 460.581 li
234.106 460.842 233.892 461.057 233.629 461.057 cv
231.534 461.057 li
231.27 461.057 231.055 460.842 231.055 460.581 cv
231.055 460.07 li
231.055 459.807 231.27 459.593 231.534 459.593 cv
233.629 459.593 li
233.892 459.593 234.106 459.807 234.106 460.07 cv
234.106 460.07 li
cp
252.287 463.351 mo
252.287 464.042 li
252.287 464.355 252.03 464.611 251.717 464.611 cv
245.251 464.611 li
244.937 464.611 244.681 464.355 244.681 464.042 cv
244.681 463.351 li
244.681 463.038 244.937 462.782 245.251 462.782 cv
251.717 462.782 li
252.03 462.782 252.287 463.038 252.287 463.351 cv
252.287 463.351 li
cp
298.019 457.075 mo
298.019 458.755 li
298.896 457.075 mo
251.05 457.075 li
250.812 457.075 250.619 457.269 250.619 457.506 cv
250.619 458.324 li
250.619 458.561 250.812 458.755 251.05 458.755 cv
299.333 458.755 li
299.842 458.755 300.256 458.341 300.256 457.832 cv
300.256 455.501 li
237.162 525.781 mo
242.263 525.781 li
249.203 529.023 mo
236.447 529.023 li
233.783 529.093 mo
200.633 529.093 li
200.123 525.828 mo
229.37 525.828 li
236.447 525.565 mo
236.447 521.586 li
233.783 528.336 mo
233.783 531.628 li
233.783 532.07 234.142 532.429 234.582 532.429 cv
235.645 532.429 li
236.086 532.429 236.447 532.07 236.447 531.628 cv
236.447 528.09 li
233.783 520.725 mo
233.783 525.349 li
269.714 493.102 mo
269.714 496.639 li
269.714 497.155 269.293 497.576 268.778 497.576 cv
263.451 497.576 li
262.936 497.576 262.515 497.155 262.515 496.639 cv
262.515 493.102 li
262.515 492.588 262.936 492.166 263.451 492.166 cv
268.778 492.166 li
269.293 492.166 269.714 492.588 269.714 493.102 cv
269.714 493.102 li
cp
268.087 483.259 mo
268.087 484.563 267.031 485.619 265.728 485.619 cv
264.425 485.619 263.369 484.563 263.369 483.259 cv
263.369 481.958 264.425 480.901 265.728 480.901 cv
267.031 480.901 268.087 481.958 268.087 483.259 cv
268.087 483.259 li
cp
256.966 493.834 mo
256.966 495.137 255.909 496.193 254.605 496.193 cv
253.304 496.193 252.248 495.137 252.248 493.834 cv
252.248 492.533 253.304 491.475 254.605 491.475 cv
255.909 491.475 256.966 492.533 256.966 493.834 cv
256.966 493.834 li
cp
271.252 499.874 mo
233.783 499.874 li
233.783 498.633 mo
195.516 498.633 li
237.501 521.586 mo
234.644 521.586 li
234.17 521.586 233.783 521.201 233.783 520.725 cv
233.783 481.21 li
238.093 526.819 mo
238.093 529.412 227.235 528.168 227.235 526.878 cv
227.235 525.588 238.093 524.228 238.093 526.819 cv
238.093 526.819 li
cp
201.902 478.054 mo
201.902 487.116 li
201.902 487.692 202.372 488.162 202.948 488.162 cv
207.638 488.162 li
207.801 488.162 207.942 488.129 208.09 488.059 cv
222.43 481.178 245.416 478.909 272.621 478.889 cv
272.621 467.809 li
287.845 498.908 mo
287.845 469.262 li
274.251 467.84 mo
274.251 499.527 li
202.548 464.838 mo
202.548 465.082 li
202.548 465.284 202.383 465.449 202.183 465.449 cv
194.882 465.449 li
194.68 465.449 194.516 465.284 194.516 465.082 cv
194.516 464.838 li
194.516 464.637 194.68 464.471 194.882 464.471 cv
202.183 464.471 li
202.383 464.471 202.548 464.637 202.548 464.838 cv
202.548 464.838 li
cp
192.036 464.838 mo
192.036 465.082 li
192.036 465.284 191.87 465.449 191.669 465.449 cv
188.538 465.449 li
188.336 465.449 188.171 465.284 188.171 465.082 cv
188.171 464.838 li
188.171 464.637 188.336 464.471 188.538 464.471 cv
191.669 464.471 li
191.87 464.471 192.036 464.637 192.036 464.838 cv
192.036 464.838 li
cp
194.154 466.166 mo
194.154 483.568 li
192.977 484.675 mo
206.277 471.174 233.14 467.683 264.671 467.638 cv
209.629 581.939 mo
261.266 581.939 li
206.769 565.056 mo
261.876 565.056 li
203.874 547.973 mo
284.669 547.973 li
282.552 566.728 mo
280.947 566.728 li
280.338 566.728 279.84 567.226 279.84 567.835 cv
279.84 570.572 li
279.84 571.18 280.338 571.678 280.947 571.678 cv
282.016 571.678 li
274.319 574.521 mo
274.319 581.945 li
281.696 574.521 mo
273.813 574.521 li
273.134 574.521 272.583 575.074 272.583 575.751 cv
272.583 580.714 li
272.583 581.392 273.134 581.945 273.813 581.945 cv
280.889 581.945 li
275.063 645.328 mo
275.768 645.328 li
276.074 645.328 276.323 645.577 276.323 645.883 cv
276.323 647.957 li
276.323 648.261 276.074 648.511 275.768 648.511 cv
275.063 648.511 li
275.063 645.075 mo
275.063 648.766 li
275.063 649.087 274.793 649.338 274.473 649.318 cv
272.514 649.194 270.386 648.455 270.386 646.947 cv
270.386 645.235 272.475 644.617 274.482 644.521 cv
274.799 644.505 275.063 644.756 275.063 645.075 cv
275.063 645.075 li
cp
275.671 639.839 mo
276.378 639.839 li
276.685 639.839 276.934 640.086 276.934 640.392 cv
276.934 642.467 li
276.934 642.771 276.685 643.02 276.378 643.02 cv
275.671 643.02 li
275.671 639.584 mo
275.671 643.275 li
275.671 643.596 275.404 643.849 275.083 643.827 cv
273.125 643.704 270.995 642.963 270.995 641.458 cv
270.995 639.746 273.085 639.126 275.092 639.031 cv
275.41 639.017 275.671 639.265 275.671 639.584 cv
275.671 639.584 li
cp
271.89 612.236 mo
271.89 619.66 li
277.545 612.236 mo
271.25 612.236 li
270.572 612.236 270.019 612.788 270.019 613.466 cv
270.019 618.429 li
270.019 619.106 270.572 619.66 271.25 619.66 cv
276.738 619.66 li
269.401 638.397 mo
269.401 630.383 li
269.401 629.875 269.815 629.46 270.325 629.46 cv
275.723 629.46 li
274.671 638.36 mo
269.663 638.36 li
269.175 638.36 268.774 638.736 268.741 639.221 cv
268.066 649.333 li
230.028 611.684 mo
260.169 611.684 li
231.534 628.874 mo
259.522 628.874 li
233.325 649.333 mo
273.445 649.333 li
234.894 667.257 mo
242.42 667.257 li
242.726 667.257 242.974 667.008 242.974 666.704 cv
242.974 666.209 li
242.974 665.906 243.223 665.657 243.527 665.657 cv
248.52 665.657 li
248.826 665.657 249.075 665.906 249.075 666.209 cv
249.075 666.566 li
249.075 666.872 249.323 667.122 249.629 667.122 cv
258.107 667.122 li
262.719 688.477 mo
262.719 686.5 li
264.622 688.477 mo
262.359 688.477 li
261.92 688.477 261.56 688.835 261.56 689.277 cv
261.56 691.545 li
265.991 686.5 mo
261.593 686.5 li
260.813 686.5 260.177 687.134 260.177 687.915 cv
260.177 692.486 li
240.914 688.317 mo
244.963 688.317 li
246.116 688.317 247.055 689.259 247.055 690.41 cv
247.055 692.429 li
238.699 686.226 mo
246.415 686.226 li
247.565 686.226 248.506 687.166 248.506 688.317 cv
248.506 692.994 li
263.05 532.994 mo
257.697 678.621 li
226.71 667.349 mo
234.84 666.637 li
223.573 658.752 mo
234.069 657.833 li
221.363 650.379 mo
233.325 649.333 li
230.604 636.176 mo
231.126 640.505 li
222.275 641.575 mo
232.537 640.335 li
221.724 637.253 mo
232.156 635.99 li
220.506 630.629 mo
222.4 640.946 li
222.487 641.421 222.174 641.869 221.697 641.951 cv
219.851 642.263 li
217.947 631.037 mo
231.534 628.874 li
216.52 622.613 mo
230.825 620.782 li
215.009 613.688 mo
230.028 611.684 li
213.586 605.292 mo
228.188 604.042 li
228.829 603.986 229.396 604.464 229.452 605.103 cv
235.421 673.273 li
235.482 673.96 234.946 674.544 234.257 674.544 cv
230.229 674.544 li
232.665 678.621 mo
269.341 678.621 li
212.778 600.523 mo
278.83 600.523 li
274.594 639.066 mo
285.974 535.632 li
273.99 644.555 mo
274.083 643.71 li
160.394 465.46 mo
177.448 465.678 190.656 469.963 193.749 488.222 cv
220.302 644.927 li
228.878 695.551 266.416 713.399 271.389 668.19 cv
273.479 649.203 li
65.9072 455.66 mo
91.3725 458.157 116.865 459.286 142.765 460.478 cv
155.738 462.322 mo
155.738 465.274 li
155.942 451.525 mo
154.857 452.361 150.529 454.834 148.55 456.751 cv
146.635 458.607 147.826 459.644 149.29 460.052 cv
152.015 460.812 159.059 460.66 162.274 460.831 cv
174.304 454.378 mo
176.984 456.157 li
174.89 453.45 mo
177.566 455.169 li
168.284 451.152 mo
168.284 462.376 li
59.0234 451.638 mo
64.8135 452.22 64.1772 454.876 67.3647 456.8 cv
35.9053 509.784 mo
27.4883 509.784 li
33.8511 502.358 mo
23.8144 502.358 li
31.7974 494.931 mo
21.2905 494.931 li
32.0029 492.959 mo
20.8008 492.959 li
19.6391 485.349 mo
37.0351 485.349 li
21.1767 479.415 mo
37.084 479.415 li
21.4258 475.028 mo
37.084 475.028 li
21.4258 473.075 mo
37.084 473.075 li
37.084 466.649 mo
21.4258 466.649 li
37.084 459.573 mo
21.4258 459.573 li
29.8628 453.613 mo
35.2485 455.024 li
36.3447 455.313 37.084 456.271 37.084 457.405 cv
37.084 484.976 li
37.084 485.51 36.9365 485.97 36.6255 486.406 cv
32.2558 492.525 li
31.9448 492.96 31.7974 493.42 31.7974 493.955 cv
31.7974 494.931 li
31.7974 495.174 31.8266 495.383 31.895 495.617 cv
35.8076 509.098 li
35.875 509.333 35.9053 509.54 35.9053 509.784 cv
35.9053 518.212 li
44.2422 493.574 mo
44.2422 508.214 li
44.2422 512.841 42.1704 517.216 38.105 519.684 cv
39.4097 478.2 mo
61.7905 478.2 li
39.4097 462.746 mo
61.7905 462.746 li
39.4097 490.587 mo
39.4097 493.574 li
61.7905 455.34 mo
61.7905 493.574 li
39.4097 452.957 mo
39.4097 490.587 li
39.4097 490.824 39.2197 491.015 38.9839 491.019 cv
38.1948 491.029 li
37.9546 491.031 37.7651 491.226 37.7695 491.466 cv
37.7969 493.15 li
37.8003 493.384 37.9922 493.574 38.228 493.574 cv
64.5874 493.574 li
19.3926 479.706 mo
19.3994 509.308 39.3066 529.176 53.5976 518.692 cv
67.4551 508.526 65.458 474.245 67.5732 456.849 cv
31.6777 452.494 mo
19.5508 459.972 li
18.1489 460.836 17.3594 462.251 17.3594 463.897 cv
17.3594 478.783 li
17.3594 479.292 17.7739 479.706 18.2827 479.706 cv
20.5029 479.706 li
21.0122 479.706 21.4258 479.292 21.4258 478.783 cv
21.4258 458.7 li
326.883 519.371 mo
326.883 521.131 li
326.883 521.707 326.414 522.178 325.838 522.178 cv
323.795 522.178 li
323.724 518.982 mo
324.935 518.982 li
323.7 518.21 mo
320.968 518.21 li
324.546 516.038 mo
329.584 516.038 li
329.889 516.038 330.137 516.286 330.137 516.591 cv
330.137 518.818 li
330.137 519.123 329.889 519.371 329.584 519.371 cv
325.487 519.371 li
325.181 519.371 324.931 519.123 324.931 518.818 cv
324.931 516.038 li
326.986 514.289 mo
326.986 514.877 li
326.986 515.134 326.775 515.345 326.518 515.345 cv
323.977 515.345 li
323.719 515.345 323.508 515.134 323.508 514.877 cv
323.508 514.289 li
323.508 514.031 323.719 513.82 323.977 513.82 cv
326.518 513.82 li
326.775 513.82 326.986 514.031 326.986 514.289 cv
326.986 514.289 li
cp
317.816 519.777 mo
320.968 519.777 li
320.073 515.021 mo
317.816 515.021 li
323.651 513.109 mo
324.076 499.27 324.061 485.971 322.786 474.21 cv
322.742 473.801 322.156 473.764 322.059 474.164 cv
319.998 482.763 319.058 492.092 320.898 503.236 cv
321.146 504.733 321.252 506.028 321.252 507.543 cv
321.252 513.109 li
320.968 516.931 mo
320.968 521.999 li
320.968 529.36 318.896 532.316 322.215 540.24 cv
322.339 540.533 322.765 540.494 322.811 540.177 cv
323.819 533.158 323.987 525.296 323.651 516.931 cv
322.31 513.109 mo
322.31 517.5 li
324.546 515.345 mo
324.546 516.038 li
324.546 516.53 324.144 516.931 323.651 516.931 cv
320.968 516.931 li
320.476 516.931 320.073 516.53 320.073 516.038 cv
320.073 514.003 li
320.073 513.511 320.476 513.109 320.968 513.109 cv
323.651 513.109 li
324.081 513.109 324.442 513.414 324.527 513.82 cv
309.58 505.26 mo
309.58 507.836 303.562 506.47 303.562 505.26 cv
303.562 504.05 309.58 502.683 309.58 505.26 cv
309.58 505.26 li
cp
309.58 530.109 mo
309.58 532.685 303.562 531.32 303.562 530.109 cv
303.562 528.899 309.58 527.532 309.58 530.109 cv
309.58 530.109 li
cp
309.58 517.603 mo
309.58 520.824 303.562 519.116 303.562 517.603 cv
303.562 516.09 309.58 514.384 309.58 517.603 cv
309.58 517.603 li
cp
278.082 520.247 mo
264.177 520.247 li
263.906 520.247 263.685 520.026 263.685 519.755 cv
263.685 515.249 li
263.685 514.979 263.906 514.757 264.177 514.757 cv
285.895 514.757 li
278.082 514.757 mo
278.082 524.695 li
278.082 525.135 278.442 525.495 278.881 525.495 cv
285.895 525.495 li
287.845 532.895 mo
293.454 532.895 li
287.845 528.503 mo
293.454 528.503 li
287.845 523.379 mo
293.454 523.379 li
287.845 517.412 mo
293.454 517.412 li
287.845 511.341 mo
293.454 511.341 li
287.845 506.054 mo
293.454 506.054 li
287.845 501.825 mo
293.454 501.825 li
285.895 498.941 mo
285.895 535.786 li
287.845 498.908 mo
287.845 535.913 li
293.454 498.914 mo
293.454 536.126 li
310.776 499.745 mo
310.776 536.104 li
240.873 524.738 mo
253.933 533.505 278.282 536.677 308.951 536.246 cv
311.72 536.206 317.816 535.437 317.816 531.805 cv
317.816 504.034 li
317.816 500.375 311.159 499.689 308.371 499.511 cv
280.764 497.74 255.399 499.382 240.352 509.651 cv
233.82 514.11 234.709 520.6 240.873 524.738 cv
240.873 524.738 li
cp
195.286 446.292 mo
195.286 445.582 li
195.286 445.312 195.067 445.093 194.798 445.093 cv
191.911 445.093 li
191.642 445.093 191.423 445.312 191.423 445.582 cv
191.423 446.292 li
191.423 446.561 191.642 446.781 191.911 446.781 cv
194.798 446.781 li
195.067 446.781 195.286 446.561 195.286 446.292 cv
195.286 446.292 li
cp
198.947 446.503 mo
198.947 446.063 198.589 445.704 198.147 445.704 cv
196.779 445.704 li
196.338 445.704 195.978 446.063 195.978 446.503 cv
195.978 453.904 li
195.978 454.344 196.338 454.703 196.779 454.703 cv
198.147 454.703 li
198.589 454.703 198.947 454.344 198.947 453.904 cv
198.947 446.503 li
198.947 446.503 li
cp
189.613 446.503 mo
189.613 446.063 189.255 445.704 188.814 445.704 cv
187.445 445.704 li
187.004 445.704 186.644 446.063 186.644 446.503 cv
186.644 453.904 li
186.644 454.344 187.004 454.703 187.445 454.703 cv
188.814 454.703 li
189.255 454.703 189.613 454.344 189.613 453.904 cv
189.613 446.503 li
189.613 446.503 li
cp
200.146 446.2 mo
200.146 444.134 198.462 442.451 196.396 442.451 cv
188.525 442.451 li
186.459 442.451 184.773 444.134 184.773 446.2 cv
184.773 454.207 li
184.773 456.272 186.459 457.957 188.525 457.957 cv
196.396 457.957 li
198.462 457.957 200.146 456.272 200.146 454.207 cv
200.146 446.2 li
200.146 446.2 li
cp
203.847 442.094 mo
203.847 441.348 203.239 440.741 202.494 440.741 cv
183.727 440.741 li
182.982 440.741 182.374 441.348 182.374 442.094 cv
182.374 458.312 li
182.374 459.057 182.982 459.665 183.727 459.665 cv
202.494 459.665 li
203.239 459.665 203.847 459.057 203.847 458.312 cv
203.847 442.094 li
203.847 442.094 li
cp
309.754 438.331 mo
318.68 435.732 li
301.048 437.346 mo
307.102 437.669 311.155 437.5 315.585 441.989 cv
320.453 448.458 li
320.717 448.809 320.717 451.597 320.453 451.948 cv
315.585 458.417 li
311.155 462.905 307.102 462.736 301.048 463.059 cv
301.048 435.393 mo
310.823 435.887 318.876 436.613 323.307 441.1 cv
328.003 448.458 li
328.258 448.856 328.258 451.55 328.003 451.948 cv
323.307 459.307 li
318.876 463.793 310.823 464.521 301.048 465.011 cv
301.048 433.767 mo
313.354 434.132 323.515 435.812 329.094 440.297 cv
334.992 448.458 li
335.304 448.891 335.304 451.515 334.992 451.948 cv
329.094 460.109 li
323.515 464.596 313.354 466.274 301.048 466.639 cv
301.048 442.956 mo
311.73 442.642 322.834 441.344 334.167 439.512 cv
291.35 435.568 mo
291.35 433.996 li
291.35 433.521 290.96 433.135 290.487 433.135 cv
286.599 433.135 li
286.125 433.135 285.737 433.521 285.737 433.996 cv
285.737 435.568 li
285.737 436.041 286.125 436.428 286.599 436.428 cv
290.487 436.428 li
290.96 436.428 291.35 436.041 291.35 435.568 cv
291.35 435.568 li
cp
298.324 435.717 mo
298.324 434.457 li
298.324 434.077 298.012 433.765 297.633 433.765 cv
292.711 433.765 li
292.331 433.765 292.019 434.077 292.019 434.457 cv
292.019 435.717 li
292.019 436.097 292.331 436.409 292.711 436.409 cv
297.633 436.409 li
298.012 436.409 298.324 436.097 298.324 435.717 cv
298.324 435.717 li
cp
286.085 437.262 mo
286.085 438.576 li
286.085 439.152 286.555 439.622 287.13 439.622 cv
297.318 439.622 li
297.894 439.622 298.364 439.152 298.364 438.576 cv
298.364 437.262 li
284.916 432.347 mo
284.916 436.095 li
284.916 436.738 285.442 437.262 286.085 437.262 cv
299.096 437.262 li
276.363 443.331 mo
276.363 457.075 li
273.841 443.331 mo
273.841 457.075 li
272.58 443.331 mo
272.58 457.075 li
274.251 432.568 mo
274.251 441.651 li
172.393 438.725 mo
274.251 437.79 li
299.096 441.651 mo
299.096 433.767 li
299.096 433.497 299.318 433.275 299.588 433.275 cv
300.556 433.275 li
300.828 433.275 301.048 433.497 301.048 433.767 cv
301.048 466.639 li
301.048 466.909 300.828 467.131 300.556 467.131 cv
299.588 467.131 li
299.318 467.131 299.096 466.91 299.096 466.639 cv
299.096 458.755 li
283.235 435.594 mo
283.235 435.001 li
283.235 434.734 283.017 434.514 282.749 434.514 cv
278.191 434.514 li
277.924 434.514 277.705 434.734 277.705 435.001 cv
277.705 435.594 li
277.705 435.861 277.924 436.08 278.191 436.08 cv
282.749 436.08 li
283.017 436.08 283.235 435.861 283.235 435.594 cv
283.235 435.594 li
cp
276.282 441.651 mo
276.282 432.523 li
236.628 446.533 mo
236.628 445.923 li
236.628 445.61 236.373 445.354 236.06 445.354 cv
233.539 445.354 li
233.225 445.354 232.969 445.61 232.969 445.923 cv
232.969 446.533 li
232.969 446.847 233.225 447.103 233.539 447.103 cv
236.06 447.103 li
236.373 447.103 236.628 446.847 236.628 446.533 cv
236.628 446.533 li
cp
220.931 446.533 mo
220.931 445.923 li
220.931 445.61 220.673 445.354 220.36 445.354 cv
217.839 445.354 li
217.526 445.354 217.27 445.61 217.27 445.923 cv
217.27 446.533 li
217.27 446.847 217.526 447.103 217.839 447.103 cv
220.36 447.103 li
220.673 447.103 220.931 446.847 220.931 446.533 cv
220.931 446.533 li
cp
252.287 437.056 mo
252.287 436.365 li
252.287 436.051 252.03 435.795 251.717 435.795 cv
245.251 435.795 li
244.937 435.795 244.681 436.051 244.681 436.365 cv
244.681 437.056 li
244.681 437.369 244.937 437.624 245.251 437.624 cv
251.717 437.624 li
252.03 437.624 252.287 437.369 252.287 437.056 cv
252.287 437.056 li
cp
298.019 443.331 mo
298.019 441.651 li
298.896 443.331 mo
251.05 443.331 li
250.812 443.331 250.619 443.136 250.619 442.901 cv
250.619 442.082 li
250.619 441.845 250.812 441.651 251.05 441.651 cv
299.333 441.651 li
299.842 441.651 300.256 442.066 300.256 442.574 cv
300.256 444.905 li
300.256 443.758 mo
300.256 442.914 298.711 442.913 298.711 443.762 cv
298.711 456.644 li
298.711 457.493 300.256 457.493 300.256 456.648 cv
300.256 443.758 li
300.256 443.758 li
cp
237.162 374.626 mo
242.263 374.626 li
249.203 371.382 mo
236.447 371.382 li
233.783 371.313 mo
200.633 371.313 li
200.123 374.578 mo
229.37 374.578 li
236.447 374.841 mo
236.447 378.82 li
233.783 372.07 mo
233.783 368.777 li
233.783 368.336 234.142 367.978 234.582 367.978 cv
235.645 367.978 li
236.086 367.978 236.447 368.336 236.447 368.777 cv
236.447 372.315 li
233.783 379.682 mo
233.783 375.058 li
269.714 407.304 mo
269.714 403.766 li
269.714 403.251 269.293 402.831 268.778 402.831 cv
263.451 402.831 li
262.936 402.831 262.515 403.251 262.515 403.766 cv
262.515 407.304 li
262.515 407.819 262.936 408.24 263.451 408.24 cv
268.778 408.24 li
269.293 408.24 269.714 407.819 269.714 407.304 cv
269.714 407.304 li
cp
268.087 417.147 mo
268.087 415.843 267.031 414.788 265.728 414.788 cv
264.425 414.788 263.369 415.843 263.369 417.147 cv
263.369 418.448 264.425 419.504 265.728 419.504 cv
267.031 419.504 268.087 418.448 268.087 417.147 cv
268.087 417.147 li
cp
256.966 406.573 mo
256.966 405.269 255.909 404.213 254.605 404.213 cv
253.304 404.213 252.248 405.269 252.248 406.573 cv
252.248 407.874 253.304 408.931 254.605 408.931 cv
255.909 408.931 256.966 407.874 256.966 406.573 cv
256.966 406.573 li
cp
271.252 400.532 mo
233.783 400.532 li
233.783 401.773 mo
195.516 401.773 li
237.501 378.82 mo
234.644 378.82 li
234.17 378.82 233.783 379.207 233.783 379.682 cv
233.783 419.198 li
238.093 373.587 mo
238.093 370.995 227.235 372.238 227.235 373.528 cv
227.235 374.817 238.093 376.178 238.093 373.587 cv
238.093 373.587 li
cp
201.902 422.352 mo
201.902 413.29 li
201.902 412.714 202.372 412.245 202.948 412.245 cv
207.638 412.245 li
207.801 412.245 207.942 412.277 208.09 412.347 cv
222.43 419.228 245.416 421.498 272.621 421.517 cv
272.621 432.597 li
287.845 401.498 mo
287.845 431.144 li
274.251 432.568 mo
274.251 400.88 li
202.548 435.568 mo
202.548 435.325 li
202.548 435.123 202.383 434.957 202.183 434.957 cv
194.882 434.957 li
194.68 434.957 194.516 435.123 194.516 435.325 cv
194.516 435.568 li
194.516 435.769 194.68 435.934 194.882 435.934 cv
202.183 435.934 li
202.383 435.934 202.548 435.769 202.548 435.568 cv
202.548 435.568 li
cp
192.036 435.568 mo
192.036 435.325 li
192.036 435.123 191.87 434.957 191.669 434.957 cv
188.538 434.957 li
188.336 434.957 188.171 435.123 188.171 435.325 cv
188.171 435.568 li
188.171 435.769 188.336 435.934 188.538 435.934 cv
191.669 435.934 li
191.87 435.934 192.036 435.769 192.036 435.568 cv
192.036 435.568 li
cp
194.154 434.24 mo
194.154 416.839 li
192.977 415.731 mo
206.277 429.232 233.14 432.723 264.671 432.768 cv
209.629 318.469 mo
261.266 318.469 li
206.769 335.351 mo
261.876 335.351 li
203.874 352.434 mo
284.669 352.434 li
282.552 333.678 mo
280.947 333.678 li
280.338 333.678 279.84 333.181 279.84 332.57 cv
279.84 329.835 li
279.84 329.226 280.338 328.728 280.947 328.728 cv
282.016 328.728 li
274.319 325.886 mo
274.319 318.462 li
281.696 325.886 mo
273.813 325.886 li
273.134 325.886 272.583 325.332 272.583 324.655 cv
272.583 319.692 li
272.583 319.013 273.134 318.462 273.813 318.462 cv
280.889 318.462 li
275.063 255.078 mo
275.768 255.078 li
276.074 255.078 276.323 254.828 276.323 254.524 cv
276.323 252.449 li
276.323 252.145 276.074 251.896 275.768 251.896 cv
275.063 251.896 li
275.063 255.332 mo
275.063 251.641 li
275.063 251.32 274.793 251.068 274.473 251.089 cv
272.514 251.213 270.386 251.953 270.386 253.458 cv
270.386 255.171 272.475 255.789 274.482 255.886 cv
274.799 255.9 275.063 255.651 275.063 255.332 cv
275.063 255.332 li
cp
275.671 260.568 mo
276.378 260.568 li
276.685 260.568 276.934 260.319 276.934 260.015 cv
276.934 257.94 li
276.934 257.634 276.685 257.385 276.378 257.385 cv
275.671 257.385 li
275.671 260.823 mo
275.671 257.132 li
275.671 256.81 275.404 256.559 275.083 256.578 cv
273.125 256.702 270.995 257.443 270.995 258.948 cv
270.995 260.662 273.085 261.279 275.092 261.376 cv
275.41 261.39 275.671 261.141 275.671 260.823 cv
275.671 260.823 li
cp
271.89 288.171 mo
271.89 280.748 li
277.545 288.171 mo
271.25 288.171 li
270.572 288.171 270.019 287.619 270.019 286.941 cv
270.019 281.978 li
270.019 281.301 270.572 280.748 271.25 280.748 cv
276.738 280.748 li
269.401 262.009 mo
269.401 270.024 li
269.401 270.531 269.815 270.946 270.325 270.946 cv
275.723 270.946 li
274.671 262.046 mo
269.663 262.046 li
269.175 262.046 268.774 261.67 268.741 261.186 cv
268.066 251.074 li
230.028 288.722 mo
260.169 288.722 li
231.534 271.533 mo
259.522 271.533 li
233.325 251.074 mo
273.445 251.074 li
234.894 233.149 mo
242.42 233.149 li
242.726 233.149 242.974 233.398 242.974 233.704 cv
242.974 234.196 li
242.974 234.501 243.223 234.75 243.527 234.75 cv
248.52 234.75 li
248.826 234.75 249.075 234.501 249.075 234.196 cv
249.075 233.839 li
249.075 233.535 249.323 233.286 249.629 233.286 cv
258.107 233.286 li
262.719 211.93 mo
262.719 213.907 li
264.622 211.93 mo
262.359 211.93 li
261.92 211.93 261.56 211.571 261.56 211.13 cv
261.56 208.863 li
265.991 213.907 mo
261.593 213.907 li
260.813 213.907 260.177 213.272 260.177 212.493 cv
260.177 207.919 li
240.914 212.089 mo
244.963 212.089 li
246.116 212.089 247.055 211.148 247.055 209.997 cv
247.055 207.978 li
238.699 214.18 mo
246.415 214.18 li
247.565 214.18 248.506 213.241 248.506 212.09 cv
248.506 207.412 li
263.05 367.411 mo
257.697 221.785 li
226.71 233.058 mo
234.84 233.77 li
223.573 241.655 mo
234.069 242.574 li
221.363 250.026 mo
233.325 251.074 li
230.604 264.23 mo
231.126 259.901 li
222.275 258.832 mo
232.537 260.071 li
221.724 263.153 mo
232.156 264.418 li
220.506 269.778 mo
222.4 259.461 li
222.487 258.985 222.174 258.538 221.697 258.456 cv
219.851 258.143 li
217.947 269.369 mo
231.534 271.533 li
216.52 277.793 mo
230.825 279.625 li
215.009 286.719 mo
230.028 288.722 li
213.586 295.113 mo
228.188 296.365 li
228.829 296.42 229.396 295.943 229.452 295.302 cv
235.421 227.134 li
235.482 226.446 234.946 225.863 234.257 225.863 cv
230.229 225.863 li
232.665 221.785 mo
269.341 221.785 li
212.778 299.884 mo
278.83 299.884 li
274.594 261.34 mo
285.974 364.775 li
273.99 255.851 mo
274.083 256.696 li
160.394 434.946 mo
177.448 434.728 190.656 430.443 193.749 412.184 cv
220.302 255.48 li
228.878 204.855 266.416 187.009 271.389 232.217 cv
273.479 251.205 li
65.9072 444.749 mo
91.3725 442.251 116.865 441.121 142.765 439.928 cv
155.738 438.084 mo
155.738 435.132 li
155.942 448.881 mo
154.857 448.045 150.529 445.572 148.55 443.655 cv
146.635 441.799 147.826 440.761 149.29 440.354 cv
152.015 439.594 159.059 439.747 162.274 439.575 cv
168.704 438.037 mo
143.991 438.129 li
143.315 438.131 142.765 438.683 142.765 439.36 cv
142.765 461.046 li
142.765 461.723 143.315 462.275 143.991 462.277 cv
168.704 462.369 li
174.304 446.028 mo
176.984 444.249 li
174.89 446.957 mo
177.566 445.235 li
159.229 444.758 mo
161.069 441.497 164.436 439.557 168.284 439.557 cv
174.107 439.557 178.825 444.309 178.825 450.204 cv
178.825 456.097 174.107 460.849 168.284 460.849 cv
164.436 460.849 161.069 458.91 159.229 455.649 cv
168.284 449.254 mo
168.284 438.03 li
157.744 443.855 mo
162.525 446.864 li
163.427 447.433 163.934 448.348 163.934 449.415 cv
163.934 450.993 li
163.934 452.058 163.427 452.975 162.525 453.542 cv
157.744 456.551 li
168.284 449.254 mo
166.715 449.254 166.715 451.152 168.284 451.152 cv
169.854 451.152 169.854 449.254 168.284 449.254 cv
168.284 449.254 li
cp
161.956 446.479 mo
163.282 444.383 165.621 442.992 168.284 442.992 cv
178.093 442.992 178.093 457.415 168.284 457.415 cv
165.621 457.415 163.282 456.023 161.956 453.927 cv
180.729 450.204 mo
180.729 443.6 175.158 438.03 168.284 438.03 cv
161.411 438.03 155.839 443.6 155.839 450.204 cv
155.839 456.805 161.411 462.376 168.284 462.376 cv
175.158 462.376 180.729 456.805 180.729 450.204 cv
180.729 450.204 li
cp
103.702 440.134 mo
103.702 460.273 li
59.0234 448.769 mo
64.8135 448.186 64.1772 445.53 67.3647 443.607 cv
61.3179 445.155 mo
62.4761 446.435 65.2329 447.076 67.7173 447.766 cv
73.6343 449.41 73.8403 450.934 67.792 452.621 cv
65.2871 453.32 62.4873 453.96 61.3179 455.251 cv
35.0493 448.678 mo
41.0312 448.767 41.0312 451.639 35.0493 451.728 cv
60.4072 448.953 mo
51.8428 447.578 26.9546 448.895 12.228 450.019 cv
12.0039 450.037 12.0039 450.371 12.228 450.387 cv
27.0034 451.514 52.0088 452.838 60.4917 451.44 cv
64.4355 450.79 64.2036 449.563 60.4072 448.953 cv
60.4072 448.953 li
cp
35.9053 390.624 mo
27.4883 390.624 li
33.8511 398.048 mo
23.8144 398.048 li
31.7974 405.476 mo
21.2905 405.476 li
32.0029 407.448 mo
20.8008 407.448 li
19.6391 415.057 mo
37.0351 415.057 li
21.1767 420.992 mo
37.084 420.992 li
21.4258 425.378 mo
37.084 425.378 li
21.4258 427.332 mo
37.084 427.332 li
37.084 433.756 mo
21.4258 433.756 li
37.084 440.833 mo
21.4258 440.833 li
29.8628 446.793 mo
35.2485 445.381 li
36.3447 445.093 37.084 444.136 37.084 443.001 cv
37.084 415.43 li
37.084 414.895 36.9365 414.436 36.6255 414 cv
32.2558 407.881 li
31.9448 407.446 31.7974 406.986 31.7974 406.452 cv
31.7974 405.476 li
31.7974 405.231 31.8266 405.023 31.895 404.79 cv
35.8076 391.308 li
35.875 391.075 35.9053 390.867 35.9053 390.624 cv
35.9053 382.195 li
44.2422 406.832 mo
44.2422 392.193 li
44.2422 387.566 42.1704 383.19 38.105 380.722 cv
39.4097 422.207 mo
61.7905 422.207 li
39.4097 437.661 mo
61.7905 437.661 li
39.4097 409.82 mo
39.4097 406.832 li
61.7905 445.066 mo
61.7905 406.832 li
39.4097 447.451 mo
39.4097 409.82 li
39.4097 409.583 39.2197 409.391 38.9839 409.388 cv
38.1948 409.377 li
37.9546 409.375 37.7651 409.18 37.7695 408.94 cv
37.7969 407.257 li
37.8003 407.022 37.9922 406.832 38.228 406.832 cv
64.5874 406.832 li
19.3926 420.702 mo
19.3994 391.098 39.3066 371.23 53.5976 381.715 cv
67.4551 391.88 65.458 426.162 67.5732 443.557 cv
31.6777 447.913 mo
19.5508 440.436 li
18.1489 439.57 17.3594 438.157 17.3594 436.509 cv
17.3594 421.624 li
17.3594 421.115 17.7739 420.702 18.2827 420.702 cv
20.5029 420.702 li
21.0122 420.702 21.4258 421.115 21.4258 421.624 cv
21.4258 441.707 li
340.57 450.204 mo
340.57 449.926 li
340.57 449.25 340.392 448.669 340.015 448.11 cv
334.805 440.353 li
333.894 438.999 332.778 438.06 331.286 437.397 cv
320.928 432.791 304.571 431.457 286.374 431.126 cv
285.541 431.112 285.547 432.332 284.732 432.347 cv
156.581 435.026 li
68.9311 443.342 li
68.0195 443.428 67.2505 443.598 66.3872 443.902 cv
57.2231 447.131 27.9663 448.175 .959949 449.277 cv
.122547 449.31 .122547 451.096 .959949 451.13 cv
27.9663 452.231 57.2231 453.275 66.3872 456.504 cv
67.2505 456.808 68.0195 456.978 68.9311 457.065 cv
156.581 465.381 li
284.732 468.059 li
285.547 468.077 285.541 469.293 286.374 469.28 cv
304.571 468.95 320.928 467.615 331.286 463.009 cv
332.778 462.346 333.894 461.409 334.805 460.053 cv
340.015 452.297 li
340.392 451.737 340.57 451.156 340.57 450.48 cv
340.57 450.204 li
326.883 381.035 mo
326.883 379.275 li
326.883 378.699 326.414 378.229 325.838 378.229 cv
323.795 378.229 li
323.724 381.424 mo
324.935 381.424 li
323.7 382.196 mo
320.968 382.196 li
324.546 384.368 mo
329.584 384.368 li
329.889 384.368 330.137 384.121 330.137 383.815 cv
330.137 381.59 li
330.137 381.284 329.889 381.035 329.584 381.035 cv
325.487 381.035 li
325.181 381.035 324.931 381.284 324.931 381.59 cv
324.931 384.368 li
326.986 386.119 mo
326.986 385.529 li
326.986 385.272 326.775 385.062 326.518 385.062 cv
323.977 385.062 li
323.719 385.062 323.508 385.272 323.508 385.529 cv
323.508 386.119 li
323.508 386.376 323.719 386.586 323.977 386.586 cv
326.518 386.586 li
326.775 386.586 326.986 386.376 326.986 386.119 cv
326.986 386.119 li
cp
317.816 380.627 mo
320.968 380.627 li
320.073 385.385 mo
317.816 385.385 li
323.651 387.297 mo
324.076 401.136 324.061 414.435 322.786 426.196 cv
322.742 426.605 322.156 426.642 322.059 426.243 cv
319.998 417.643 319.058 408.314 320.898 397.17 cv
321.146 395.673 321.252 394.379 321.252 392.863 cv
321.252 387.297 li
320.968 383.475 mo
320.968 378.407 li
320.968 371.047 318.896 368.09 322.215 360.166 cv
322.339 359.872 322.765 359.914 322.811 360.229 cv
323.819 367.249 323.987 375.109 323.651 383.475 cv
322.31 387.297 mo
322.31 382.905 li
324.546 385.062 mo
324.546 384.368 li
324.546 383.878 324.144 383.475 323.651 383.475 cv
320.968 383.475 li
320.476 383.475 320.073 383.878 320.073 384.368 cv
320.073 386.404 li
320.073 386.896 320.476 387.297 320.968 387.297 cv
323.651 387.297 li
324.081 387.297 324.442 386.991 324.527 386.586 cv
309.58 395.146 mo
309.58 392.57 303.562 393.936 303.562 395.146 cv
303.562 396.355 309.58 397.723 309.58 395.146 cv
309.58 395.146 li
cp
309.58 370.298 mo
309.58 367.72 303.562 369.086 303.562 370.298 cv
303.562 371.507 309.58 372.874 309.58 370.298 cv
309.58 370.298 li
cp
309.58 382.803 mo
309.58 379.582 303.562 381.29 303.562 382.803 cv
303.562 384.316 309.58 386.023 309.58 382.803 cv
309.58 382.803 li
cp
278.082 380.158 mo
264.177 380.158 li
263.906 380.158 263.685 380.38 263.685 380.652 cv
263.685 385.157 li
263.685 385.429 263.906 385.649 264.177 385.649 cv
285.895 385.649 li
278.082 385.649 mo
278.082 375.712 li
278.082 375.273 278.442 374.912 278.881 374.912 cv
285.895 374.912 li
287.845 367.509 mo
293.454 367.509 li
287.845 371.903 mo
293.454 371.903 li
287.845 377.027 mo
293.454 377.027 li
287.845 382.995 mo
293.454 382.995 li
287.845 389.065 mo
293.454 389.065 li
287.845 394.352 mo
293.454 394.352 li
287.845 398.582 mo
293.454 398.582 li
285.895 401.466 mo
285.895 364.621 li
287.845 401.498 mo
287.845 364.493 li
293.454 401.493 mo
293.454 364.28 li
310.776 400.663 mo
310.776 364.303 li
240.873 375.669 mo
253.933 366.902 278.282 363.729 308.951 364.16 cv
311.72 364.2 317.816 364.97 317.816 368.599 cv
317.816 396.373 li
317.816 400.031 311.159 400.716 308.371 400.895 cv
280.764 402.665 255.399 401.024 240.352 390.755 cv
233.82 386.297 234.709 379.807 240.873 375.669 cv
240.873 375.669 li
cp
@
628.008 58.8437 mo
634.024 49.3677 li
627.289 84.7046 mo
627.531 59.3828 li
627.536 58.647 628.751 58.6455 628.76 59.3813 cv
629.077 84.7046 li
627.448 126.958 mo
627.448 129.931 li
617.185 120.421 mo
617.185 124.171 li
617.185 127.025 619.387 129.38 622.236 129.571 cv
632.991 130.291 li
622.897 120.479 mo
622.897 123.831 li
622.897 124.626 623.337 125.306 624.063 125.629 cv
626.958 126.919 629.961 127.823 633.015 128.552 cv
616.174 131.165 mo
616.707 130.013 li
615.243 130.823 mo
615.998 128.667 li
615.646 131.694 mo
615.938 131.694 616.174 131.458 616.174 131.165 cv
616.174 130.873 615.938 130.636 615.646 130.636 cv
615.354 130.636 615.118 130.873 615.118 131.165 cv
615.118 131.458 615.354 131.694 615.646 131.694 cv
615.646 131.694 li
cp
564.402 138.873 mo
562.538 139.294 561.14 140.966 561.14 142.952 cv
561.14 151.454 li
561.14 151.859 560.808 152.192 560.402 152.192 cv
555.637 152.192 li
555.224 152.192 554.897 151.861 554.899 151.449 cv
555.026 126.462 li
577.291 126.295 mo
577.291 151.208 li
577.291 151.615 576.959 151.947 576.552 151.947 cv
572.308 151.947 li
571.901 151.947 571.57 151.615 571.57 151.208 cv
571.57 142.952 li
571.57 141.403 570.718 140.045 569.461 139.324 cv
569.329 143.523 mo
570.067 144.042 570.551 144.901 570.551 145.868 cv
570.551 165.592 li
570.551 167.169 569.262 168.46 567.685 168.46 cv
565.042 168.46 li
563.465 168.46 562.174 167.169 562.174 165.592 cv
562.174 145.868 li
562.174 144.445 563.224 143.256 564.587 143.036 cv
560.061 154.571 mo
562.174 154.571 li
572.423 154.591 mo
570.551 154.591 li
562.174 156.267 mo
560.045 156.267 li
572.44 156.267 mo
570.551 156.267 li
560.061 155.709 mo
557.173 155.709 li
575.271 155.424 mo
572.423 155.424 li
560.061 152.192 mo
560.061 156.15 li
560.061 156.589 559.701 156.95 559.26 156.95 cv
557.973 156.95 li
557.532 156.95 557.173 156.589 557.173 156.15 cv
557.173 152.192 li
575.271 151.947 mo
575.271 156.109 li
575.271 156.55 574.912 156.909 574.472 156.909 cv
573.224 156.909 li
572.783 156.909 572.423 156.55 572.423 156.109 cv
572.423 151.947 li
536.471 98.9185 mo
534.927 113.542 li
509.331 107.604 mo
509.331 99.8589 li
509.331 99.3164 508.888 98.8735 508.346 98.8735 cv
503.862 98.8735 li
503.32 98.8735 502.878 99.3164 502.878 99.8589 cv
502.878 108.854 li
514.51 106.378 mo
513.899 106.378 li
513.542 106.378 513.249 106.085 513.249 105.728 cv
513.249 104.384 li
513.249 104.027 513.542 103.734 513.899 103.734 cv
514.51 103.734 li
514.869 103.734 515.159 104.027 515.159 104.384 cv
515.159 105.728 li
515.159 106.085 514.869 106.378 514.51 106.378 cv
514.51 106.378 li
cp
515.79 107.658 mo
513.472 107.658 li
512.935 107.658 512.497 107.22 512.497 106.682 cv
512.497 102.087 li
512.497 101.55 512.935 101.111 513.472 101.111 cv
515.79 101.111 li
516.328 101.111 516.765 101.55 516.765 102.087 cv
516.765 106.682 li
516.765 107.22 516.328 107.658 515.79 107.658 cv
515.79 107.658 li
cp
483.444 95.5703 mo
483.444 106.076 li
446 94.4004 mo
454 94.4004 li
454.353 94.4004 454.63 94.6909 454.616 95.0425 cv
454.328 101.813 li
424.347 91.8379 mo
424.347 96.417 li
418.048 91.4409 mo
417.515 95.4819 li
405.572 93.1426 mo
397.782 93.1426 li
547.552 112.651 mo
405.529 93.8994 li
437.033 98.2651 mo
435.752 98.2651 434.715 97.2266 434.715 95.9458 cv
434.715 94.665 435.752 93.6279 437.033 93.6279 cv
438.313 93.6279 439.352 94.665 439.352 95.9458 cv
439.352 97.2266 438.313 98.2651 437.033 98.2651 cv
437.033 98.2651 li
cp
437.033 96.5562 mo
436.697 96.5562 436.423 96.2827 436.423 95.9458 cv
436.423 95.6099 436.697 95.3369 437.033 95.3369 cv
437.37 95.3369 437.643 95.6099 437.643 95.9458 cv
437.643 96.2827 437.37 96.5562 437.033 96.5562 cv
437.033 96.5562 li
cp
442.687 98.834 mo
441.406 98.834 440.367 97.7974 440.367 96.5166 cv
440.367 95.2358 441.406 94.1973 442.687 94.1973 cv
443.967 94.1973 445.003 95.2358 445.003 96.5166 cv
445.003 97.7974 443.967 98.834 442.687 98.834 cv
442.687 98.834 li
cp
442.687 97.1255 mo
442.348 97.1255 442.075 96.8521 442.075 96.5166 cv
442.075 96.1787 442.348 95.9063 442.687 95.9063 cv
443.022 95.9063 443.296 96.1787 443.296 96.5166 cv
443.296 96.8521 443.022 97.1255 442.687 97.1255 cv
442.687 97.1255 li
cp
435.768 92.5596 mo
434.776 92.4971 433.937 93.2769 433.937 94.2778 cv
433.937 97.3633 li
433.937 98.2251 434.562 98.9453 435.416 99.0674 cv
446 100.602 mo
446 93.1973 li
464.16 101.64 mo
464.16 96.4609 li
464.16 96.1108 464.445 95.835 464.795 95.8462 cv
470.804 96.0483 li
471.135 96.0596 471.399 96.3315 471.399 96.6631 cv
471.399 102.469 li
471.399 102.563 471.381 102.645 471.342 102.729 cv
470.664 104.191 li
395.828 90.9365 mo
395.839 93.3022 li
397.742 90.7388 mo
397.792 93.5869 li
405.707 90.6621 mo
405.484 94.7065 li
540.656 99.1831 mo
403.03 90.4927 li
400.619 90.3403 382.306 91.313 394.953 93.1743 cv
548.177 115.469 li
583.28 117.837 mo
583.967 118.524 li
584.904 119.46 583.499 121.462 582.354 121.156 cv
581.483 120.923 li
554.6 126.953 mo
550.904 124.053 li
555.63 125.68 mo
553.568 128.226 li
553.286 128.575 552.78 128.625 552.435 128.337 cv
550.074 126.372 li
549.741 126.095 549.687 125.604 549.955 125.264 cv
552.077 122.561 li
581.366 123.74 mo
578.014 127.034 li
580.234 122.555 mo
582.496 124.927 li
582.805 125.251 582.79 125.761 582.462 126.065 cv
580.208 128.157 li
579.893 128.451 579.398 128.44 579.094 128.131 cv
576.686 125.681 li
602.94 102.139 mo
602.94 101.584 li
602.94 101.347 602.748 101.153 602.51 101.153 cv
598.708 101.153 li
598.587 101.153 598.483 101.197 598.399 101.283 cv
598.315 101.37 598.273 101.475 598.277 101.594 cv
598.292 102.172 li
602.86 115.511 mo
598.182 115.277 li
597.825 115.259 597.532 114.952 597.532 114.593 cv
597.532 114.189 li
597.532 113.831 597.825 113.552 598.182 113.568 cv
602.86 113.802 li
603.218 113.821 603.511 114.128 603.511 114.488 cv
603.511 114.891 li
603.511 115.249 603.218 115.528 602.86 115.511 cv
602.86 115.511 li
cp
615.684 118.092 mo
583.703 116.821 li
615.684 116.627 mo
584.184 115.381 li
559.225 107.394 mo
556.932 106.215 li
560.125 105.757 mo
556.064 103.645 li
559.095 112.487 mo
552.571 113.968 li
558.73 110.656 mo
552.176 112.109 li
562.267 116.472 mo
558.22 121.801 li
560.81 115.305 mo
556.724 120.629 li
567.258 117.487 mo
567.401 120.405 li
565.391 117.53 mo
565.585 121.966 li
571.734 115.056 mo
576.279 119.964 li
570.332 116.286 mo
574.866 121.235 li
573.601 110.314 mo
580.237 111.154 li
573.318 112.16 mo
579.97 113.037 li
571.984 105.484 mo
574.626 103.781 li
572.953 107.079 mo
576.552 104.787 li
567.639 102.824 mo
569.617 96.4336 li
569.407 103.422 mo
571.423 97.0229 li
562.6 103.578 mo
560.008 97.4111 li
564.339 102.9 mo
561.772 96.7012 li
565.75 117.594 mo
561.818 117.383 558.693 114.128 558.693 110.143 cv
558.693 109.13 558.893 108.165 559.259 107.284 cv
572.812 106.767 mo
573.329 107.779 573.62 108.928 573.62 110.143 cv
573.62 113.933 570.792 117.064 567.129 117.542 cv
559.904 106.063 mo
561.237 104.026 563.54 102.678 566.155 102.678 cv
568.567 102.678 570.712 103.822 572.076 105.598 cv
565.725 115.636 mo
562.881 115.416 560.646 113.041 560.646 110.143 cv
560.646 109.439 560.776 108.768 561.015 108.15 cv
571.131 107.768 mo
571.474 108.487 571.667 109.292 571.667 110.143 cv
571.667 112.897 569.644 115.181 567.002 115.589 cv
561.613 107.021 mo
562.607 105.577 564.27 104.631 566.155 104.631 cv
567.89 104.631 569.437 105.433 570.448 106.687 cv
615.718 102.048 mo
583.202 102.28 li
615.966 99.6411 mo
587.375 99.7461 li
588.822 89.7271 mo
562.116 89.7271 li
588.822 88.0708 mo
588.822 91.3818 li
599.693 91.8193 mo
618.647 92.5737 li
602.183 87.7344 mo
567.886 88.5986 li
549.665 89.0576 572.193 90.7256 576.015 90.8779 cv
591.874 91.5078 li
622.584 87.2202 mo
603.882 87.6694 li
564.958 128.872 mo
555.151 128.254 547.388 120.105 547.388 110.143 cv
547.388 107.562 547.906 105.103 548.848 102.866 cv
582.978 101.813 mo
584.224 104.323 584.925 107.15 584.925 110.143 cv
584.925 119.712 577.764 127.607 568.507 128.764 cv
550.532 99.7373 mo
553.897 94.6934 559.638 91.373 566.155 91.373 cv
572.258 91.373 577.679 94.2842 581.106 98.7944 cv
565.406 124.257 mo
557.947 123.867 552.022 117.696 552.022 110.143 cv
552.022 108.178 552.422 106.308 553.147 104.608 cv
578.756 103.733 mo
579.737 105.656 580.29 107.835 580.29 110.143 cv
580.29 117.369 574.868 123.327 567.867 124.173 cv
554.306 102.434 mo
556.83 98.5649 561.194 96.0083 566.155 96.0083 cv
570.773 96.0083 574.871 98.2207 577.452 101.644 cv
565.286 125.553 mo
557.166 125.102 550.719 118.375 550.719 110.143 cv
550.719 108.004 551.155 105.968 551.94 104.117 cv
579.94 103.188 mo
580.996 105.278 581.592 107.64 581.592 110.143 cv
581.592 118.028 575.678 124.53 568.044 125.462 cv
553.244 101.682 mo
556.001 97.481 560.754 94.7065 566.155 94.7065 cv
571.191 94.7065 575.662 97.1167 578.478 100.846 cv
565.618 113.54 mo
566.58 127.112 561.863 135.902 566.414 153.773 cv
566.504 154.125 566.998 154.149 567.12 153.807 cv
572.361 139.119 567.227 127.911 566.927 113.515 cv
564.85 111.732 mo
564.866 112.812 li
564.871 113.225 565.206 113.549 565.618 113.54 cv
566.927 113.515 li
567.329 113.507 567.654 113.174 567.651 112.771 cv
567.64 111.565 li
569.37 108.909 mo
580.641 101.29 590.613 100.98 603.813 88.103 cv
604.073 87.8481 603.847 87.4092 603.488 87.4741 cv
588.148 90.2803 581.008 100.331 568.693 107.788 cv
568.186 110.477 mo
569.114 109.925 li
569.469 109.714 569.583 109.262 569.37 108.909 cv
568.693 107.788 li
568.483 107.442 568.034 107.328 567.685 107.533 cv
566.646 108.144 li
563.483 107.975 mo
551.248 102.024 545.993 93.543 528.241 88.5503 cv
527.891 88.4507 527.624 88.8672 527.858 89.145 cv
537.958 101.027 550.234 102.185 562.851 109.123 cv
565.432 108.216 mo
564.49 107.688 li
564.129 107.486 563.682 107.614 563.483 107.975 cv
562.851 109.123 li
562.654 109.476 562.78 109.922 563.132 110.121 cv
564.181 110.716 li
566.155 112.198 mo
565.02 112.198 564.1 111.278 564.1 110.143 cv
564.1 109.005 565.02 108.085 566.155 108.085 cv
567.293 108.085 568.211 109.005 568.211 110.143 cv
568.211 111.278 567.293 112.198 566.155 112.198 cv
566.155 112.198 li
cp
566.155 111.362 mo
565.483 111.362 564.936 110.815 564.936 110.143 cv
564.936 109.468 565.483 108.922 566.155 108.922 cv
566.831 108.922 567.375 109.468 567.375 110.143 cv
567.375 110.815 566.831 111.362 566.155 111.362 cv
566.155 111.362 li
cp
631.994 84.7046 mo
622.586 84.7046 li
622.248 84.7046 621.971 84.9805 621.971 85.3203 cv
621.971 85.5107 li
621.971 85.8496 622.248 86.127 622.586 86.127 cv
626.5 86.127 li
622.586 86.127 mo
622.581 88.3125 li
627.313 77.9307 mo
624.623 78.3999 622.581 80.4956 622.581 83.4263 cv
622.581 84.7046 li
620.904 117.514 mo
615.684 121.59 li
621.131 111.4 mo
615.684 112.847 li
622.897 120.479 mo
620.064 120.111 620.435 114.116 622.051 105.937 cv
616.848 103.96 mo
615.686 103.087 li
619.758 104.349 mo
617.501 104.349 li
617.065 104.349 616.726 103.979 616.765 103.545 cv
617.122 99.5811 618.171 95.937 619.835 92.5737 cv
623.527 106.596 mo
620.576 105.277 li
619.994 105.018 619.655 104.444 619.706 103.808 cv
620.013 100.063 620.75 96.3188 621.868 92.5737 cv
626.174 86.2593 mo
624.002 100.679 li
632.497 116.121 mo
624.529 116.121 li
624.167 116.121 623.871 115.838 623.852 115.478 cv
623.49 108.21 li
623.469 107.821 623.777 107.499 624.166 107.499 cv
632.497 107.499 li
632.869 107.499 633.174 107.803 633.174 108.176 cv
633.174 115.444 li
633.174 115.817 632.869 116.121 632.497 116.121 cv
632.497 116.121 li
cp
632.459 106.667 mo
623.898 106.702 li
623.487 106.703 623.173 106.35 623.222 105.942 cv
623.829 101.057 li
623.871 100.716 624.156 100.463 624.5 100.463 cv
632.457 100.463 li
632.83 100.463 633.133 100.768 633.133 101.141 cv
633.133 105.989 li
633.133 106.361 632.831 106.664 632.459 106.667 cv
632.459 106.667 li
cp
622.897 120.479 mo
632.234 125.149 li
632.687 125.374 633.215 125.048 633.215 124.542 cv
633.215 117.612 li
633.215 117.24 632.911 116.935 632.538 116.935 cv
624.216 116.935 li
623.946 116.935 623.712 117.085 623.599 117.333 cv
622.582 119.596 li
622.433 119.927 622.571 120.317 622.897 120.479 cv
622.897 120.479 li
cp
618.647 92.5737 mo
632.477 92.5737 li
632.816 92.5737 633.092 92.8496 633.092 93.1899 cv
633.092 99.1973 li
633.092 99.5371 632.816 99.813 632.477 99.813 cv
624.227 99.813 li
621.17 99.813 618.915 99.4541 616.438 97.4482 cv
632.922 84.6162 mo
632.922 90.5962 li
632.922 90.9688 632.618 91.272 632.245 91.272 cv
619.678 91.272 li
703.646 138.873 mo
705.51 139.294 706.909 140.966 706.909 142.952 cv
706.909 151.454 li
706.909 151.859 707.24 152.192 707.647 152.192 cv
712.411 152.192 li
712.824 152.192 713.152 151.861 713.149 151.449 cv
713.023 126.462 li
690.757 126.295 mo
690.757 151.208 li
690.757 151.615 691.088 151.947 691.496 151.947 cv
695.74 151.947 li
696.147 151.947 696.479 151.615 696.479 151.208 cv
696.479 142.952 li
696.479 141.403 697.329 140.045 698.586 139.324 cv
698.719 143.523 mo
697.981 144.042 697.496 144.901 697.496 145.868 cv
697.496 165.592 li
697.496 167.169 698.786 168.46 700.363 168.46 cv
703.005 168.46 li
704.583 168.46 705.875 167.169 705.875 165.592 cv
705.875 145.868 li
705.875 144.445 704.824 143.256 703.459 143.036 cv
707.987 154.571 mo
705.875 154.571 li
695.625 154.591 mo
697.496 154.591 li
705.875 156.267 mo
708.001 156.267 li
695.609 156.267 mo
697.496 156.267 li
707.987 155.709 mo
710.876 155.709 li
692.778 155.424 mo
695.625 155.424 li
707.987 152.192 mo
707.987 156.15 li
707.987 156.589 708.347 156.95 708.789 156.95 cv
710.076 156.95 li
710.515 156.95 710.876 156.589 710.876 156.15 cv
710.876 152.192 li
692.778 151.947 mo
692.778 156.109 li
692.778 156.55 693.136 156.909 693.577 156.909 cv
694.825 156.909 li
695.265 156.909 695.625 156.55 695.625 156.109 cv
695.625 151.947 li
731.578 98.9185 mo
733.121 113.542 li
758.718 107.604 mo
758.718 99.8589 li
758.718 99.3164 759.16 98.8735 759.702 98.8735 cv
764.186 98.8735 li
764.729 98.8735 765.169 99.3164 765.169 99.8589 cv
765.169 108.854 li
753.54 106.378 mo
754.149 106.378 li
754.507 106.378 754.8 106.085 754.8 105.728 cv
754.8 104.384 li
754.8 104.027 754.507 103.734 754.149 103.734 cv
753.54 103.734 li
753.18 103.734 752.887 104.027 752.887 104.384 cv
752.887 105.728 li
752.887 106.085 753.18 106.378 753.54 106.378 cv
753.54 106.378 li
cp
752.258 107.658 mo
754.576 107.658 li
755.114 107.658 755.551 107.22 755.551 106.682 cv
755.551 102.087 li
755.551 101.55 755.114 101.111 754.576 101.111 cv
752.258 101.111 li
751.721 101.111 751.282 101.55 751.282 102.087 cv
751.282 106.682 li
751.282 107.22 751.721 107.658 752.258 107.658 cv
752.258 107.658 li
cp
784.604 95.5703 mo
784.604 106.076 li
822.047 94.4004 mo
814.046 94.4004 li
813.695 94.4004 813.417 94.6909 813.432 95.0425 cv
813.719 101.813 li
843.701 91.8379 mo
843.701 96.417 li
850 91.4409 mo
850.533 95.4819 li
862.478 93.1426 mo
870.265 93.1426 li
720.496 112.651 mo
862.519 93.8994 li
831.014 98.2651 mo
832.295 98.2651 833.333 97.2266 833.333 95.9458 cv
833.333 94.665 832.295 93.6279 831.014 93.6279 cv
829.735 93.6279 828.697 94.665 828.697 95.9458 cv
828.697 97.2266 829.735 98.2651 831.014 98.2651 cv
831.014 98.2651 li
cp
831.014 96.5562 mo
831.352 96.5562 831.625 96.2827 831.625 95.9458 cv
831.625 95.6099 831.352 95.3369 831.014 95.3369 cv
830.678 95.3369 830.405 95.6099 830.405 95.9458 cv
830.405 96.2827 830.678 96.5562 831.014 96.5562 cv
831.014 96.5562 li
cp
825.363 98.834 mo
826.643 98.834 827.68 97.7974 827.68 96.5166 cv
827.68 95.2358 826.643 94.1973 825.363 94.1973 cv
824.082 94.1973 823.045 95.2358 823.045 96.5166 cv
823.045 97.7974 824.082 98.834 825.363 98.834 cv
825.363 98.834 li
cp
825.363 97.1255 mo
825.699 97.1255 825.972 96.8521 825.972 96.5166 cv
825.972 96.1787 825.699 95.9063 825.363 95.9063 cv
825.025 95.9063 824.751 96.1787 824.751 96.5166 cv
824.751 96.8521 825.025 97.1255 825.363 97.1255 cv
825.363 97.1255 li
cp
832.28 92.5596 mo
833.273 92.4971 834.112 93.2769 834.112 94.2778 cv
834.112 97.3633 li
834.112 98.2251 833.487 98.9453 832.631 99.0674 cv
822.047 100.602 mo
822.047 93.1973 li
803.89 101.64 mo
803.89 96.4609 li
803.89 96.1108 803.603 95.835 803.251 95.8462 cv
797.245 96.0483 li
796.912 96.0596 796.65 96.3315 796.65 96.6631 cv
796.65 102.469 li
796.65 102.563 796.667 102.645 796.707 102.729 cv
797.384 104.191 li
872.219 90.9365 mo
872.208 93.3022 li
870.305 90.7388 mo
870.255 93.5869 li
862.34 90.6621 mo
862.563 94.7065 li
727.392 99.1831 mo
865.017 90.4927 li
867.428 90.3403 885.742 91.313 873.094 93.1743 cv
719.872 115.469 li
684.768 117.837 mo
684.082 118.524 li
683.145 119.46 684.55 121.462 685.694 121.156 cv
686.565 120.923 li
713.449 126.953 mo
717.142 124.053 li
712.417 125.68 mo
714.48 128.226 li
714.762 128.575 715.268 128.625 715.612 128.337 cv
717.975 126.372 li
718.309 126.095 718.361 125.604 718.093 125.264 cv
715.971 122.561 li
686.682 123.74 mo
690.033 127.034 li
687.814 122.555 mo
685.553 124.927 li
685.243 125.251 685.258 125.761 685.586 126.065 cv
687.838 128.157 li
688.157 128.451 688.651 128.44 688.954 128.131 cv
691.362 125.681 li
665.108 102.139 mo
665.108 101.584 li
665.108 101.347 665.3 101.153 665.538 101.153 cv
669.341 101.153 li
669.46 101.153 669.565 101.197 669.65 101.283 cv
669.734 101.37 669.775 101.475 669.772 101.594 cv
669.756 102.172 li
665.188 115.511 mo
669.865 115.277 li
670.224 115.259 670.514 114.952 670.514 114.593 cv
670.514 114.189 li
670.514 113.831 670.224 113.552 669.865 113.568 cv
665.188 113.802 li
664.83 113.821 664.538 114.128 664.538 114.488 cv
664.538 114.891 li
664.538 115.249 664.83 115.528 665.188 115.511 cv
665.188 115.511 li
cp
652.363 118.092 mo
684.346 116.821 li
652.363 116.627 mo
683.864 115.381 li
708.822 107.394 mo
711.116 106.215 li
707.925 105.757 mo
711.984 103.645 li
708.955 112.487 mo
715.477 113.968 li
709.319 110.656 mo
715.872 112.109 li
705.782 116.472 mo
709.828 121.801 li
707.239 115.305 mo
711.324 120.629 li
700.79 117.487 mo
700.647 120.405 li
702.656 117.53 mo
702.462 121.966 li
696.314 115.056 mo
691.769 119.964 li
697.716 116.286 mo
693.183 121.235 li
694.448 110.314 mo
687.81 111.154 li
694.731 112.16 mo
688.077 113.037 li
696.064 105.484 mo
693.421 103.781 li
695.095 107.079 mo
691.496 104.787 li
700.41 102.824 mo
698.43 96.4336 li
698.641 103.422 mo
696.623 97.0229 li
705.448 103.578 mo
708.039 97.4111 li
703.708 102.9 mo
706.276 96.7012 li
702.297 117.594 mo
706.231 117.383 709.356 114.128 709.356 110.143 cv
709.356 109.13 709.155 108.165 708.79 107.284 cv
695.235 106.767 mo
694.719 107.779 694.429 108.928 694.429 110.143 cv
694.429 113.933 697.256 117.064 700.918 117.542 cv
708.144 106.063 mo
706.812 104.026 704.509 102.678 701.892 102.678 cv
699.481 102.678 697.336 103.822 695.971 105.598 cv
702.324 115.636 mo
705.167 115.416 707.404 113.041 707.404 110.143 cv
707.404 109.439 707.274 108.768 707.033 108.15 cv
696.918 107.768 mo
696.574 108.487 696.381 109.292 696.381 110.143 cv
696.381 112.897 698.404 115.181 701.045 115.589 cv
706.435 107.021 mo
705.441 105.577 703.777 104.631 701.892 104.631 cv
700.158 104.631 698.609 105.433 697.6 106.687 cv
652.333 102.048 mo
684.845 102.28 li
652.083 99.6411 mo
680.673 99.7461 li
679.226 89.7271 mo
705.933 89.7271 li
679.226 88.0708 mo
679.226 91.3818 li
668.356 91.8193 mo
649.403 92.5737 li
665.865 87.7344 mo
700.16 88.5986 li
718.381 89.0576 695.855 90.7256 692.032 90.8779 cv
676.173 91.5078 li
645.463 87.2202 mo
664.166 87.6694 li
703.089 128.872 mo
712.899 128.254 720.661 120.105 720.661 110.143 cv
720.661 107.562 720.14 105.103 719.199 102.866 cv
685.068 101.813 mo
683.824 104.323 683.123 107.15 683.123 110.143 cv
683.123 119.712 690.285 127.607 699.541 128.764 cv
717.516 99.7373 mo
714.151 94.6934 708.41 91.373 701.892 91.373 cv
695.791 91.373 690.37 94.2842 686.941 98.7944 cv
702.642 124.257 mo
710.101 123.867 716.026 117.696 716.026 110.143 cv
716.026 108.178 715.626 106.308 714.902 104.608 cv
689.292 103.733 mo
688.311 105.656 687.758 107.835 687.758 110.143 cv
687.758 117.369 693.181 123.327 700.181 124.173 cv
713.742 102.434 mo
711.22 98.5649 706.854 96.0083 701.892 96.0083 cv
697.276 96.0083 693.177 98.2207 690.597 101.644 cv
702.76 125.553 mo
710.882 125.102 717.328 118.375 717.328 110.143 cv
717.328 108.004 716.893 105.968 716.107 104.117 cv
688.109 103.188 mo
687.052 105.278 686.457 107.64 686.457 110.143 cv
686.457 118.028 692.37 124.53 700.002 125.462 cv
714.805 101.682 mo
712.046 97.481 707.294 94.7065 701.892 94.7065 cv
696.858 94.7065 692.387 97.1167 689.571 100.846 cv
702.429 113.54 mo
701.468 127.112 706.186 135.902 701.634 153.773 cv
701.545 154.125 701.049 154.149 700.928 153.807 cv
695.687 139.119 700.822 127.911 701.122 113.515 cv
703.196 111.732 mo
703.184 112.812 li
703.178 113.225 702.842 113.549 702.429 113.54 cv
701.122 113.515 li
700.717 113.507 700.395 113.174 700.399 112.771 cv
700.406 111.565 li
698.679 108.909 mo
687.408 101.29 677.436 100.98 664.235 88.103 cv
663.975 87.8481 664.203 87.4092 664.56 87.4741 cv
679.9 90.2803 687.04 100.331 699.356 107.788 cv
699.863 110.477 mo
698.934 109.925 li
698.58 109.714 698.465 109.262 698.679 108.909 cv
699.356 107.788 li
699.564 107.442 700.014 107.328 700.363 107.533 cv
701.403 108.144 li
704.566 107.975 mo
716.8 102.024 722.055 93.543 739.806 88.5503 cv
740.157 88.4507 740.426 88.8672 740.19 89.145 cv
730.088 101.027 717.814 102.185 705.199 109.123 cv
702.616 108.216 mo
703.56 107.688 li
703.918 107.486 704.367 107.614 704.566 107.975 cv
705.199 109.123 li
705.394 109.476 705.266 109.922 704.917 110.121 cv
703.867 110.716 li
701.892 112.198 mo
703.028 112.198 703.949 111.278 703.949 110.143 cv
703.949 109.005 703.028 108.085 701.892 108.085 cv
700.757 108.085 699.835 109.005 699.835 110.143 cv
699.835 111.278 700.757 112.198 701.892 112.198 cv
701.892 112.198 li
cp
701.892 111.362 mo
702.567 111.362 703.113 110.815 703.113 110.143 cv
703.113 109.468 702.567 108.922 701.892 108.922 cv
701.218 108.922 700.673 109.468 700.673 110.143 cv
700.673 110.815 701.218 111.362 701.892 111.362 cv
701.892 111.362 li
cp
635.258 77.0171 mo
635.983 39.5561 632.067 39.5561 632.79 77.0171 cv
637.047 77.0171 mo
636.836 61.8101 636.449 47.7173 635.137 39.4526 cv
634.185 33.4551 633.837 33.5962 632.904 39.4966 cv
631.599 47.7671 631.211 61.8369 631 77.0171 cv
638.858 78.7256 mo
639.612 80.6909 639.866 82.6851 639.752 84.7046 cv
636.056 84.7046 mo
645.461 84.7046 li
645.8 84.7046 646.077 84.9805 646.077 85.3203 cv
646.077 85.5107 li
646.077 85.8496 645.8 86.127 645.461 86.127 cv
641.548 86.127 li
645.461 86.127 mo
645.466 88.3125 li
639.569 77.8311 mo
642.815 77.8311 645.466 80.0859 645.466 83.4263 cv
645.466 84.7046 li
628.982 77.0171 mo
639.137 77.0171 li
639.99 77.0171 639.99 78.7256 639.137 78.7256 cv
629.001 78.7256 li
634.625 141.601 mo
634.863 141.601 635.056 141.407 635.056 141.169 cv
635.056 128.691 li
635.056 128.454 634.863 128.261 634.625 128.261 cv
633.422 128.261 li
633.185 128.261 632.991 128.454 632.991 128.691 cv
632.991 141.169 li
632.991 141.407 633.185 141.601 633.422 141.601 cv
634.625 141.601 li
634.625 141.601 li
cp
647.144 117.514 mo
652.363 121.59 li
646.917 111.4 mo
652.363 112.847 li
645.152 120.479 mo
647.985 120.111 647.612 114.116 645.996 105.937 cv
651.2 103.96 mo
652.362 103.087 li
648.29 104.349 mo
650.547 104.349 li
650.983 104.349 651.322 103.979 651.284 103.545 cv
650.927 99.5811 649.877 95.937 648.212 92.5737 cv
644.52 106.596 mo
647.473 105.277 li
648.054 105.018 648.393 104.444 648.342 103.808 cv
648.035 100.063 647.298 96.3188 646.179 92.5737 cv
641.873 86.2593 mo
644.045 100.679 li
645.152 120.479 mo
649.092 131.825 li
640.482 122.814 mo
642.439 132.267 li
635.551 116.121 mo
643.521 116.121 li
643.88 116.121 644.177 115.838 644.196 115.478 cv
644.558 108.21 li
644.578 107.821 644.271 107.499 643.883 107.499 cv
635.551 107.499 li
635.179 107.499 634.874 107.803 634.874 108.176 cv
634.874 115.444 li
634.874 115.817 635.179 116.121 635.551 116.121 cv
635.551 116.121 li
cp
635.589 106.667 mo
644.15 106.702 li
644.561 106.703 644.875 106.35 644.826 105.942 cv
644.22 101.057 li
644.177 100.716 643.892 100.463 643.549 100.463 cv
635.592 100.463 li
635.22 100.463 634.916 100.768 634.916 101.141 cv
634.916 105.989 li
634.916 106.361 635.217 106.664 635.589 106.667 cv
635.589 106.667 li
cp
645.152 120.479 mo
635.813 125.149 li
635.362 125.374 634.833 125.048 634.833 124.542 cv
634.833 117.612 li
634.833 117.24 635.137 116.935 635.51 116.935 cv
643.831 116.935 li
644.103 116.935 644.336 117.085 644.448 117.333 cv
645.466 119.596 li
645.615 119.927 645.477 120.317 645.152 120.479 cv
645.152 120.479 li
cp
649.403 92.5737 mo
635.571 92.5737 li
635.232 92.5737 634.956 92.8496 634.956 93.1899 cv
634.956 99.1973 li
634.956 99.5371 635.232 99.813 635.571 99.813 cv
643.823 99.813 li
646.877 99.813 649.133 99.4541 651.61 97.4482 cv
635.125 84.6089 mo
635.125 90.5962 li
635.125 90.9673 635.43 91.272 635.803 91.272 cv
648.369 91.272 li
635.056 132.267 mo
646.953 132.267 li
649.932 132.267 652.363 129.837 652.363 126.856 cv
652.363 103.311 li
652.363 94.3438 647.674 87.9966 640.022 85.5708 cv
636.196 84.3584 632.97 84.2544 629.1 85.2622 cv
620.813 87.4194 615.684 93.9326 615.684 103.311 cv
615.684 126.856 li
615.684 129.837 618.116 132.267 621.096 132.267 cv
632.991 132.267 li
@
701.892 154.369 mo
726.319 154.369 746.12 134.569 746.12 110.143 cv
746.12 85.7144 726.319 65.915 701.892 65.915 cv
677.464 65.915 657.667 85.7144 657.667 110.143 cv
657.667 134.569 677.464 154.369 701.892 154.369 cv
cp
566.155 154.369 mo
541.729 154.369 521.927 134.569 521.927 110.143 cv
521.927 85.7144 541.729 65.915 566.155 65.915 cv
590.584 65.915 610.382 85.7144 610.382 110.143 cv
610.382 134.569 590.584 154.369 566.155 154.369 cv
566.155 154.369 li
cp
@
0 lc
0 lj
4 ml
393.681 180.213 mo
874.209 180.213 li
.749721 .679194 .670497 .901457 cmyk
@
394.578 180.213 mo
395.674 178.412 li
395.612 178.371 li
392.675 179.538 li
391.651 179.763 390.628 179.988 389.604 180.213 cv
390.628 180.438 391.651 180.663 392.675 180.889 cv
395.612 182.055 li
395.674 182.024 li
394.578 180.213 li
cp
f
873.312 180.213 mo
872.216 178.412 li
872.278 178.371 li
875.215 179.538 li
876.239 179.763 877.262 179.988 878.286 180.213 cv
877.262 180.438 876.239 180.663 875.215 180.889 cv
872.278 182.055 li
872.216 182.024 li
873.312 180.213 li
cp
f
340.831 180.212 mo
4.07616 180.212 li
@
339.934 180.212 mo
338.838 182.014 li
338.899 182.054 li
341.837 180.888 li
342.86 180.663 343.884 180.438 344.907 180.212 cv
343.884 179.987 342.86 179.762 341.837 179.537 cv
338.899 178.37 li
338.838 178.4 li
339.934 180.212 li
cp
f
4.97362 180.212 mo
6.06932 182.014 li
6.0078 182.054 li
3.0703 180.888 li
2.04686 180.663 1.02343 180.438 -1.17188e-05 180.212 cv
1.02343 179.987 2.04686 179.762 3.0703 179.537 cv
6.0078 178.37 li
6.06932 178.4 li
4.97362 180.212 li
cp
f
%%IncludeResource: font ArialMT
/JDLABO+ArialMT /ArialMT findfont ct_VMDictPut/JDLABO+ArialMT*1 [49{/.notdef}rp /one /two 5{/.notdef}rp /eight /nine 198{/.notdef}rp]JDLABO+ArialMT nfJDLABO+ArialMT*1 [11 0 0 -11 0 0 ]msf163.887 195.855 mo(1298)sh%%IncludeResource: font ArialMT
/JDLABO+ArialMT*1 [49{/.notdef}rp /one /two 4{/.notdef}rp /seven /eight /nine 198{/.notdef}rp]JDLABO+ArialMT nfJDLABO+ArialMT*1 [11 0 0 -11 0 0 ]msf617.556 195.855 mo(1717)[6.11719 6.11719 6.11719 0 ]xsh626.441 719.461 mo
626.372 719.497 626.254 719.562 626.09 719.657 cv
625.925 719.752 625.717 719.843 625.466 719.93 cv
625.215 720.017 624.933 720.095 624.622 720.164 cv
624.309 720.233 623.971 720.268 623.607 720.268 cv
623.244 720.268 622.901 720.215 622.581 720.112 cv
622.259 720.008 621.978 719.852 621.735 719.644 cv
621.493 719.436 621.302 719.185 621.164 718.89 cv
621.024 718.595 620.956 718.248 620.956 717.85 cv
620.956 707.658 li
619.057 707.658 li
619.057 706.592 li
620.956 706.592 li
620.956 701.963 li
622.255 701.963 li
622.255 706.592 li
625.401 706.592 li
625.401 707.658 li
622.255 707.658 li
622.255 717.538 li
622.255 718.04 622.428 718.417 622.775 718.668 cv
623.122 718.92 623.512 719.045 623.946 719.045 cv
624.482 719.045 624.947 718.955 625.336 718.773 cv
625.726 718.59 625.964 718.474 626.051 718.421 cv
626.441 719.461 li
cp
f
639.779 720.112 mo
638.479 720.112 li
638.479 712.572 li
638.479 709.227 637.361 707.554 635.125 707.554 cv
634.57 707.554 634.028 707.658 633.5 707.866 cv
632.971 708.074 632.477 708.369 632.018 708.749 cv
631.558 709.131 631.155 709.578 630.809 710.088 cv
630.461 710.6 630.202 711.151 630.029 711.74 cv
630.029 720.112 li
628.729 720.112 li
628.729 701.131 li
630.029 701.131 li
630.029 709.816 li
630.583 708.758 631.35 707.917 632.33 707.293 cv
633.309 706.669 634.362 706.358 635.489 706.358 cv
636.234 706.358 636.875 706.497 637.413 706.774 cv
637.95 707.051 638.396 707.45 638.751 707.97 cv
639.107 708.49 639.367 709.119 639.532 709.855 cv
639.696 710.591 639.779 711.419 639.779 712.337 cv
639.779 720.112 li
cp
f
654.754 712.831 mo
654.703 712.035 654.524 711.307 654.221 710.648 cv
653.917 709.99 653.528 709.421 653.051 708.945 cv
652.575 708.468 652.024 708.096 651.4 707.827 cv
650.776 707.558 650.109 707.423 649.398 707.423 cv
648.687 707.423 648.02 707.558 647.396 707.827 cv
646.772 708.096 646.222 708.468 645.746 708.945 cv
645.268 709.421 644.887 709.994 644.601 710.661 cv
644.315 711.329 644.146 712.052 644.094 712.831 cv
654.754 712.831 li
cp
649.451 720.372 mo
648.497 720.372 647.613 720.185 646.798 719.813 cv
645.983 719.44 645.277 718.929 644.679 718.279 cv
644.082 717.628 643.613 716.879 643.275 716.03 cv
642.937 715.181 642.768 714.271 642.768 713.3 cv
642.768 712.347 642.937 711.45 643.275 710.609 cv
643.613 709.768 644.077 709.032 644.667 708.399 cv
645.255 707.766 645.954 707.268 646.759 706.904 cv
647.565 706.539 648.436 706.358 649.373 706.358 cv
650.326 706.358 651.209 706.544 652.024 706.916 cv
652.838 707.289 653.541 707.792 654.13 708.425 cv
654.719 709.058 655.179 709.794 655.508 710.635 cv
655.837 711.476 656.002 712.364 656.002 713.3 cv
656.002 713.387 656.002 713.495 656.002 713.624 cv
656.002 713.754 655.994 713.837 655.976 713.872 cv
644.121 713.872 li
644.172 714.652 644.354 715.375 644.667 716.042 cv
644.978 716.71 645.373 717.287 645.849 717.772 cv
646.326 718.257 646.876 718.639 647.5 718.915 cv
648.125 719.193 648.792 719.331 649.502 719.331 cv
649.97 719.331 650.429 719.267 650.88 719.137 cv
651.331 719.006 651.751 718.83 652.141 718.604 cv
652.532 718.378 652.877 718.106 653.181 717.785 cv
653.484 717.464 653.723 717.114 653.896 716.732 cv
655.041 717.043 li
654.849 717.529 654.568 717.976 654.195 718.383 cv
653.823 718.79 653.389 719.141 652.895 719.436 cv
652.401 719.731 651.859 719.96 651.27 720.124 cv
650.681 720.289 650.075 720.372 649.451 720.372 cv
cp
f
658.577 713.638 mo
658.577 712.442 li
666.065 712.442 li
666.065 713.638 li
658.577 713.638 li
cp
f
675.892 719.202 mo
676.689 719.202 677.417 719.038 678.076 718.707 cv
678.735 718.378 679.302 717.941 679.779 717.395 cv
680.255 716.849 680.628 716.229 680.897 715.536 cv
681.166 714.842 681.3 714.131 681.3 713.404 cv
681.3 712.641 681.174 711.909 680.923 711.206 cv
680.671 710.504 680.316 709.88 679.857 709.334 cv
679.398 708.789 678.852 708.351 678.219 708.022 cv
677.586 707.693 676.889 707.528 676.126 707.528 cv
675.554 707.528 675.017 707.627 674.514 707.827 cv
674.011 708.026 673.547 708.29 673.124 708.62 cv
672.698 708.95 672.317 709.331 671.979 709.764 cv
671.641 710.198 671.359 710.648 671.134 711.116 cv
671.134 715.587 li
671.186 716.09 671.376 716.563 671.707 717.004 cv
672.036 717.447 672.429 717.829 672.889 718.149 cv
673.348 718.47 673.847 718.725 674.384 718.915 cv
674.921 719.107 675.424 719.202 675.892 719.202 cv
cp
676.152 720.372 mo
675.094 720.372 674.107 720.095 673.188 719.539 cv
672.269 718.985 671.55 718.275 671.03 717.408 cv
671.03 720.112 li
669.834 720.112 li
669.834 701.131 li
671.134 701.131 li
671.134 709.53 li
671.775 708.594 672.534 707.831 673.409 707.242 cv
674.285 706.653 675.294 706.358 676.438 706.358 cv
677.391 706.358 678.253 706.562 679.025 706.969 cv
679.796 707.376 680.446 707.914 680.975 708.581 cv
681.503 709.248 681.912 710.002 682.197 710.843 cv
682.483 711.684 682.626 712.538 682.626 713.404 cv
682.626 714.339 682.461 715.228 682.132 716.069 cv
681.802 716.91 681.348 717.646 680.767 718.279 cv
680.186 718.912 679.501 719.418 678.713 719.8 cv
677.924 720.181 677.071 720.372 676.152 720.372 cv
cp
f
685.85 701.131 mo
687.176 701.131 li
687.176 717.434 li
687.176 717.937 687.319 718.335 687.605 718.629 cv
687.891 718.924 688.286 719.072 688.789 719.072 cv
688.979 719.072 689.208 719.05 689.477 719.006 cv
689.746 718.963 689.993 718.899 690.218 718.812 cv
690.478 719.852 li
690.183 719.973 689.819 720.073 689.386 720.151 cv
688.953 720.229 688.581 720.268 688.268 720.268 cv
687.541 720.268 686.956 720.046 686.513 719.605 cv
686.071 719.163 685.85 718.569 685.85 717.824 cv
685.85 701.131 li
cp
f
696.666 720.372 mo
693.789 720.372 692.35 718.378 692.35 714.392 cv
692.35 706.592 li
693.65 706.592 li
693.65 714.209 li
693.65 717.538 694.785 719.202 697.055 719.202 cv
697.627 719.202 698.182 719.102 698.719 718.903 cv
699.256 718.704 699.759 718.426 700.228 718.071 cv
700.696 717.715 701.107 717.287 701.462 716.784 cv
701.818 716.282 702.1 715.727 702.308 715.12 cv
702.308 706.592 li
703.608 706.592 li
703.608 718.291 li
703.608 718.725 703.79 718.942 704.154 718.942 cv
704.154 720.112 li
704.067 720.128 703.989 720.138 703.919 720.138 cv
703.85 720.138 703.798 720.138 703.763 720.138 cv
703.417 720.138 703.109 720.03 702.84 719.813 cv
702.572 719.596 702.438 719.306 702.438 718.942 cv
702.438 716.914 li
701.848 718.005 701.038 718.855 700.006 719.461 cv
698.975 720.069 697.862 720.372 696.666 720.372 cv
cp
f
718.792 712.831 mo
718.74 712.035 718.561 711.307 718.258 710.648 cv
717.955 709.99 717.565 709.421 717.088 708.945 cv
716.612 708.468 716.061 708.096 715.437 707.827 cv
714.813 707.558 714.146 707.423 713.435 707.423 cv
712.724 707.423 712.057 707.558 711.433 707.827 cv
710.809 708.096 710.259 708.468 709.783 708.945 cv
709.305 709.421 708.924 709.994 708.638 710.661 cv
708.352 711.329 708.183 712.052 708.131 712.831 cv
718.792 712.831 li
cp
713.488 720.372 mo
712.534 720.372 711.65 720.185 710.835 719.813 cv
710.02 719.44 709.314 718.929 708.716 718.279 cv
708.119 717.628 707.65 716.879 707.312 716.03 cv
706.974 715.181 706.805 714.271 706.805 713.3 cv
706.805 712.347 706.974 711.45 707.312 710.609 cv
707.65 709.768 708.114 709.032 708.704 708.399 cv
709.292 707.766 709.991 707.268 710.796 706.904 cv
711.602 706.539 712.473 706.358 713.41 706.358 cv
714.363 706.358 715.247 706.544 716.061 706.916 cv
716.875 707.289 717.578 707.792 718.167 708.425 cv
718.756 709.058 719.216 709.794 719.545 710.635 cv
719.875 711.476 720.04 712.364 720.04 713.3 cv
720.04 713.387 720.04 713.495 720.04 713.624 cv
720.04 713.754 720.031 713.837 720.013 713.872 cv
708.158 713.872 li
708.209 714.652 708.391 715.375 708.704 716.042 cv
709.015 716.71 709.41 717.287 709.886 717.772 cv
710.363 718.257 710.914 718.639 711.538 718.915 cv
712.162 719.193 712.829 719.331 713.54 719.331 cv
714.007 719.331 714.466 719.267 714.917 719.137 cv
715.368 719.006 715.789 718.83 716.178 718.604 cv
716.569 718.378 716.915 718.106 717.218 717.785 cv
717.521 717.464 717.76 717.114 717.933 716.732 cv
719.078 717.043 li
718.886 717.529 718.605 717.976 718.232 718.383 cv
717.86 718.79 717.426 719.141 716.932 719.436 cv
716.438 719.731 715.896 719.96 715.307 720.124 cv
714.718 720.289 714.112 720.372 713.488 720.372 cv
cp
f
729.192 719.202 mo
729.971 719.202 730.682 719.038 731.324 718.707 cv
731.964 718.378 732.51 717.941 732.961 717.395 cv
733.413 716.849 733.758 716.225 734.001 715.523 cv
734.244 714.821 734.366 714.106 734.366 713.377 cv
734.366 712.598 734.227 711.857 733.95 711.155 cv
733.672 710.453 733.287 709.833 732.792 709.295 cv
732.298 708.758 731.722 708.33 731.064 708.009 cv
730.405 707.688 729.703 707.528 728.958 707.528 cv
728.49 707.528 727.991 707.627 727.462 707.827 cv
726.934 708.026 726.436 708.294 725.967 708.633 cv
725.5 708.971 725.101 709.357 724.772 709.789 cv
724.442 710.223 724.251 710.683 724.2 711.167 cv
724.2 715.614 li
724.424 716.117 724.71 716.584 725.057 717.018 cv
725.404 717.452 725.794 717.832 726.228 718.162 cv
726.661 718.492 727.128 718.747 727.631 718.929 cv
728.134 719.111 728.654 719.202 729.192 719.202 cv
cp
729.503 720.372 mo
728.342 720.372 727.306 720.064 726.397 719.449 cv
725.487 718.833 724.754 718.083 724.2 717.2 cv
724.2 725.65 li
722.9 725.65 li
722.9 706.592 li
724.095 706.592 li
724.095 709.295 li
724.65 708.429 725.382 707.723 726.292 707.177 cv
727.203 706.63 728.177 706.358 729.217 706.358 cv
730.154 706.358 731.02 706.557 731.818 706.956 cv
732.615 707.355 733.299 707.878 733.872 708.529 cv
734.444 709.179 734.889 709.929 735.21 710.778 cv
735.531 711.627 735.692 712.494 735.692 713.377 cv
735.692 714.314 735.544 715.206 735.25 716.056 cv
734.955 716.906 734.535 717.651 733.989 718.291 cv
733.443 718.933 732.789 719.44 732.026 719.813 cv
731.262 720.185 730.422 720.372 729.503 720.372 cv
cp
f
745.208 707.762 mo
743.995 707.796 742.933 708.157 742.023 708.84 cv
741.113 709.526 740.476 710.465 740.112 711.662 cv
740.112 720.112 li
738.812 720.112 li
738.812 706.592 li
740.06 706.592 li
740.06 709.919 li
740.528 708.966 741.147 708.191 741.918 707.593 cv
742.69 706.995 743.518 706.653 744.402 706.566 cv
744.575 706.548 744.731 706.539 744.87 706.539 cv
745.008 706.539 745.121 706.539 745.208 706.539 cv
745.208 707.762 li
cp
f
747.677 720.112 mo
747.677 706.592 li
748.977 706.592 li
748.977 720.112 li
747.677 720.112 li
cp
747.677 703.524 mo
747.677 701.131 li
748.977 701.131 li
748.977 703.524 li
747.677 703.524 li
cp
f
764.109 720.112 mo
762.809 720.112 li
762.809 712.572 li
762.809 710.821 762.562 709.547 762.068 708.749 cv
761.574 707.953 760.79 707.554 759.714 707.554 cv
759.143 707.554 758.575 707.658 758.012 707.866 cv
757.449 708.074 756.923 708.369 756.439 708.749 cv
755.954 709.131 755.529 709.578 755.165 710.088 cv
754.8 710.6 754.532 711.151 754.359 711.74 cv
754.359 720.112 li
753.059 720.112 li
753.059 706.592 li
754.281 706.592 li
754.281 709.816 li
754.558 709.295 754.9 708.824 755.308 708.399 cv
755.714 707.974 756.174 707.61 756.686 707.307 cv
757.197 707.003 757.739 706.77 758.311 706.605 cv
758.882 706.44 759.472 706.358 760.079 706.358 cv
761.552 706.358 762.592 706.873 763.199 707.905 cv
763.805 708.936 764.109 710.414 764.109 712.337 cv
764.109 720.112 li
cp
f
773.936 719.461 mo
773.867 719.497 773.75 719.562 773.585 719.657 cv
773.42 719.752 773.212 719.843 772.961 719.93 cv
772.71 720.017 772.428 720.095 772.117 720.164 cv
771.804 720.233 771.466 720.268 771.102 720.268 cv
770.739 720.268 770.396 720.215 770.076 720.112 cv
769.754 720.008 769.473 719.852 769.23 719.644 cv
768.988 719.436 768.797 719.185 768.659 718.89 cv
768.519 718.595 768.451 718.248 768.451 717.85 cv
768.451 707.658 li
766.552 707.658 li
766.552 706.592 li
768.451 706.592 li
768.451 701.963 li
769.75 701.963 li
769.75 706.592 li
772.896 706.592 li
772.896 707.658 li
769.75 707.658 li
769.75 717.538 li
769.75 718.04 769.923 718.417 770.27 718.668 cv
770.617 718.92 771.007 719.045 771.441 719.045 cv
771.977 719.045 772.442 718.955 772.832 718.773 cv
773.221 718.59 773.459 718.474 773.546 718.421 cv
773.936 719.461 li
cp
f
780.514 720.372 mo
779.474 720.372 778.477 720.199 777.524 719.852 cv
776.571 719.505 775.739 718.985 775.028 718.291 cv
775.678 717.408 li
776.406 718.067 777.16 718.552 777.94 718.864 cv
778.72 719.176 779.578 719.331 780.514 719.331 cv
781.692 719.331 782.641 719.084 783.361 718.59 cv
784.08 718.097 784.44 717.408 784.44 716.524 cv
784.44 716.108 784.349 715.756 784.167 715.471 cv
783.985 715.185 783.711 714.942 783.348 714.743 cv
782.984 714.543 782.533 714.366 781.996 714.209 cv
781.458 714.054 780.834 713.889 780.124 713.715 cv
779.361 713.542 778.698 713.37 778.135 713.196 cv
777.572 713.023 777.108 712.815 776.744 712.572 cv
776.379 712.33 776.107 712.035 775.924 711.688 cv
775.743 711.341 775.652 710.899 775.652 710.362 cv
775.652 709.686 775.782 709.097 776.042 708.594 cv
776.302 708.091 776.662 707.675 777.121 707.346 cv
777.58 707.017 778.109 706.77 778.707 706.605 cv
779.305 706.44 779.942 706.358 780.618 706.358 cv
781.675 706.358 782.611 706.536 783.426 706.891 cv
784.241 707.247 784.873 707.702 785.324 708.255 cv
784.596 708.957 li
784.145 708.438 783.56 708.047 782.84 707.788 cv
782.122 707.528 781.354 707.398 780.54 707.398 cv
780.037 707.398 779.565 707.45 779.123 707.554 cv
778.681 707.658 778.294 707.823 777.965 708.047 cv
777.636 708.273 777.376 708.564 777.186 708.918 cv
776.995 709.274 776.9 709.695 776.9 710.18 cv
776.9 710.579 776.964 710.899 777.095 711.142 cv
777.225 711.384 777.433 711.592 777.719 711.766 cv
778.004 711.939 778.373 712.09 778.824 712.221 cv
779.274 712.351 779.812 712.494 780.436 712.65 cv
781.285 712.858 782.039 713.057 782.698 713.247 cv
783.356 713.439 783.907 713.672 784.349 713.95 cv
784.791 714.227 785.128 714.557 785.363 714.938 cv
785.597 715.319 785.713 715.805 785.713 716.394 cv
785.713 717.607 785.242 718.574 784.296 719.292 cv
783.352 720.012 782.091 720.372 780.514 720.372 cv
cp
f
788.444 720.112 mo
788.444 717.902 li
789.587 717.902 li
789.587 720.112 li
788.444 720.112 li
cp
f
792.395 713.3 mo
792.395 712.347 792.56 711.445 792.889 710.596 cv
793.218 709.747 793.678 709.01 794.267 708.386 cv
794.856 707.762 795.558 707.268 796.374 706.904 cv
797.188 706.539 798.081 706.358 799.051 706.358 cv
800.282 706.358 801.365 706.635 802.301 707.19 cv
803.237 707.745 803.939 708.516 804.407 709.503 cv
803.133 709.919 li
802.734 709.174 802.167 708.589 801.43 708.164 cv
800.693 707.741 799.883 707.528 799 707.528 cv
798.253 707.528 797.56 707.675 796.919 707.97 cv
796.278 708.265 795.719 708.671 795.243 709.192 cv
794.765 709.711 794.388 710.323 794.111 711.025 cv
793.833 711.727 793.695 712.485 793.695 713.3 cv
793.695 714.115 793.838 714.881 794.125 715.601 cv
794.411 716.32 794.792 716.944 795.268 717.473 cv
795.745 718.001 796.308 718.421 796.958 718.734 cv
797.608 719.045 798.297 719.202 799.025 719.202 cv
799.494 719.202 799.957 719.132 800.417 718.994 cv
800.875 718.855 801.3 718.673 801.69 718.448 cv
802.081 718.223 802.418 717.958 802.705 717.655 cv
802.99 717.352 803.185 717.036 803.29 716.706 cv
804.563 717.07 li
804.39 717.538 804.125 717.976 803.77 718.383 cv
803.415 718.79 802.995 719.141 802.509 719.436 cv
802.024 719.731 801.486 719.96 800.897 720.124 cv
800.308 720.289 799.702 720.372 799.078 720.372 cv
798.124 720.372 797.24 720.185 796.425 719.813 cv
795.61 719.44 794.904 718.929 794.306 718.279 cv
793.708 717.628 793.24 716.879 792.902 716.03 cv
792.564 715.181 792.395 714.271 792.395 713.3 cv
cp
f
807.735 713.43 mo
807.735 714.227 807.874 714.977 808.151 715.679 cv
808.428 716.38 808.805 716.992 809.283 717.512 cv
809.759 718.032 810.318 718.444 810.959 718.747 cv
811.6 719.05 812.286 719.202 813.013 719.202 cv
813.742 719.202 814.426 719.05 815.067 718.747 cv
815.708 718.444 816.272 718.023 816.757 717.486 cv
817.243 716.949 817.624 716.329 817.901 715.626 cv
818.178 714.925 818.317 714.166 818.317 713.352 cv
818.317 712.555 818.178 711.805 817.901 711.103 cv
817.624 710.401 817.243 709.786 816.757 709.256 cv
816.272 708.728 815.712 708.308 815.081 707.996 cv
814.448 707.684 813.767 707.528 813.04 707.528 cv
812.311 707.528 811.626 707.684 810.985 707.996 cv
810.344 708.308 809.785 708.733 809.308 709.27 cv
808.832 709.807 808.451 710.436 808.165 711.155 cv
807.878 711.874 807.735 712.632 807.735 713.43 cv
cp
813.04 720.372 mo
812.085 720.372 811.207 720.185 810.4 719.813 cv
809.594 719.44 808.896 718.933 808.307 718.291 cv
807.718 717.651 807.258 716.906 806.929 716.056 cv
806.6 715.206 806.435 714.314 806.435 713.377 cv
806.435 712.424 806.604 711.523 806.942 710.673 cv
807.28 709.825 807.744 709.08 808.333 708.438 cv
808.922 707.796 809.621 707.289 810.426 706.916 cv
811.232 706.544 812.103 706.358 813.04 706.358 cv
813.975 706.358 814.841 706.544 815.639 706.916 cv
816.436 707.289 817.134 707.796 817.732 708.438 cv
818.331 709.08 818.798 709.825 819.136 710.673 cv
819.474 711.523 819.643 712.424 819.643 713.377 cv
819.643 714.314 819.474 715.206 819.136 716.056 cv
818.798 716.906 818.334 717.651 817.746 718.291 cv
817.156 718.933 816.458 719.44 815.652 719.813 cv
814.846 720.185 813.975 720.372 813.04 720.372 cv
cp
f
842.626 720.112 mo
841.327 720.112 li
841.327 712.572 li
841.327 710.856 841.062 709.59 840.534 708.776 cv
840.005 707.961 839.195 707.554 838.103 707.554 cv
837.548 707.554 837.019 707.658 836.517 707.866 cv
836.014 708.074 835.555 708.365 835.139 708.737 cv
834.723 709.11 834.363 709.551 834.06 710.063 cv
833.756 710.575 833.518 711.142 833.345 711.766 cv
833.345 720.112 li
832.044 720.112 li
832.044 712.572 li
832.044 710.838 831.785 709.569 831.265 708.763 cv
830.745 707.956 829.939 707.554 828.847 707.554 cv
828.292 707.554 827.768 707.654 827.274 707.853 cv
826.78 708.052 826.325 708.338 825.909 708.71 cv
825.493 709.083 825.125 709.526 824.804 710.037 cv
824.483 710.548 824.236 711.116 824.063 711.74 cv
824.063 720.112 li
822.763 720.112 li
822.763 706.592 li
823.985 706.592 li
823.985 709.816 li
824.54 708.724 825.267 707.874 826.168 707.268 cv
827.07 706.662 828.067 706.358 829.159 706.358 cv
830.303 706.358 831.23 706.696 831.941 707.372 cv
832.652 708.047 833.076 708.932 833.215 710.024 cv
834.498 707.58 836.265 706.358 838.519 706.358 cv
839.992 706.358 841.045 706.882 841.678 707.931 cv
842.31 708.98 842.626 710.449 842.626 712.337 cv
842.626 720.112 li
cp
f
gsave
565.675 723.497 mo
565.675 707.905 li
565.675 704.013 li
565.675 704.013 li
565.675 697.234 li
565.675 697.144 565.683 697.059 565.699 696.978 cv
565.699 696.971 565.703 696.965 565.704 696.958 cv
565.719 696.884 565.738 696.813 565.766 696.746 cv
565.809 696.638 565.874 696.538 565.952 696.44 cv
565.98 696.405 566.004 696.369 566.037 696.334 cv
566.067 696.305 566.099 696.278 566.132 696.252 cv
566.134 696.25 566.136 696.248 566.137 696.247 cv
566.139 696.246 566.14 696.245 566.142 696.244 cv
566.243 696.164 566.348 696.102 566.456 696.057 cv
566.601 695.997 566.763 695.967 566.942 695.967 cv
578.237 695.967 li
579.458 695.967 580.586 696.18 581.621 696.608 cv
582.398 696.928 583.126 697.371 583.808 697.934 cv
584.036 698.122 584.257 698.324 584.475 698.539 cv
585.334 699.404 585.978 700.356 586.406 701.391 cv
586.458 701.518 586.506 701.645 586.552 701.775 cv
586.567 701.816 586.58 701.858 586.593 701.899 cv
586.624 701.988 586.653 702.077 586.68 702.166 cv
586.695 702.215 586.708 702.265 586.721 702.314 cv
586.745 702.398 586.768 702.482 586.789 702.567 cv
586.801 702.622 586.813 702.677 586.826 702.734 cv
586.838 702.789 586.852 702.845 586.864 702.901 cv
586.863 702.895 586.861 702.888 586.861 702.882 cv
586.869 702.928 li
586.869 702.928 li
586.869 702.928 li
586.869 702.929 586.869 702.929 586.868 702.929 cv
586.869 702.932 586.869 702.936 586.871 702.94 cv
586.896 703.072 586.919 703.206 586.94 703.34 cv
586.942 703.355 586.945 703.37 586.947 703.384 cv
586.966 703.516 586.982 703.649 586.996 703.783 cv
586.997 703.802 587 703.821 587.002 703.841 cv
587.014 703.969 587.024 704.098 587.03 704.227 cv
587.032 704.254 587.034 704.281 587.035 704.307 cv
587.042 704.462 587.046 704.618 587.046 704.776 cv
587.046 705.185 587.016 705.592 586.958 705.997 cv
586.899 706.404 586.808 706.815 586.691 707.233 cv
586.638 707.415 li
586.607 707.524 li
586.613 707.531 li
586.446 708.031 586.233 708.524 585.987 708.99 cv
585.777 709.387 585.543 709.763 585.296 710.101 cv
584.682 710.767 li
583.81 711.71 582.839 712.416 581.77 712.884 cv
580.703 713.352 579.524 713.585 578.237 713.585 cv
576.372 713.585 li
575.752 713.585 li
575.752 714.205 li
575.752 717.886 li
573.22 717.886 li
573.22 712.329 li
573.217 712.319 li
573.215 712.228 li
573.217 712.228 li
573.217 709.007 li
573.217 704.609 li
573.215 703.51 li
573.28 703.508 li
578.237 703.508 li
578.391 703.508 578.528 703.535 578.654 703.576 cv
578.679 703.584 578.708 703.588 578.733 703.598 cv
578.84 703.643 578.944 703.706 579.041 703.787 cv
579.074 703.812 579.105 703.841 579.137 703.872 cv
579.187 703.924 579.23 703.977 579.27 704.033 cv
579.275 704.04 579.282 704.048 579.288 704.056 cv
579.323 704.109 579.355 704.164 579.381 704.219 cv
579.384 704.224 579.387 704.229 579.39 704.234 cv
579.414 704.288 li
579.474 704.435 579.503 704.598 579.503 704.776 cv
579.503 704.958 579.474 705.124 579.414 705.269 cv
579.413 705.269 li
579.352 705.417 579.259 705.556 579.136 705.681 cv
579.014 705.803 578.879 705.894 578.734 705.953 cv
578.587 706.011 578.421 706.042 578.237 706.042 cv
576.372 706.042 li
575.752 706.042 li
575.752 706.662 li
575.752 709.055 li
575.752 710.432 li
575.752 711.052 li
576.372 711.052 li
578.237 711.052 li
579.102 711.052 579.908 710.897 580.651 710.587 cv
581.392 710.28 582.067 709.819 582.673 709.205 cv
582.979 708.9 583.248 708.58 583.477 708.242 cv
583.477 708.242 li
583.705 707.906 583.896 707.553 584.049 707.185 cv
584.358 706.442 584.512 705.638 584.512 704.776 cv
584.512 704.615 584.505 704.456 584.493 704.297 cv
584.491 704.264 584.489 704.231 584.487 704.198 cv
584.473 704.047 584.456 703.899 584.432 703.751 cv
584.426 703.719 584.42 703.687 584.414 703.654 cv
584.393 703.537 584.368 703.421 584.34 703.306 cv
584.33 703.255 584.318 703.206 584.305 703.156 cv
584.265 703.004 584.22 702.855 584.168 702.706 cv
584.168 702.705 584.168 702.705 584.167 702.703 cv
584.147 702.643 584.121 702.584 584.097 702.525 cv
583.873 701.941 583.558 701.387 583.149 700.868 cv
583.147 700.866 li
583.145 700.863 li
582.881 700.534 582.595 700.243 582.29 699.982 cv
582.127 699.844 581.96 699.716 581.787 699.597 cv
581.726 699.556 581.668 699.511 581.606 699.471 cv
581.581 699.456 581.555 699.444 581.531 699.428 cv
581.187 699.216 580.819 699.04 580.429 698.899 cv
580.193 698.813 579.953 698.735 579.701 698.675 cv
579.701 698.673 li
579.584 698.645 579.465 698.622 579.341 698.599 cv
579.337 698.599 579.334 698.598 579.331 698.597 cv
579.262 698.585 579.192 698.578 579.122 698.568 cv
579.063 698.56 579.004 698.55 578.944 698.542 cv
578.919 698.54 578.895 698.54 578.871 698.538 cv
578.624 698.513 578.374 698.5 578.122 698.5 cv
568.828 698.5 li
568.828 698.5 li
568.828 698.5 li
568.208 698.5 li
568.208 699.119 li
568.208 704.294 li
568.208 708.45 li
568.208 721.747 li
568.208 722.365 li
568.828 722.365 li
578.237 722.365 li
579.358 722.365 580.402 722.165 581.369 721.765 cv
582.335 721.367 583.214 720.77 584.007 719.977 cv
584.801 719.186 585.399 718.305 585.797 717.34 cv
586.198 716.372 586.398 715.326 586.398 714.205 cv
586.398 713.643 586.34 713.088 586.223 712.539 cv
586.163 712.249 586.084 711.963 585.99 711.678 cv
586.49 711.122 586.955 710.443 587.344 709.705 cv
587.45 709.504 587.551 709.299 587.645 709.09 cv
587.951 709.646 588.203 710.219 588.399 710.809 cv
588.754 711.876 588.932 713.009 588.932 714.205 cv
588.932 717.162 587.885 719.686 585.794 721.759 cv
585.792 721.762 li
584.75 722.808 583.602 723.594 582.344 724.117 cv
581.09 724.638 579.72 724.898 578.237 724.898 cv
566.942 724.898 li
565.679 724.898 li
565.675 723.497 li
cp
clp
585.75 722.516 mo
584.718 723.297 li
583.562 723.985 li
582 724.547 li
580.499 725.047 li
578.437 725.172 li
575.851 725.235 li
575.851 722.141 li
579.265 722 li
581.406 721.516 li
583.031 720.547 li
584.687 718.985 li
585.562 717.235 li
586.093 714.766 li
585.983 712.318 li
588.09 709.233 li
588.625 710.266 li
589.031 711.485 li
589.3 713.297 li
589.3 715.985 li
588.343 719.172 li
587.312 720.735 li
585.75 722.516 li
cp
.922759 .654536 .143832 .0126955 cmyk
f
579.756 706.041 mo
575.752 706.069 li
575.752 718.18 li
.671504 .275761 0 0 cmyk
f
575.832 698.735 mo
575.752 695.797 li
566.437 695.797 li
565.812 696.047 li
565.406 696.672 li
565.406 711.052 li
568.468 711.065 li
568.468 698.735 li
575.832 698.735 li
cp
f
579.812 705.516 mo
579.906 704.797 li
579.874 704.172 li
579.374 703.516 li
578.374 703.184 li
572.999 703.184 li
572.999 713.481 li
576.289 713.494 li
576.289 706.36 li
578.374 706.344 li
579.249 706.016 li
579.812 705.516 li
cp
.0654612 .276554 1 0 cmyk
f
573.121 711.062 mo
565.468 711.062 li
565.468 725.141 li
575.851 725.141 li
575.851 713.548 li
573.103 713.548 li
573.121 711.062 li
cp
.163333 .0175174 .98996 0 cmyk
f
585.25 711.047 mo
583.093 713.016 li
580.029 713.849 li
575.762 713.954 li
575.762 713.587 li
573.117 713.592 li
573.158 711.05 li
575.762 711.052 li
575.762 706.172 li
578.843 706.17 li
579.624 705.547 li
579.803 704.953 li
579.374 703.86 li
578.782 703.439 li
575.762 703.454 li
575.762 695.726 li
580.375 695.738 li
583.187 696.766 li
585.031 698.391 li
586.375 700.297 li
587.375 702.204 li
587.593 704.016 li
587.187 707.047 li
586.399 709.142 li
585.25 711.047 li
cp
.0862135 .994842 .98291 .0115358 cmyk
f
grestore
88.3218 719.881 mo
31.6284 719.881 li
31.6284 705.708 li
88.3218 705.708 li
88.3218 719.881 li
cp
f
0 0 0 0 cmyk
%%IncludeResource: font ArialMT
/JDLABO+ArialMT*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two 4{/.notdef}rp /seven /eight /nine /colon 24{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c /.notdef /e 6{/.notdef}rp /l 147{/.notdef}rp]JDLABO+ArialMT nfJDLABO+ArialMT*1 [9 0 0 -9 0 0 ]msf35.8232 715.772 mo(Sca)sh51.3311 715.772 mo(le: 1:100)[2 5.00586 2.5 2.5 5.00586 2.5 5.00586 5.00586 0 ]xsh.749721 .679194 .670497 .901457 cmyk
%%IncludeResource: font ArialMT
/JDLABO+ArialMT*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 4{/.notdef}rp /seven /eight /nine /colon 6{/.notdef}rp /A 17{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c /.notdef /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /n 3{/.notdef}rp /r /s /t /u 138{/.notdef}rp]JDLABO+ArialMT nfJDLABO+ArialMT*1 [9 0 0 -9 0 0 ]msf156.992 719.778 mo(All measurements in centimeters.)sh%%IncludeResource: font ArialMT
/JDLABO+ArialMT*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /two 4{/.notdef}rp /seven /eight /nine /colon 6{/.notdef}rp /A /B 16{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c /.notdef /e 2{/.notdef}rp /h /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /s /t /u 138{/.notdef}rp]JDLABO+ArialMT nfJDLABO+ArialMT*1 [18 0 0 -18 0 0 ]msf31.7681 15.4468 mo(Bristol Blenheim)sh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/JDLABO+ArialMT*1 ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 23.0.4%%For: (Onno van Braam) ()%%Title: (04138.eps)%%CreationDate: 26/07/2019 10:41%%Canvassize: 16383%AI9_DataStream%Gb"-6kB\ULP!Am$!;?I[+:nUs)d0h,KEMq/gB%^,X>&IYqSW?ehh]?o(n$teh:^V^VrsQP^IfF_4u8*n-o7;&S)%L71\tV5cc^p4%k;>KMM7d2Z,[VsAd_.E6bCpS7,%A@k`sFemjq=,Y.8WH,.'fL5^"fP@+.0rKAMS"fdqO!T+&/WErp2:JkW_#[nAOhRS,N?MGCQK.%1jY`CL!aiD7FRI'd6Fg[*aG(EdqgX$:)E$D6FUkK7[&BXo.(+W1%CO?]UhGscn0]9=FDb2!3)En)9`>SJ\n,Iq>FH>5+RZ;<";1e%?UF<R.d;jpq',:Z<7RV#6K+<(\"6*k\^@4I<]f166:2&ZdT$<_,SX8AFbr;$JADJ]j!@k$8(."^.%AMe6*`+l<:BA"Cj2e`M)"=V%L<isV>u]I`X6/&B36W)&%/u1#6\!Bt)>!idFldg?_8f^.:L0=-#Y_4\!jgtP5Dp`:2dd58l+]3=s*'C'I_sE_?h@"@9r4#j/d1lQ%iV\iI:Bdd]s%3)"*$d.SboD]>`lo]gPVk&/o:kB61fuPr'35^G(9e,*@80A83iD`VN_aW*VYbL)AVd@*KWl@I)k4Tbc/3aD-`59J%-]IB>P?G<j-a8pikQtN1Ts>ph'LbjNo;d/oS6QT:aK@Wl3a80H;:Fl9&@GF")oRZ+\^TH;5g>\'bo)>rW'A>1g%B-Np#ojK-lKcn%PUrD94d="LYVs(d_8^bWo4tY'O<p"?KVJ8G#piZ'$)<kT+0+I),l2%'1i!q4_)CZ276qIg;,fsr<j)Q;<1\3dh;PN0K'98HmZ.a-%P#.hPPHs4?\*46f.ekmp(JQERH2d%$+#\Kh`GB,r/aDiBC\HO.XBabt$3S?[S(Z0hf4><H1*?cgOLtLjc(6qfkm:=]O+!'Q;,;Yb%7l,2nD=pV*n76lTr+7-1P3HT1SA:>&'%G(.S]j"9B"-YVP'NfWT:*fZ=h!9FP@_@n06us70N\p>>"]cnmK?XheMmM!)K$Enhk7t.%G2jq"oHd44eaufuSZ5uHI$^,_HHL?#1.,g5QQ399,?B!K.6DRmNn@1jXQZ/hS\%==agk?YBscXW,h[hORV&i+oM/.ok+n'ER$nIp%`ajMSn!gX/C(b2qgdshlJMCulq`ptaBddYsR;@i%^OTrXZQs4cVE$=W]d+PLdp6EBRPi>j17_4,VgW(/nN"t+5G&Fs_ms!mrqDa>%9Fg4.Y]$A.rU4FJCmiXLGA-"!JMD#cqtS,_?iY*;r\6@036C=HpL2MJUX;")oF\U6gG&J#_5Yrd\aBr/LXD^2;O`<dXDbOZmPdTA%Y^bI`c?qZ2)J1bL(*dZNS+TQ@3C4c)2IT-JF$Ta:,6Ne%;>U`:PJ4Re".S-(]#Z!(d2\V44.f[iK<8g94rMa=8Q)'udl2$eQY^eQ%_A7J`ccIp61MS+dcs"&%<]?nQ1I1d<7;&1=HjVFa9;Xj'ReM2)1X=''K?H(!'H(6LZ>7i:<+L^*XAIU!SiuNt.rig+>^MsNAriCj%;U]>=l)DoC@UM#>aR<LCW0ksTJRB\H,heUOb_L%F1*?.Jq$c>'1c0R$L&psp[6//(q=M'Q"d?7X^OV*`aH2k5%iZbcZ$-)LQ>>Nj%30-WM9%o>nWMhta#!hA)ebuntgoUGmS%_C!i@WIMo;\/\&ssb^UCU^rA9ZZ-&X`Of#Sp1)$@lG>%9uI%io;m;jU:-r#$j1"X]?(S%59REY3M)1uo*.a8(L!?&*eWT44]rhnD8Yi&FZBcFNj@[-FZ!llTu%o&.!.&/1]-)7$G9n(-j\Crk-/]SRGtGi+'A6EqJ/nLoj<pL%hh@KAN-)6gapP3P=pa**(nYKFQ2VaE*D]/rEH0VLq',(cW,DIJ^._3bHPlEGkc=Z#_W[#T?e,G]$+rs@3^`MVhou(5ltMcNqnBa9%h\[7F5N,@YV(PlHM?3<g)oR?jm-Y*1K"2qtCAuI!c;Nt8'_"6]^7uVq#V,:=Zfs-phr+r"5e]*p+;hq'gZbuq#9H5kFYl\*U41p7%#upHc\-N39qgC<crG/N9HfhEW=`2hXs'EmeQ/1]?WU<2)-oI!u=oAM)n-AkfD4pVZnRj3?BuaR"NV[P!$]c:IY[Bf&r;V^>.TBhY%*l<]X\t5u)b<:D0bj,*:mE;K8Xrho`^SR!m!M0P,CYd"ADUppoqXZoJCWci:l@U07Fh2!gh54'@1$ls(mKXg7"SEF6pLTcXmfnSt%WE]D.2]Od/8dP:keTl@N\hk<7`g@S4=$+FS,[n/T<h0G+[*;qS'T[`\\9O#s@Tim]4.2%VpPVljk>0!f]AJ$X+7E!dI;Y-opC"^*%_M<>cIeQM7F8t8VkAOi".plQ#?s&01bc`IQPgD-K*WW;2.r]27<](]e2"Ct>2DW4eiWuaGcS;i,3gFu7"L>0W<0d3NI6s3P-nh;p%BW)>hg-2,"T2Qm=n0MYF5m7<X#Z;t%jb,1BX@7fYaUf>kn<.O/,XH.8?nig<]\U>a&9NIA&JCPRo6ph9#t\/7-u,:?B9NQZ`]L;W%Dm:jcO>QuHRs]f$F9]>TF$Lh<Vs9l$.N3*$^Gn0&71SP4?V?3hYN<CiKjMSsSE7?CdMnBWr`t%bJ$K>d70M7:Zt.(D6UJ7:lJI/E%S3NDBWEq!@*uagdGru<rD9>HWX3Kc+(lp""[injt^EC=!4Nu/*_B7jkjHU$XX8u2F+&HRC!PR4U2GC>7(h@(kiQV5=RbEBY4rmQe%GINm6J8AA/numk<`h"l@B0M9V>aWYq#NlKs*.N581*->iRK#q!RY8H=i+f>W:.G0g2Af+mG_bj.T$h7$h\Z*)B^giPK2CM+3KF)`%rqj0b>A$_cTf2cOJVYt)2M=>b^&[=cd_c[LLZF.D0S(%'ea<EH"8aNG%Gq$DSag4_Lun%I&nV(9T$Ip58IPN'1B>XDHNoTZ8(fMW%[*:n1gIE%el=<!'VOnT2BU!MO<Ff`JV(0EK]t[b8#<cXWBt*'gAhrY>?WId&F2'iBb!I=ZFTR45c*#:1#R$elMaGB6HMB_$5:Z0A%"lO%pM!TS_5N6A^"b4ioh9s`E42#5]j>)*Gr@^Z9obRicHp;Ro`,>NL#5lHmZ_LqBgknnImB-0P=E[rr^Hj9Lma;E;/tiXSQlt1T%O<mSNF'sqp%I>^6i-7Q8$/n<Q!6(SGIj?NAV1c!l#f"G(c7k@8NiBU]Rebjb@Cb(h5KGb_];OU\k5R+S[!D2DMUh`(Z2^cTIoNMM%@_o=93SXT=9ad't>B5NH1eo<%$NCC1D]r!j<Uh0UqN#5oY?;%s+3jYCB)P6+\seldV\KprBN@Qf-0oN%Nc$>XX/`tY$E@4""(a"]%UKRWEXIj0,rZBD]O(S>\ZauTj=%)g*,lpu5VaHB2Nl_:n;cQTD2"([@dK9HIf72<9HM&ccUL*stYQ(P&O5m5h!fuVHf-O-(8A,?k%:\pAiBin(6Vj2A)0(E%qQgrNh>4s$i]3`Z1b("km9baE'$*+!>?Yd!#&douHJYYDi'_fk%pBq:](\pMBnpb#%s'-*6=/rWWeRgD3%,Q>aKkeC2pIk\/-,*A0:q*-@WO4J0CkJ''8/'N<l7H7@Yp*<3:h1$%pKql;>W(S<uipBDKmpp08,a&)r<;97d6>$r%_kqc)iS.iO%'r,]mAgU6N;YU.N$5XZ?njP/T`nd9$Pm^o`"qa<9--`dDb5P$^)@,(qr^u32@HhqRC\&(od[`71;,fNGHj)gd<DBA%U4Bke[''l-%)m+`:b%qQ^XRaONj4s>En&nQ55:4>.9fU^9caS9f%be!pSFs,.r`@C3P^oc?r`iTD.e*1nmpS$Phssnr#Q1B;CTR6SZ^`a+n2-L1%SITZlBHd;&G@%it29iN>p\^.<#5o]-NZ5=XUg'J;lk<XGoOMG/pGDDYB\uagdHU@o'6C[.&C#Z]J'FK>BT_e'qYH[9RI5VM!ZR!*%,Sl::B(Y80=i@51PT,2eZd,<@m=IG"l_su`_YaFCqP-O+D#T)CG0-<Tm(DUh]!KW\?uEb"<HE=LPPBTUhU;G$jo:g7i4l)+O65?=%_js##r,5[05:l"-]#ahW-0kN"[+Oeb5Fri1rAcD.fC@hfe3O$FD'"Mc:YG9Q>V>5`r;W.Xr*PQ6C$YNn_:JBG/-]$8!rp#_Q(;ml%ZUr_<1XOSsZSc6r')9QuYL`Nql==4`3&)S6$G4^Tq.)Q6hOFMd'^_(`l%t6XpYDWoml"gLT?PD,pn+*T>h+'FU$CW]e,&a$.K0+h%:Ij!NA\10UUcSNGR"!J/e^8cm0^3FAs)Hd((@"+IKRl->Rc"POh/VY.Eu`#nQ$`944*_0;2p(DJ@_CU?@F.)=r$>k*T&Yh#b%Q_m%19nJC8:p!RdID7#I:Q$?rW^'A8FTFAcr-!;;?"3Rn#nf/ppTD4)o^DX\BF2CP2lM+M)dF@^R>(iq8\G3S/V'<^H;>SBN.]J)R]s7%228j`;gaF`-#$"%`3h.+UY0`;b.8T1e)&MDVW3e-GKK+X`][J)BCrg%@&p_rBo]e3B*HaQ5A&^K<sHCM`>RF>/*#'I>G-r"&H;*>%K^W`/JgQ36Mc-k7k+Wp8kHg""S;n':m)C\\MJgm-rV?4N9D?O.Hc&^U2k&'ckf@@,:Joq42TFk^qAd`VPa#IgC-Y-6HO!?0lr#*T%n*0'Nr-.<rUR-TmIuD#:#W`gW]JTK0S;]0a3*dQ6[mHkI*Q'uoG5B+;0ARKTV^q?$XY?HVNW2I$EU_S>^+jH*=ZjZ%`>Hn3Ic)5V%\pi4g<ha@&:Q-0QTnr/j.H[N"FIbR78sVpUUQ9+(Dcq"0)NkYY[2*"g>SPMR/+CjJlP2HXq*/JO)Z$0Z\s)!FT@"MN!oF[PT@,@H%2[a(2Sq/Z$Zm[RR\-1tlTtPQQ0^naQ<k3d$i="CPP@_G?:3RJDY"8*,r,+^@R431C\N0%:P0DeUk.XE':&4@-2?j3W]#GfBE-Ap\%=CHJRm'#/o+#]I-rKQC?W1Ld@o1Z%DLi29+O`7k4XW0Tu[*@g$bt`WAE?4,8\#?HqMijAFrVkE.JM'8(ptbGZGdl<Gg37u!Z^H,]%312&Ie2eW#nP'4:=)bmO0B3:UGN8CiQN6P3S"j"7_#c@7A:@]%hsiR00"u3UMiH&\-88!q^FieKpX].MS=%UBW%"XZGIfSO2#`B2%doi;?bFB!SK!IG%nKbqKLmEm^fCut[105E`_I=$gP[#U3pMPbh)^;QlH`*;_b3Ok;;e`P7X;P.j:7'S8"AHlMJ8$#'=fF$f]k:cU%f$16QS,qU7dol=@bVF/_g3!i_Y\u;`?^-s8'.pG.S^HNEY6BlA`3eBl%?)r#!XjM&$;PZ;<k&+Z9&j`cp87d9*"I%s(@>`b4)TLR%%]M1"1kt]Bi6D0WX2'T1I5B:H@Cb:0'qoVg!"OM9-(M':?h9Iop$o!7-Y9u*%t&^>fZpA/rl^q'J=3!V+u*3I*=8ot4V3"'h08I#%P4'%`RjMdCnJ>)RF<+*02H;tQ*Ksg2dJU-nTL7TRgM?V%\M&9J@^Bt0n\@A_/rko'`9%"PMLr@^]!H;YV(qKOD1*#'IU+X1<j@=^%?Emp9&/XuF4::K]$H_C_*u(;p4'[XrlGdB2@sdFHq1H!@@"2#J)c]Ob-_<[OTBd=no?BH+qq%^<fcO!n,:>_gf3?*U\7T)m7V""S%ABV_-'U5YBd;A]bWM/!'d(B=4%^a)R?h1d+@-&PB>kED4mZWftjcZ7#".oPrFQURHT1f;kHAj2*5a'IXJaJ"gr3AZugF-f@$+STJ%N.j2caYb%s9e;=kPE&/n`orlndkB:.$8gpQ$j=4e2AD+&m(l(2ccp'G54HKAT/g0'_q,@ulX2nmGh.<q4f06I.C:*/Y4%>g1PWfp%QUZd'H2Z'sp4&1.1B`]RY:nlJ.-O9Bj>p.4pi"Eg5<FH.V!3Ad<,]sFVl9VSiA6f747[V\lhk]MK2-*(3T7G&X(=*]e[.fPN]Hp0%,^Cs$IcG34d-"9,(j68EPD7)PBm39*]Zu[iBmZ0dmE[o;VE+%PLW4O$;JVrRVrh'XMMcPh`RZW'j2ffRbka9cRGU!j7#`h5_Z+Co%fB?!C:'RbZDu'FEm+9em9@u:?4IU\lHuQeN!*E:EMii#5Y2Y:tD)!LXdokB3X,B"3bg*1gDiX(Hi0sD:_'Aj-oID@Sh*2mi)*NIn%8/XMM55So*T(fPtrcHQ1_Bdg8<rJH4Z?0'SCh9,ONb.19=t;6P'><5lrd:R=e,C%t/WK#1oWhn.*)dX%P$':eH0%anXq\:!?hJ$_%puMN/:Z370D`@Z<ZHP*Xlsn;Y^@-dcmu)W12[a:OT?MPZf]P*P5&G=k#OF3Gj#?QL6H_!gA97H$h="E>9KP3=p+fo809iVOMa^@c%R17s1KSP+D+@"I.VjZ/PrSaH;99rBG]n-ib*+Z(Oo3b/F]*JNd[p1%,SQr"7bGgod/Y#'(WKlr8SO3+]2#d*m56HK#>:pK>hV&5<%,,ZBoO=$=bjZhT$5q`6^27Y:/n6pBi?YaBK\_W#OThG/r6T`Shb[VPe\:`,heBRST'L$>MdF\;#UNhZ'pZQB^eFnplCRGp?4Z%?P%CP0?u[7bKJ+!MZVp3p2G]XQftoDlYWI%fT&7!])%De#K#X5d%F6A/,r(K`bkm7qFgr(7'VF,?sm'L'H\H<SCYP7RS;NF1`A\&474%IPB\5?-W_HqLlT2>]^gN+qNJlKl$)Ni(rH#)0bZE)RiSrccsoFZ#m?)As2[V](Rif(%Rc0!GEL!cIY"!+*4QdP>L[`0"qn=LmXni%7)Y._K7T&E.uNLVDY%k7Hb87?rqnQ7hOLAUjg<cCC@V0++WlMQP+BEtb[(fe#lgbJ`l5Q-=c9cFHXNN0l/i+>'APi6a'K(*g&Rb^%1q1b:!:G!sZ5^Ec3osFf;S7$?WtMmP/uqL2piMYVO#-M@=6ZdJ;)jb8"sk6b,glU9M<,4o#PmlQDYlEbUqC8b]?Qnra*fo,@3rD5%1@Q0il^<2Xh"sVQ7dYJ0^JHI3b$!aOgH@OLNTJJZI-TajTuQZ"_M'1Oc5V94RI$K9"_*7nM/#n$Ge0BIm\GTjDS%q#L"*rf@3T>Z%O4=(pX,op??G-#qB<@Ps%NbH3V9th%'rNG@I%B#[VpFd`/Qg-h==11X53@aIig)6^l)4AeVD!_iWg]Hd`:Tj&jC:@O)9$+Gne?C&%NRH@&TG,N0L":74T>Y6=lrH9O`=j3$<r>P5A^8U4Q^<r=je'K/Ig1L%4rsu]h\FdWT"G:0\Q]AbG*3:;N_X4Hc4+QkU>+!5J`t)/%7pp[Fh^0DBFbLHo`($?g>HeYVC##?'D7gr`9quP7+2sAO"6%$bpj"e0grWh)2MG6r&5kf9_Zs`jG^jLq3t=Z=qN$2@^,cU;TC!p+%Z-/,#@-?\6-4k[L^BYDEGVkLuG7Oc1TQ1q.VlCUGK<rgQ358JqEd7U@T^2eg!\442$#$;Z0q]>YPJHU/i$GVZ^t2Hg%`5\ii:-6C%*&tMiBEqF&4r26+DW_)Sa5C_U+.d9Q$C-ZOi$:..$5C\D@,NS":BsK]kV[=!'T3/F@AOgNXJ`[]C@PO9>]Y,@JXcK47c80kP7Kdg%*d"'AVn6_%n8d33$G=pMSO!/9WZ#R-NAgsAk$]^c!S9E[$Zd\H_=%7l?rTl@#<j'8++`+*E3^'()Y8sH3-2eGc32$(Oj;eU7P&o)%D8`?G[ghc\f\6u5o78R%+i!K;DJ0hjOc@'1iR>g*QEe2eRbWC/A33lCNP`l,Zr)3'p,>T>-fp>.o3C"Zl<b#[Y%K]$NI)/hGtRfi%2I<G8f8]V,H>`*bKoPLX1b]2qT/Xb)XU)Va[]YnR7Wl!S$qj*]@'j.Q%E>Hk8WXbW[@eKT@mOs>9S<4\H`^]@lMVln]/VAI:T@YC%=M!l?"=m97;R#kD&.dV&UKbQIICp.K.`N`I[]>&=]5[K3$O);efhQK)::E/@b"&SYXds9T1\PkEg#VkPhDaQ3ojC^JHMuJY4<"M`%ZT3JMo0c9m2pZ!Co&eKJoO.8KZ$X.ZPe<u3)S<i+c.;\nB=%=jSSsO$a,*W#DgpUPKu/$MV,2!Bob?C=N+#8FV.64tMst.'_mQM<%j3D3`FFJBE%9:qH.WiE[]*l=EHQSsDHWLNe^V3]7j&TY$%Q"VD][^e(L(iO^3%V$JHf<cfrtnLRdh,q8I&u+nL!T46_f.3?EtEf1%4KaGKXt,4\VYh8Pk&(jkGs$Db'qX:%\)M#jDG.Qd:2K<'mQGDuc:65_Z!;-`<Ls\][Vi^>n^bmrF2$1&mUKIR;XnmFek7$7rnBIr%#Xf:Wr@Xi.b&6:u?(4:RKtY+>3G?B&D-.6;St:m1Uj5!R7J[lsM9I_f)ptdHfn^u]Yt@tIPn'QZ0@N>]p`h_W<YE)Xo^4P_)grY/%cD'.4)Y=[@k\Ka4./+>.:4s^AgWFU*A,GIXl></LS*'EUG[tXJO3Er-nEcdUHeml*mFg^r0c#bWT4<I2HB%<_Ct)t*2m*n-fZEer%\*%t!R'A@T`SSqK6u9;OV><M?Ok3uQ7jo')G4sska.<.8d+p-0VSSi#kDHduGSB[1K6luE^+l_^ipkB(/?\E\e+*(La)1aUh\sIP%j<l\]p2kX&mj5+tnTk"_9>iTHk6WG>mjD#(1%^Vg]8>;iDG'eq$01CK,gegsp6-GnidNY3F]D4Pc(LTNc;.c0jkZ>lI(2@g8HL-Z%acFS;SVonaqj_mOlu>P$;;b2^Pot;"cJ<O692Xi+cn?Ij7S:B+cX0)(r'<3oiJRnac<lW3JZn[u&O/CWg^'U7DH[S][UR,4.,Pid%Z7kshh0.d[BUVq$pa?<T`+Z;7'GW(n->)AKCU'UG:;pjo1F9c%g7#Bg>NU;V.65SkUk=(Q/=kY<2PdtPc'`,!Dbd..\2fga^$V5h%hl7XdEAec!YES(Hgk`F"q."&A<OT@m7uG=$SLB1cZDuEWWio%.+6b9tqL)K%IZbCFO#@ARc]2AXmaR^nTr0drUMY/-7,)`g^=DpQ%:<)!j2BuoHLO0h@pFQ!?#KnP^(X04CSdF;5ouh_q?[jjj6/K$JS_`]$rT3Hb@3Yb5lf`TfhX$2F]=!9]0=836efX9Ng#KqU0"3^o%X6#pGHd1<oXhC.=h<o?HTY-o>^3B<%SORVVd%7!/+0C=-KD<iBp>Bo%)*PJ`3fSdDS'A9lnYn&\mMqin%M*UQkJN4amGd*j_`=gt%iOCrZ+3!9nhU1<$jS>`:/ldpj_G9N41,ec(Z@&09V,_Lc<K2Y5WTKj4:'Y*sHYLlPm&'C!qf_hEIG7B/D],+iepd'NUL2:ORBnV,%ah2/EK:28*&bC^^M2Q4*RheVOg$3BsRVgT9DfV=ko4C`L?VGO=j[:<eI+q6U`c(%jHnp*%c"FENB`@iWONr'Z#PWqSg\5Dj0A4_\%(M<-I:bU.la+<(1_6G!3?B0rk$g?^I3Rg#QreNuj-_,XO4ip\N]p$''rpXI&h/=*RC1i=@F>Wi#]RF[-MspN4j>8n6/kur%@-k7(%lTCe_DTp#)8GR7OG4>!AF*;+53p=cTX;'&/pSELD+l`rqWa"`T;Wm34rB/4-DU&d)RI#4d\gs;cBD)BC0t#iJ81XMVMd&2dEA?*q%b*<Y'KtVNpKbMUi)tTWk8%uH4&NWCc;ET8o='fMmZcg.*COW5t7N7\*4VI=>/mC%VH50"P\>pkE?+mhsP"/T+MsJi,dL9JaO-<Z<%l:X,uXp$_T@Pt92ZsTm#7`r.4XB!$lDVPAu1QQ1\f+6E]jn5FXf=R/P%euObcJeRn/"D+(NFo2R06E\$\#sWk[*Zh[Uii'>;biqA%n&hoVhHda;hRJW[D6!?@kNi!Co:qsA"H76a@CK/rHDp5tNZJE#B^(Xt9t)4j`:hAao;-p2'Kp+4T!G'X_p_P4I/"\+:5"%hkIlf0%qXaAk[IcS]p!jl#:kC@^^dIFaX);:Z-EaQDYJgdN^,GC?Z+$Z2SA/WjI.-IaERlg%MtJIX.!9TH4JXH,@pZ6Af(Z<sQ245HVGa%&%f<6+H`U(S\C/h,/@q0U]1n)Q^qn7:.i$Q^bc"#7f:-%"/*'@cUIWk1[-(]K@>34MNH)oOhM/?*$MsYOBr7^R57tH\F3S`q"P(T6!%^GhR&V5NN`p[WY)YrfTHJbSuC<#WaMl;MNg5&M/IH@!*Ym+paNC2`r42Z!=H9<E\.kKUi_h;E76g91tj01+W>\/!E#LA<G#C"Pss%#GW:s0cQ[TLps-SrG[6;E96#f;LNs4O(*Z=?g'k(4-VsIMoNa^+=><(.e.mBH/2M^VpS=6s*of!\jgYbN)Wn;d\!:5Od)*l--;Y>%==NMVY4KTT!p;#brPRu'bXp!bF$TH&8)t"X*05GN,PJa*bLqTu;;M5n6r12i<>7#*Q,AZfrS)t,4l^GC<",,RRFL;Bd+N7H"/gjg%:1Pm02%nA4jn^7+"F!era+rj+d;J2_lT@%m2q10#37gJNmi]YFF76[5%_%k[HV&%Op34O*eFZF*qEh0p;IErM3h9j9-^U[Z^1:7f%`]7kr&rEaa8lqkO4nPZ7$DCbuiHUZ8J'LRqnJqmu9%.me3pX]oQ/K<:P;[>8n,9@m?RXOc:?u[7gJmj3H?8oWPceR22kP<Z/[tVI%g@#cJ;nLMs+I:agbmTZoB$1u7@MRa+bO]!)q,YJmk\dkpl--FRompHma'1OTi(G/kIINk24##`0p8.^CJkt>9N3<;N\G!Y)Y/Z)]%2MO;g3VS7"pIMBJDoe9-Ce&g-gJ<UCE%H(8o7hhH2+7$,mDGFB?jED4UPGJQZ$`V%@6O3edSM=Ic*uNsb@rc]%ioN+-aBRp\l9,g%i:s(H^!dHZil^-&F"0=hC^jhYkBfc+)\9Lf1#=PO[+NHj:2bZ!lB\F+MHk53RnXg*^ARdm,edc#qJ'TWAoM)aV6\)=i,*p5QQ\91%'d&_!Tpd"8`:e,<O1R_Ape8pR%RVqD6Y/?89Cf%:.[NMudp]*i<T4d0hD@kFru=/I-&qkB+V9!f?nVjNGbJ0:LbH]s2i85rNZAo/%X\\i'q(l&6]9@_SN=#>G&QndfM]El$GD+aKqnQt0p0`BRq0qj#/*RHZg+-fHWu!1K3HYPqljeQ,**cnq;^+mFA9+kAC(/!+j["01%UhdO8=K[oOqoB_ren.CN?XN)`d+riUSBY#RX_RSTp$o]LL59'FYIu]#4t+[2r$rl$a[gX?EZt1+qjQod/'5KU+Oi#S>MD7OnF0.P%YF6]F5HXc:3(oT2gLl4F[!BZ)@hY=$5-4a"S@FLuh&%5M6ALG1V"SQ0NHFQ02IE$/&nO4JYSZ;:'!Rk*K&i0&&F&=!R\@1Z[XXP%%$;W+5=CD/G^Q8Qcf\VHr7f(=!=tNY']<Luq0[;]D5Zi_>K"6-jFBU_#^Rk#71&J6GhHM/O3_Q9ZrRul8h0dmg"'Hn)1;D8^66n[R%Ain.80-;\j$8/6.!8NW3_c65%jNnSHeK>9!$V%Ji:4B5226O.2l@X&f]EXXbrlmda)oqdL:0h59,^Rd!bPFQig3GIY)WjlBAP2^1%FebdrSoVmGC(#\A06"e5FM>mXZUuBEl0f@-nq.K84FW2U%-l%EB%:Q0ni9jt..Qj;.@^NjEjJ-(k)sZCmEGI/3QUiJ2ktJsF12HM%SAh!&`qc1QKhr&qe]7;^X0Vu[T#2El<pDAU)9"_2!i$cYQkmp'gn!(I*'-'+Y).j3qqqr!r*-<VF`,[[TuM2Z>W@.3HgGP:rV/Qj%1tN:(0CJGZ.CYr67E40#r\5Mbkk9e4D8T![YU(?%c#`Q'5'$.4lWTaRVngE:RG*DSRFRScg08Bs3,O5dD?T&05OUh6X)Fn=l`$J)%9C8?^'2[cW#.-WESDbRPYNb>b-FlpO0^(4k#,t1(2p>=G/"ar\rM+CVW*Zmc&\e6bSJK+obrkQ=Q9WZ\;Y]L<4$D^:34$>G`:$+"%7h0_+f'nCKP(_iH%'%/q<MZfj[3T#:dfWY*mN@EiL,G:RNu(bUT">VA+3&RWZ;62E.n!@^n1n,0_JP)$K)I8ZO`CYUkg\7[+ul"u%%EY#URK`hU/l%U)(^Hm<:<mX2m87A20@[oqM<lB=G=l55p8V.H:2R#;LX0ZQ7kQ6i3":pGES0-[F@]4SH9/b+0.e3Gro-8H=k\@6%+dSG1l@mbS@_$@)1l+nbj>`f8\R2<jVs!(t@n<_mbMi1g_M1aVS/,8*MdI?+JEHlj0g9.V/6m4-jg*$4@aP;9jAfY0YdoqXf]5#2%kDY,<l\N+tW=Aq>(r_f<8Mo++CuT,J1g-_h`m[SO;INYlJ<Sg>>$0<BQYWQ[;BieD<;)go<ZL5;R$8XoZ;8aEF]*_6019iT,.27W%fK'1,;fb@uYH]6T&k@\D[\PWa.2j9[djIV6S-BEDs*@dhrO11_S$QNH[:Rq)dr,P!K;#2u?n:!._V=nbDBZ6T!%WfqdVN\@hZV7O%f1Xp(YM7aubA/Tbk^A,P.J(%_nuVD-39,-C@^d&s5V0>\d*P%!m<J8Z\UKfQoZ=L\$df_+9\hs5SaFY)*cbn+*uXO#19Y<dC7$NL%W\9Psm26B.`Em!f47$9mrR_#C>@Fo:1q=3HKHTo!S8[cDOr7h$LjS,N5#ZC_bjG=blW^'\F?8#Z_H:-sP?.C1DI+[l6;rh[omU?!%@d_oA"*YAWMiX%a=&3NM(O/R1Xih6)-TLofBS)i(h[E8/&=Q^-T>R@BS/Md'(Ll9gSf=A:rP[d8>(c-;cgm.b:,CtN\o_t^qS*bJ%:`sVq;^YAOZ])0n*CT4]bLGQqjtcQk,Bju)Kt<"6hH5H`r_PUJjGNE+iK=Wo$RD62rq,\J^$1kul14KbYWGB'@nq4jT*5sgSqi3/%m0LLIVQ[?Kantgd>lT:rTOp3.g^BMm?C1PVe7cXqS_<OXUTWpf4m?F\g!V66b5N1*0ZWEm58Ah)m16pNF]9,Sf)a]b<,:58&?@1,%'D)YC]jS;?'\J*?^V8F&s."W(-:%8\^%3'D,*eJT#fnV&"tuC9E"Ht136]\82@"X?Qg&T87TM9urVTU2BgjVd4DtH4q;E<h;@)Lh%NH*OpB(Aet)l;$-AL.N2idPiT%<R%@8mbn(D_TbN+5FSg(6(gm:@6<l's9AgoT,n]F0a<%-'_,Os1<XOKcHC0UaD;N[Bt:0HUJn@%ECY@o(u8c6QC][Sg+JFB-Q-WiiV8u0Bjb?Y*ad@lhHAWZ:m4'Uh)*)[q46#Gj7K.O*SliC?/7hpZdTnGFh0%:?DE&]c;[L)f3a93%gWN]D[hGfc_>*9``9/3/]TU&iM<@V]gM`%k<]MLg5@c&\q-@\#B@8:YkqH7*benfU^S73>r*"D0"$u1*:iOq,G,JULZO66C/+,7o%O^2_l#>r45fuj@tDHhEUE*poe<+M?I!oWYdUA'pUqWselZ=Q-X]4g>q"+A4%^;pMsksnu2HP0l/-p@tX-<MIBA^>6)jB_@/Cg(pA%W?a:u`"`fB<eoaZpd2(&Meh]?s8!@SKYb,"WK57r`3EDbL[RLo.[qTSKO.'9e'?R/&)BYrL,ATK`U9&*0"&Mo;K'n%eOA6;8uhbt%hTWa!l`]69m%M:17IuKUpQUsfqB`)T>E/F[<qg&W[=<9=c4pT?a,GCeQUkJ$=5)o>=puU5j3[>&Rd'@eM:Ya9#3?tq.mB9-dFl%(%,+tM$X6Ttne\[g+_J:iQT5+J@14="\-[-Jc7``,[A=ku@G,PX.Tl9;*2QNB+SP!9XYGV-J[aO`82dEERCZZpcZT4L84dTQ5gAtkd%.U3!%bI'`ciR(\V.m>$C>>7*NPqo`0n#b/YGO+f>>e6JJ+a8FA]l%QmjlDd^[.c\/I/9kic*hrGfIJTife[!04j'Pe?F9I<q45n8%&"6AXdoEsJHp!d5Ddg2#>JmO];/clNjLiAMR3Uh]3.$e$3EkDOC\M9NGQbMOisHP^p#5ENXerT2OS<qb$df1"RPdWdI%De06/gj7%5M%R1XqPV'i_(teCK97]g$ZkW%#cd'e&0)_BH7WB\ffIe7uad&hFdA'no"FX[?hbX4`>+HqiTARY0TrmVpajOo-2f7hidd?Eu&)V%VuAm5We&uU\PJ8Ij_^[C,-s8s&q,1K#7lGJ.XJVcn3@T;0o4[ZkA+d3^EU/W2:oF0Jjj:O_A_f5Y`MRD[gUkgqs%_`J1memA1tX1%8:(.rF]0e/L&KfN1E+WY_2Zt4Xk?H`j2ih5-!,GEJ8Uk-$Fm%_q<:S@S%%%mrc.sc&3EjP:Va\l4RClc$RLD!bYKrfIgOp#*_tOu%C3*2*LW\jDQageMl(jlj3JY@ab!og,[C0B]EW&F<oU6YJoiiR=<^57l?f#TsS!'*X-foXAjCLBsmF2O>rTIkW)L1fO,;U_ib,bG\%\H1inpOJj`*ZkDG-\]?9X!Mhhg'!!jXu5]>?uc&@FrVt7c;Kkab:M6`9bM4Y<X5\YNoJp@>p7r`&mb%4iYQ\H<(t4c(TXccpYP!7%\_"qD+,3I.0m&-2?lM$8;lA<^6DW8H`Sg:nFi7S2gjd.:@30Il5^Shfgl=c[H*VW%?IA:i]$+eT#d]S<WVs_Scmt$_)[)e%8IlQH%l-=p%GV/%+Er>8:'a;A+$PfCe^(c7S>+;lr-k5bWGmHRR'@A\Ug.JEro)c#0I3h$K[j(-b!Qq$KT/@2]mtkiKT#X7'UpY1"8!:I!%p2""u@sf["cHSV1CVqtV*#1)WWSY.4j*i38;CCK8]C=)O*BJm/dd_ac:E,(TG7cnrI5pmr#HZ3lVQZjT.?q%p1)8SL:q,Vd0<TKY%Xo4)4;f<$&r$9ErqYfs=;?61VR)a$po6"r#bNluK/Lp*Q\o3tG.hT_E)D6Fq.a;uqjc?;+.J;iKW4hnYH3raR)p0s)14`"?Y?d\M%3u]7h=!\3<pKE2g(rGuj`V"r9GQ?p"Z1A9*D!9sgT477I+"M9KJ:K<CYK@lWK,C1s6I1A(\t4<nVsiBiI_QHeqV]PV<Blg3']G,>%7:(HgK+^8953T.i"Druo3f%$1mkI/>89TWtqj'Tb(Fm)kP7$MEV4UZSgA/+!4ItH^GJ"JINSe:BlbR\hg^Od%c<!k]c\ESEnfgpY%+#V82D)kC-ol8_r&kLtF>T,!Jl]&Eff%ccHX5;6I0'T@oC^_!+pd3+.Y?/QtXqhAD2DBE!?>G#9^Bt.X6jJYQc@LC]"n5%Ucg>f,%gI#m4`16YCI,gJ4Op6\<=^j$<7mf'WopSV:k5+mC;ie43g!4)K"!an,eGc<>Oukb[hf(K3Q`G[%<\VDdeDBdS\=MnrN"^@u)PH16%H=1euj7H>Y^0ORP`a*<t^"^W!SVk5V_9@.p6FD%).h?C^F[#GOTOda=f9V\]rLNa_=#p32c9i;QrDD3#1b<NdoTQ&=Cn5,$Z)JI;%<5PnmPe*!PZNDnCkH%j(NqU:.+)em3h;m^9Ze;;E$H@68duX+.j1C)Y+frj<j(@mbOc,S&]^YVWn'GclMN-W5SXMqSiE^70?Ys[$%=\m%U@H"C7l!_7gF`cA)M_DqtCnTsM`Bpmii4QeJJUmJ<:huD=pF5.-gN;gdXgtgfH`?`Pb^=BAOKq8(^YOKu)KX@a[sp.+j@"i,%RB?EkDS)BSm-i`%A^]:-&_d\;@4ih+N^NFVjmC$l4M3d9;jg+dI!1+rV<rW*K<R&*b7--8k2W%Q4*l\G248q)(%V4"Rt&!7>_BnM%hleL.VHfH0h^o:9.Qi.5Fs/p$)s&#2<6h"(UKr"E]Sp8E^7:1s"M9.ifE-6QI)s@s[<>$N(#tn9n%S.qe$[tQ>PU67NXd0iN^.Qk%cS,"T['G)[nl"B4*TWg(pH]=b3UKXF%lS(i=VKe+[ZbIGF2`V%G0/fd_W=_#&37pIYV)2rSWRRa$[H^1d0s<>5NR:+QBtn%\BsgL%3Y!N38m'gcOp@Ou.MsCg>]VX_ZC<f0hKRDcUHk[F(3pZl(nPcGJJRDYcYiXQAZo3"\PdV>Y3RbXZXC>"^hT1D39AkuqV^L)Tn=_2%Y$Tcj56'h[OfZ=;o&h_JUb9(X1/sb*)i#ffe9-#KWF+g12tckr`5jX<'?nWI?IH5V@tnJu30NGfpZA'e;q8iKN8@HJ&)s_)PkLl]%'La($rVi<nA2'JIs+P[_XM;o=GNgTf_X%#23,3O^UOegPrB=bqV-\T[f"*B`G('71J=]'d3rrc#=_#\4%+nk"k.&p$JF0T8ET'R?%L,8-d,>Opfl?DXMcYHlbo^hgjI5QrCM=Jc[s&jPZh%CE4jbm=73up0qWOq4u'us(TmcttM?Ile`_X.GDG'CX'=Su\iM2^%bPOAA"%4KgpDC>q((FYj'aD'X;Dg8$ei2^Z5mD_=o!HpY#U_CFtr@fB$OXNp-1F&j+eB30<YqlA<Tf[I<Y8EQ8^rEl`N0$3)SIbd3J;Z&DO%makOWm1-4eZ8Ku**5>aCDdUHWQc<*CJi%US?2GWE5Nqb22_9Es7dIF;b=hK]O`dbtUY#4AIqd#Nao.pq&f=-%Q73:_TXg_M=4M[u%O$k<f(\E2ZNV?Cn`;ajq\0<L1TBN^@F"H<$RF:bjrSj0IlRiM=Eoh5igKK<=p'j0.[5,FlT`E::L@4f`UmLoF-$l37]Q//<f3GO:%bC@K]V&PUqh3aId?`*dV,O*B8OlnqVXRm`Oq);-ZjLdG93s53poDM(RX;L*7r"b_IN<mk`SV&4YA\FQ-dG$_^)Vo.8^$k6U=2KE_%*l)UrmtXC-;q5iGSJX/hesR'66_iE9OfnG#FReJYID1,@l^%ea8:G@*Dn>*"hbV19D8l8:Ju(qDi/>(6/BE"SH0s6c['.c6@1tch%+1NO<X[VF'CS.s_&Xfb&FBT)[lN#E1_34\.*Rer?`R#-sKeDiDs*Md+qPV>O\8'%1O'Zf?X4dJ6?.C[,prpF!A&"?ji<T)dgP*D?%<,J>^?_b/]$kBB]Gi*$q2@Y8GfuDnTm1-+ahrB^bpn:oirX`]$T8g(GL?\0TgK=r7hk4`!n<MA?GRRj#,]#M[FE"V+@?04,j0lr'%A\EZ9c!ePcQ91Q'e3>&Kn5g59T;r'`M]7lJph.1lemKW;h_28%TmlYU+M02,E9<WKK%`QrB5Tj2ni_^8c.9UVH/_0<dap/=>:AgF%NF,M5[G/+Hl3h#PTM4rhSR?I%*@f6NNiikOeX(s\nlJo9]Iu?RH5#l%(u"H"ZV+;:NmZ*a%fa`Z>eFto,&*a;Arhr5L^kKh#B_-q%R>9>(G:US/f,+B?.h=/Mnp@Ir;6H3hU'M6:4r^&\PMt5Xj"%f+0@+\]!i6iApLSi+B>h^-W9KkQ\%VHQ>cP/8.h8ucl5q_L9mfqU%BU5OW<NgbGhdWDpg&Va3W^Q=I?gE)$Q.Xi8rb>N9f(XU[XX69f+"1FmRE,s=as;"kk>s.TF/'g<[=8mUpFC^jiDf`Mim3"pLmI>?%8EMns0+E@%MY>_lh\*LQk5;i?.`N)egaa)O[U5+"_g7$.nE3mAIeT,_+6fRU/Gs\R\l#GU?I53,SmbX8@DK7s%u+[4rI/u2IJ><W%KBr?h?64SY<oi@qWX+2`jnXQXl&'sUQmRY.@06Gj"!Jj=`2QRhWeiE8*e1YiQi(!d,q>o[Qm)m3^I4G3X!1uX+A5[r;`3Du1^t!F%TrYh3%iWKs_uuu0!!rsc""qKg"=U/<KY]Wi59Upm';F_2NXDfN]L[j]X*.F)/7C[R-E%4"QC*aK8LI2p@316'P#Viu"+_"Xk,`m'%VGg\s6Jtk'[4eT5PQ1gt3,D1j'$31BK!$IX%>Orp"UQ(\<%Xg8JcZ2d<CO@Hn9=;/dXmuc1ms-M"\D=*S;,Qn(`mY(+E@c`PZ0ni%+I4YV"^V5HkWg#J:WP;p@6GUB/hp&K?s!I]'9GWs&qYYIF*^12'V5k=<fej6V^<\5FK0r4=tDC%!6X:$F:"6B&Q-?o&o`#u&;UV)%<CW6qRG*f;\q4H)P_:;2,.46m'EJFG'9n&:W$WmJLe%hT'Eg&j,Z[@e)OH-Y2t3=AV5/dEM*M2MK2ON1!Qrd+>=d>c"3lCqU5SP&%[)?a;gQDe]qX\)%r>;luD+VO/'MiogJ>5M%;cHO1=?Bg8(ce:>6?Gs9Les9$&5&7"<Xl"KLb?S3Y_o0L@mpB.>V/3O)-3B0E@Moi%.KY%)N4tarel3H:[7Wgh*k=^m_5K+aKa7,[O;1#=FjNi$4Ad@,k]`haWHhL!B?35N6BO,RU]S@9@M^#7J-]dhdnr/*XJPtBLaYW@%l+3tkGt!;h,aaJ--[6,ij:q\5$JLe2Nb)*%]M-1nV5/d_JX58+i$;u+Jg#,!-XKgdJd+UHp&^EH,1ViR2ZP^H:`CC9!"ke)TiYeH%oRVtg5lV`P,oK^:88J;DVbnlN"#@u-636K3@YfgYXqc<q1a(`YU*u0kD)iFi$9H/pBh:pQ8-67^#-\\ipkoX#"sDq:?)oZ#Nn$M!%UB#k-3]cS6=-.Gf6<2M%Q6]di`YDTMP]K67"Xsq>!URn+64-YF-'LcW[qH!d&+rmC]+_--L:SE<:k,R<Y%fWj'q&@8BhlF`m9h4Y%K?>^5Mp\I_=X6BL@3HEu&4atd42Xm81u@\8$0D`'j7i1Y+]qM@V2Yi'`_(nU3ibe.69pY:C`G8>0+*AG4=Y8LAt4cR!LnqE=[3jW%B#9+N3,(K+T*AgkD2c]<$TJ7u8&p@Wd#X"cK5.?bO[0"FaRRWM@nDjid5>`E"4aM0Q;p3FFPp,#5*0`S8V;is$">?(\.4C`!25,7%FJ+LZMl#'@6W_WF!21*g$Uk^+)TMl03>=:ZQ4H%(5Vk\:9Su8N$oO&kK2HA'HiPnP^`(!<+9IUc9/KUTaM=bSnFt<rT5,Eb#m6,]%"+*B5J`20+0KNN0jTZ&]j@#^L?nsCqA2N@LSP"HIP6m@n+=jVtl\e:o*Gpb3DZQ';";.ME)Cm+dD'MH7"GYhY+<YF-_NiK@'7iTN%:Gts:4edPf7QQ1`8gl1[(m%`r'\$$4^a%a1KV0gt.jPBW9Th5('>V\@iWi54;%bs0Ug;BXM)ZitA4aU8n5-Pc8HPu]!&b]15[]C=%X%-cm@h@9qddLRO,Z0n2o.mj3YXBV0$:,T./RgD1O]Rnl!A&aO8=7Kg(.L@<_*!MRl6#*B;pReGFlC[^;*A%'MZNFj]XioM.`5je%S*^afock"lM$!,iXF2k0%`[3(mn$]a$&gGf[Vd8>(g'uXjr(30eq$b$0M,fB!8Qcc7)sEP">h,d1du"f,Y?RcI0TlK'`Hb6+pQ1i%Umelj0gnp\;["s*UL.XYkRtbF-.L^.<[(5&1jQ>Q==2_M\eh%pYdQ(kjAR2p+\W^))M'Oi:eb4B1E\IC&CE#k'b=c#d,9os-8D]*%@\*daJR!2&'/VTsBGaIq&V2D&P2[\4&;g_X-AH4k-u_!Habt^\To7$I%a:Yl&7BN!KE^*39]:9E_INuc^_7kO,RhWt0f9"2KiM3-%7KAX&pq"CS91L',0i5-JY:PWG0;0&P>Kq`fKbt^nnf;fpX$e`da[:5?$qUX?fF!0r+i&>o\bDcU2>g0,_LN,LJ^mfKcN5>BTn3G^%kTGG9O?j\6T7C5ccN#!8'Hn+C406DbRXqC=/.jE:[SB#!aX;XLV[:Go*XmHaNE[rhZ%7XYP6XG_.\efc`IO7f)a+`<T.GhjWZ^fh%jcJd2nHEZ-L^h/,d'B=9Oo,Y1n.$j*'PE*7an6mq9B^3m!Z"<P7$'so@AHG1N>VFK')>b+!(n4C*H`NO<tZ?T5]hr)2"HeDNoR)[%"?kgVURNK\H'Z7An[ujQ9ncJu^g%/-1``QQR)fqP_#I61N$OOP#%Ng)d1N)1M*+Ir3*&[NE<u[+_)hGiJ:U@pU'[1%02uo13]`()%]$[9R5R[[EV3c;dS80B*#U*PO/:\lo!fF"`=Ff!gb>T!Y'IiAK6+![aR\is'7!;KQ7BTS-`9Wja!-<J&MFiDo;)JsaG778TH4mHk%"?)e[M+<;%EP`(S\hH_[LJt)W,9IPQT`h;E&49iK'FKdS_)VZ%RT-43?t5cP8&TWQ`rMg%/cb9qF>@M1"[aXH,RB`3;*]"6h/UE)%j[9O4?af0+13A9?4C]dFAq6b71d,57%@IF!%5BON;:+[HC-kl&H:&iV-#lpN_25+MYSL&/:aM"U'aY'eJO?O13,I*'4E@-I+gB$C%$KqP&8MW+;XY;C^cBcQ,8<iqs:hrZO1V/:mSEaS!=;#<b(IO[FnVMpJJqDb\#WVTE306i<obJb@L%l3):rWJJ0caCc7O,dV`[+k(%A9A6g;=A::";41-P%Z.=J9%G-<0SFDPDWTUCG01"Lkl7)*p`?r[?tKO^gKdU%19[dLe+HO!"jHJESrmALk2l<]Zeh981fu/PUs-(%*:UOqnURdb<jIC1+V@('R1_0W53OVl=pN*?EL6e3g+NdMk0T2h(@O)-Lku`R*E*[)+,Y`OWYPXG1Er>3Z:p2[3oA(O/S;Ia^6T9m%'bFZe:Ebl&r5MTW"T\W\(%<eg&-Y$_=nCUt=;-&mI&fQE(#,pFngi,e@S-Wkh<!-PagWn=Y`aW@a]#;%1=i9`^.aDDWKZH9b.8kB%\l?ph3p4\^O-:Jc9ckr7R97/AA/%[GXer1#doq[O05PDa8QI$o(Gq[kP`Z'$\U]KD-</pMQD$Bp#V6q&Kkj89$@Wu\%u6+"L<f`I%#A&`H3KPNsfahUb(6Ijt@"H4OWEddSi&7Y26/YUq4!08)S](gD"&2NAag"[_L2[la!(:Ik69>GBXM0<q!YIJ;)Zmbbh.of)(;`Bp%E^JSKaKd5$DEA?f=aL[Vk`SqA5W9Mk?)Mum3l)/_>>VD+)Z%%&LMogl%-]=a1f.>M[KL4;4@9p$;^d/WPL*BS$h<HGkh_%6`%uKG%VMd4uG8ikA`-J2t7^?j0a;B7sJbu5t">e)SYV6q,72DtN/?D5=J<r*]YlI0Zh(2t-?">glK!XaCXHEI*.)FGiEo:/]4;T2B:OK_l%__+EifsMF^g;k/l+it'61nFkF.SE\QKKC&X%.c4Un]Lt<15pc&g(%Y95Vrel(g/#5%8E22PsGg&"Z@Z0V4\6l,YTMp6(,T1Hf#!<%bHY:9o/L\4?<k@;W,acd>`;H]S@KKW1<M4<]5&YN`OL1:QF>dg.kY1c_Uh3@$h=.-EW:'.?ifk2&QUXrMtmY0raO`9[C)IZ=Nu@I%k"4.e;d-p&q;9TY(98l:WssHK0]X_40!KMB]a0-D"/"/-*^s!D0Y>X7%&6sc\+[?t_sn*O:JQkH*&>4E@Di5SK,.HOgD*,k"_\.7%K9"e.mKtE^j*?Q$0q$?D"9Nnkg(b=h]S@dsb9BsWXV8?IiEW6qFq(QnrHNf%Ah#Q3hjN$1K-B>UdN)`*'ns,;&%pn0)#dIc$KX^l%^#bXRaYNX<QqlUSbJ6TQCO.74](U+tSA28*=#NJP^3*YXX4s[JHa%>dF)e7HD=K5skcW\4?/-@,>]]?D12CW9Q[*]uHI8G4qGnVd%A63:i<"Zp@Jgfgu-B[m/(du+U7%hl/0nctJ&.qH1nJK"1<q@4`'LB+*:a/S6/I*-p<u-47!n%ne4Q32<j\a]@<_\`FCS_c.B9B_/%X("Yi,,&&SBO0)p:Ni#TD*G/i;)<$2-[U!FHZ;hD]7s%A$!2.QK25BS\DMmk`4[$Wd2WSX%iC@13bjU_(tsK!77&8V&mL/g8;`6Z%(0_t0lSL%bB:B'XTpp[j.-dm(MUWLfYp&%3bkh7kC*([;QEkW`$,%WOTFZb@!_(),>LHW$3WKRE1GZiNdE3SnF!ne-C7+b2h'1(!%+sM%Y&-kn*1BS9XX('?Y&Io$L#`hZcJC$jgWuf0/gmVd(;iriFTrMjrh4MUs(1Z@&3+QcSGYE,9\-;eQ@o^CY$?[`$]duQb@i)2^%k]Dem,&0#(B_rXD.jJ9$&nR2),.,/UMkgE5P;/?_cq;6I29N\dZk?ro2JEQ+&hX(?;?7>L";VQ:3.(b$%"h2&&KMdJ`/IZGOIl0-%8u/hnlld)d4R,J(<$HPmS0T_K8jpiM81pl0bR`,70,%oZ<#G"9Up+-&;;ME)ZV)dR*h8QrJ-Zc6>[1/-`a]Y:V#hd0.]QeX,[]!M%"^5=7K\FbKQ%0'*=$<oW%>O[0&$5ikGtmeT$Go-f1VlF/5\M+l9.LDlAM:/6,G=T+<N6V4E5rbR=)f[&ZZ>!?B[;]/HQ]:CZbq\4%7.@jI+ehne:&rNc@_UBN.!VI:lZ4ebm?etG;3"Pm%,CtO=^jM/6O?W6Q!+Wrkkebf;q03EYS!0M#8^0TZ'#p@PR)3X7$gcI9UWgt%lPaEThQR-GPrFDqLflKiKLAi-4<CL5Rddo4l+6fX@Kq!MP'/^H].VjMOqV0H*3[I:YKoLU!i=%bS=Du-BU.]%6-"h\QiI.[Ub<9]%_n@jbO.9d3Q39KcbFkQPKSY;t4=qV#nuP&Y[h]ZE;4U=qW\?h/:.9hQ.>d8g$*%!d19H4DFt%HG6k%9rerh?n$Y'ac8Tqet;WNN_%["Oq=X?U%!Er*`:2H3k5=B^VKb"=+6N>"uCp*WutJ=n]"";+YB=I9Zdce_a-YnCK0bP'FbXJch:(J$W7&_b3:D-7_F#H+V'>8Dr4%0W52Gej]4GGgFrq"Y_F1O]i<c+.J9h%4A5Z/`QjNM^g:2#AR)>f7C''Kp;pRRuS\1]J,'@eZ'5^hNRA94W@h2#D+=dVUB"5@qCdj%)BH[eL8ZRX#?K&@'#LC_0'_e:&L"MI.%q2C]#FQ6#E\F;Li1gS1]Tm;?6p&<2PDDE"4F+%@&oc.bM-as[bR0,k#OG0eo(#[D?R,s%/6q"/<.VjGok<RV1*m)BN#a.<_e6'0`e^A;R5KZ52.n;dkWC3VAKLU2,gmbIgX?jYG-28u=Oe<:jZDs"*#VUQ_&,E^^i;-1-4ta,%W)"CMY0"nUTn0he*-d#-[69>h.?7uD0kLSKT(DLiRi^TE=]Cb'O<b6#OJQOEhE>B'iIGp4nR0@/PSYI_Uof>-79dXuR%%YA2,.RN%%UlVa6<'@X.c:ef=a*lSZ?EVT08NS"`"P1lflde2%:n)Cp<qjAO\;]f*F"Uc`cdZS+QuK'k]drhM<H2CP)>4&S;*Mik]c'\VZnsH%.)s>HOt%psAJH*WUa4_3=4nd3]!\M2`p^5CEXE[u)dTaC4N+(4X'NNIH\C=&4$lp/ql9d>M&iZcF6$/qZRpIn@753L"KP%UW+A#O%/%))\#/9ak@o]_6C*05gl;AQg]a63*fAuHQ-U_Zb5cf*Z[D'-WhcM\;J'/n)K\Nu'C#VQS_npL=oVKp^_+GaWbo&Nc"]&\;*3<kX%Zs&EBe1c=/&9#UFl):[GQ!MV_Z!5oGGdY65C,$pcng+<m]Ftp5/-;lj@t6N-?oW(qq$V:H*L/2DMPG6I*2KU5!&3@_ioW/#,t+Bp%Lr1fNR<^MB;d(<HGao7\LWiX>LiDR;OG,'+N<Ab[Pq>csa7P%<q`ZKT5:Z%P+X$)]F&c2T![/]#ll^tsOtn6XW=hdT:0Z%,5bN'F%#/dd++smkC4HYN4a@/KZpT.J0.ND-fm(O:2&8V@\kY/"S6_<]%]7]+ZCR8U*3b\#WAkf2aZY,(*c%clsA-ds;FUkB9QpCpVbp'EQ%NhT&c,OX,=U5O]o$7E>V,GI"f!jbVP!fD5K&hU)ha<D]*7PD\g"[n/G=dM;@S/%lg8p'b,6r%5/L`Y'Q:1#[X@nb74[*:mmaOD#>%*t;"'d?uSO:.Sc97q\YHNC5KJ*XY9QAe0U)o"''S6FYAI0R&p.U<(2Ho#aBmA:*QC:Vi4r.UfP6!hBW0<@T<!/A$h%p",Uq@Ufrt%.O&qS61l_7>Hemlfs+p<L5rZPM%1nB2@Nku'Eo6=2]d[W!4Fpr?6oh+Gp1AG=hn!!ONbWUO3ie/k+j_*_.1rYfYiL(g!\n-!@H%+%*ln\GSgprTU;AX+N`K!hJ5\i>:WZek7Ui:+&[P*O/:BsC9Qj'@=]qaPnTI0S+fU9Q?0LVg!i!*F^rmW>!hQ^fOoQ.\P(uXHZ\"W9%J5X4:kfDs)\QOY$I:Sk:"dK@fbbtu5@u?&:BU+Yh$OH-n>)/@["s+k2XB&70-IW8F[rICuHM!036C89Q/*:4c0*YD7A_Sr'FQ@QT%V?q@@@gS<;'?\-&TtN9N.*oVXE/GCJ3Z.YUU1?.C5]jc^e$rq"`1.EA!$_u!nd\^k@_bZhQ!nYd:kk,a=pP(,R1NaSk1<-DA_o"l%XhBNn!=(+e7LV`_%?/t;F(oG@Oe[":EZ]2DMg/F\DG+SM"Cf$&(.6'i21igZ'QN,K<FZ=%oeIu4SUB4b'eoaXMCI]HFg'T;.-^R/%'3knYXaMCSp/m#ng=&t:0KM9>Z/hRNdIng]or*sLnaWRQ&E+>#6m\.t7SLb5NJ(',J4%@T(u)PmS&>"kVB?!5RgL2O__e0@Lpr.M%ee4?BW/(+s=Do+iL*L,7MP2YIj.N\\N/j<(9HjM&_&]AC7L<"i(tK'EhC;n`L`lg(?\3m_25W,`2(F/+'lYgi;lt,CPY)QVShq3(%J&O6.*l=QP+bF)BM'\E1i(5\pp5^?O^ahthSJB!f@M"SQ3?BZ4n[L-f?nhf$'FkefGg6Xl65.5raZPe>=_>.h85!Km*h=]+%/5']%&9nEe&b&-;7>+TA7a8n?G*mpl?`/a-0pni6\I\i'Jg!J4#o4(6`,dZGk98SS=W#goh=!6s4)f$&ed*g;@AFZ>>/WhKX'UU-EIrW=%8Cq#<O9gXYW=TVC.RTj[.6DW>C_+5c*rAbN6CSdYj?t>*LQIl(&Zk":LiL!`"GPYQU-!:0`>!L[Oq<0r+[h,I"%8HY+pBDteaQZD%NDmV)i9B&D5ZTahiGD+",b+`\(0SKgUl^3PU1oKM#cB-[#`'K_alL:>1W?1Z9Z.BD:[>=J8[r8l*T+pUWWeYMOG$?.99>+AUPLPl%M%Ei8U)mn]#SHHH:cTI]<u)D6Y,0(^+="a+=*Pu@LF-,Y-6U7Gj>7N9bVQ2BEQU>3#Cj!?7X/d-4>@n<9St<*&*,>8$5a:Rk^F=@%qsl/5FC@qaUPAmo,R&9U:o+OAFFmNRF`sksG<dJ0UW2$p4Pg*LrLqOe15*+^*Y/d^<0,)E%q$kP.#3fg1LR_"/o`?aefG;L><I`F%D+V7BLcu?)aq*X[96f=o[m"pb]gVMr8f*D1.\,opi>BB!AYBM[Z'!3ZB14(Z6?.HbRBR`k!B?*Fj26:n$9rWp;+eZGZA?lp#,J.B%Y_t1Rmbl53h0WWQ+GM$bJ%31F\e.;$(`aeU)`cI_g%fU"M'c]Q.8l<Ma,0Nl0eECF$nlTDU+jIfoe=bojT3ht+rAX`_l\A/itjO-%'Te,+];qrQPRba')78)<j6\KVrYUg>\1)t&f8(53]E!^K/9h\":tbh$R:DXV&a9?bGR[_I=0.Bl'mDBC-DRS+:'4r<`^6V%7?&=P%_$cMFbR/S9K"5@SjjLh#]OjW.4^rZY)V>enLXG3W`,Lc@8"6B\)m+piX,JA<U(KFsMARtX@$sBJq1BDW?poWKaCT/A+1WK[XN(U)%G]=IBNR9hMATfm7Qq0M7^p>X3dnsM\OPUgMaXjG[%'Lcr;=UHm81%E6/1Q#]*WD17Y>li4?BZhJ__BgudR>,GFR_PT/>4:WJI'Rg%+j<=33Wo-I1d6U:)G:=?@jR?ZF"lpk^T92HR<S;p-qM,fRS"VJ?165sBSG*k1@MRckRJe+Am,a*g&a`/jm\WaT$b>9#+\V!?FkYW%5]i9hTo*Ngn3/"*)F\&'\cV.43lrLcm*H-kPL7nN'JTq%T#8RlM+V*^Na"@ZSbD.[M@/ji/n^e:'a`l&E/ctP8coYdg-Bj<ahpO^%b0KGF3+@Sn9UQ'm4D##cL]W;a.#`EB;o!L58@_q3@SmI]UIYXXd2M#(;2u-'iQaTl%*G`'kEU$Y/Wh?)`gB0!i`@0a3_Z_#<Tqf<%KjYd\*?<(6G^0;@cc/S16)6!@(pE.>#?b"O-5R&G4`go2PsXnSab/Pi*GPmsSXj!5k_uo;e)>RDU^RUPM1&)6@lR2g&(^4eo:Y4W%n_O\<@T5MmC3<LF'K4nEn`0pq4C5($(P/^[2lM6u>Y%QsUq!N\#VR7REi<1ib<:["P^o['7-5#Xm5-HSEC\jR)$!hnh<u5XN(/UU%k.7lrnG%r1,I_8:iDF"4o-L"r*Qk&FFC`Fc+dsq@/XstOY9P[o+D<4BKa!VBJSiSr(,;5[*n\Ys#[QA0R)D:0JLkDRY`d=@3=-p3%]OG\u-+P:GY/asVFGab0QE<#!36!\;$t;PRH$MLXUYp5b<&!,TMeqTJ5tdm?HB*qgDN<(@3f<@g1XW#BP:eW-g[ZlBaZb]T"rHM4%$PH69>WmV"**QuS+.,%+*3"le+OHG$2RaFB.Cc?HC'QCZ80T+Sdb.8XkTU(SbT]-Y7g_r-0Tji;,pZB0R!b(D:If8Z2k)g>Se/dJ%3jW*Sk32;*/#MbTXbmD;h5mB!dBugSG1t>Ad0Q_A"X+V#GD\(t:_G@CKF&U96tWUC8th#V@gp1Yh?&9]KnJ=Z3Lq17a#VSQ,r.J/%ZfmhIkgWdJM*_i+]pZku>o3^lhN;=)0\R4[)rEB%&r)qaA\9!m#pCe1'(7QT'&%ds&EY^]'"n@_.`ZA4KPhUPN`]MO>inkpns\1g%bBR>j@jdjba$9jL^cDVX3"Rk1l6Sq&<!k=C<S)7^5[*YbL$j(g^h,YUa))&O`oCnUL!#E#">Msa<hNUJmZL8D&X*7>V1P02RK-L_%3*n@"?GmcG5`pBtF24RM&s\VO(1_fH!:!k1cVs>P"4k)1Ci<.dm/`?.Z/m\iGT6ib*faU,i9=.q3\kAoT*k&r*NN]l.^6X=@0E,I%[Ja3`k$ajg1!.(6kY@5l)g!Wd(qRV88CSp:D,r?d`gp:T[rK?ZIMCc_4CZDPE1IQ21=<P"Y2G4a'QtgmS9[4WK-ponLnj#"/%ER?%dCt/H(+=FD<+WU:4*Z;NO1j2]#qupAW)[oV&;=C`eZA7oJec3h:U'>B!ZHcU2Ah&#@1S>_<EY]#"\1OI'M0'(8ap"n]+%MsKsO]\%n7%)\!b'<Y:q26QN9?r)#+u^\0l!_ObbAmE`HMZ\`^Lj17#)*j>uE,d@)\5#4PA[5(62k&.HAte*p[B?!K'AZK<Rr<4#&6/P2HX_%$"45%KYN1SP+)V?5SSo@J6q$l`nDgI.e?i7OF.A0^tlhsi#WJR&C?=@*'5,$?lIifPItT1PYo\#0sK4dA9:CcdfL$=)6+.2(*HK4%`$L51&$s_2i*,0q0-iKU6AWMLgNM_50[(t,fbm+5Kc+XJi?4k7/=C27H=Yap@cqk"N"D<8Gab:j2'N0Ka%e5bs6RF+YP^G)-2%Z1%4.MWFF;r\GM%W8"IVKr0!tUFT_&#iT"ModjFq<<*dfql#3<&X!>&0>WPZ6i$Wih`m806LaSTTi)\ODXMqqm8<aXs]Jp*X>8j@jVl%iQ>)[`%VnS9>rgNIIsDI%[6Re6IijUKW1+E5mXK"n/=4L/Ud9DVP(u=f(gRiXrDp8h+/"Pn5rMch@=$iRqfA7_QBmX2i/e+T,/.h%Yrp3]7l)TVFj\C10bqc/^B'd.,GLoe3Wc5e&`nM<(K:c[e5[uF6Z9oNPGqg;*6dG^AS??H)fM@`<h(s!7jK>oPI$[N,;P[M4Hm`h%m7q(GC=?$9=`7pI-H:ko@N8HS,Q)6*/Il<WMkCp@l0!T`W\NA)T0b?eo/E^.b$s!N()_g:`d`5#=Mi3(;6/RL+_R[+c)\ATl#8W&%U>g\d#)=IPIe%D2$5RtdnU\J[bbuh5r9,R1`l^9kRmMdSF7HfF?'pN<Nh.,B^X0r3hA\S#;fh*1lJnRY>hYT!W+$j8l7o;@odW7f%oT4:<p6EnZ7g0?m#AS=Wm3)8;.TUt,5T&P3+bN5F'aXKDE2iZs0nr]:cB3RkDlSbh!:S1u=#&kY4NDEY)2cn&hSpR*T4Gp@h\$4<%Lig_:KJA7U_U=[]a-2jRA4ta)LL\^C)hT<&'4%pZe+i1C7=g*Yl=GEPSC+;*'k?h:(Vm]!N3SnXRk7f899:MH+IoaKS7cHH/[7;6%i0X_WrVu\q3j4C!_phrHCc<d-]f<m.>7@PI7\Q"_(%e.1<f]<0OA'>oBF=OjYpHJCc9cj>\"cjTC.$uW$G&5k'DC<t#LP$KjCBtK%!2NFJ,iL/.2Aa8O4iZasEeY_C/$6A&At,l2-f@Wc*B#7L=G-iac+4B2;hB!+^mGj?@l8c^7/5Ai%O+aWB8QLn)%2["X0EfV/n#Ym%M',["P298s1EeZm_-CGHKM4"UV$8sYM4+&B[I<]l^"R71?5)tBg/4L.[6Cc#(@CVOEiqbNoup_]4]P[8H_L^mhGlO]`PefH<I6`)%E-aC?;iOIVl;T"+<:0=\]lJ;!`4[?[OGUY:&Ne(Zr:Efb_AGI&=q,`8[G>],:n1*SE"t\!puXUT8q,@Z8]h)a+G+Vl"f?W1;Nl+8%Y+>0g)EhK1g]2#;^tDr(5tDIp98A;q6\*]qcr+e!;1+,S>5&;q*GID^J@0Db^`LBAlddrA\sShkJ!feRpA3%s*BiV&B04iKpH)rA%ec#-EjmKS=]:4#Za*Z%&"GanSGbQ2(S`ACFG(La\\`6h;G%)MQe[(J6m!.qnnDbD$f*'q`7ua4k>+Ao=e3/*eV:/UAPPM_YlT7V-%W7RPES5uO^SSM[>NGYlOH.C>YIn'sQf-@tHC$Oj$j]j/rlE-UtHUe<)kfQ!22!Uje^":M7S5uPkT5"0!gVDL5iHV[ghEK6Q./SA8%iM*Zn%DAD#.Xto>!Gp<1J#;6/NknLlp:sf9T*oLIM!S:WcjN?"S2C<)$)N,A,u:g8W7!=%X!J;]X0%1f%9&<iLkWa>Mnp.[H4&et%/J!K3M@0m7P%hTLA2](&5:goSAd&mA<60mn1RLcdr!sJ$#76SD;[hUkaE^cNF%/Qq"9MpP9bXigbSOC_@BNl<9+8W01b)OO>7keT%1,6QuMR:$dP^bo"i<s+8]H^,b^/e[JBa=74Z*Q\3l(g?`5T&ZNs!sY,(kRp&jHEki_pB4nS6<aBpa807F?7<Z(ap;ulR<h.S-eX8%!5TSp&0Te`E5<_4%5LZalYAb4I20ooK.Bn9RIbOF9m#dV(pUg+OQs@?'e@qWV9TqW3^i@7T`BnQD,em`=iRDC7OrCZY`C,S@<97!%$qW"KY"k:lRSR=%$f3Z@+#pJEk-sC6J[6BU^Q^!l8haCt14hcOR=_F/B1?W;`IK3L80"q@G<1ESaSVgO9NuWVP49.0d!AJI3os8F%0c9KLa(gu6NU!gt=sC@70>@1<jC69t0TPh$a)"5QpH%WR]I64udDiWG8MR1[:FF,Waqh-Eo<u/A3i#Bq@9&1"X7NF+='=$-1b#l<%2CTh7&@Knh9*B-l@s5OEUe/sD7>`/8N*>[]ed$Itc\.41B+1Ag?2]u7==?j@Taq<?%Eqj-$qOb-ieF[28r$NC]#,:$#![DbTPC(a%I8ShG2?X-=rC@Cp+;S\a/f5.#Gd!Z^#`#(e%'uXVoGAt:HFHHfV*u7g<JA87=I!k!8K2T*o@bnOIHTUf-:TAa[\PJC=beP*Z'udR%U)An?QB['bHDc*hKeR?PL:k-l)C527Sc,^"1m:Ao]HT6:F]C.+oqTQD6FHPKl(,10_Khlu_7ZdB^#Pq"k%X,/"d9O&-!Lbs(l,q2%W`hq^:c'c0*4j&Qa6^%+P$+o2/;l2dD"qID,*@(.eq/;]Mnui'[7(#=BUbfDDb0ho*G/g[E*/Z.mCggA+>6>A%]TeqhJu@rM;(1W%<W"B@61Y[EkmIWE.0><u@/X:7N94*A:f>QQNt.%%WZQ@gG/a/s6f.bi%Jq9F#M57uKVd`jpW.*`d"^4=5C-"o[bf2\&!E+R-C!aq%N8B/ZY>:3*Ko:>_84]E-<[pbX9XqcY`H<NkDpZfhohU-dA=/I]Y:PMmPae%>Z5J*@-J6@Ll#H9EB:D"gn+;eo@uc"cWjEGPiXN0X%A$0*:5jeHFFq<ttTqg/"*i[(334=j0osf-=\!^(\6$4*gHms9BmNN=IA6q8jE"]Fuk;FlLqr#A%LmQZ*&!p]ME""RqaFo`m4#:"3%J2]f*k>UCKTbLr"Yn&mdkfq$%S]\Pgq#oc_YhI3NZt8%U#*]5A<t8.7Y5_LRZ>".0^MY[(^XJ8E%L6Pc><@1A(mjpA=H#g_Or(0S%`l(B]1Q=4gpDsoYVtmF*-BsmFc#IXRa/)B5M2j.A:]rb_Z2uU6AJl_nGZF9s_fD)<e47rn`:'bt!.*^%b6&$*4FhCp!siI1?$aPq%H8Db1:?Ic$Pkg]:im#,.:>$k>Q-UbS&Eo9U/9bSgqU_0]=XJ!OKs>'=h7Lm]M46-h9C(KdW7a.Mfh$0ehcqg8!:BQ_cHJ=(U*\u?%"K]A&S#)OPH3fLFJ@0Db#SncU\li#mp\:tA#Z(_+XnIK<"k;,kVc(LJ!nPL'@BrM-XdaT4&G,F#SY]D5Eg&HS(9#ERHQX+`%O\fs%iW%6CI8)?^nu>sMW<]NknPcEsq2gK':Ju3(8Lj.-be>\E='1fH>9T>j4&+%tilV?%s0Z*:Q6uAKQ]!s(aYr!bIUW5tT^'2/<)bSb%Y,YS]3_d_rrc\Xs\t$;<R%:eu>>]ZXH#p[&MJ[BD0]_&NeM(X=E\5Q"jEe"cNPV$`l<$8sb[sh$YI!*/X#!h";D_<L-UkWI\c0h:%jIYUt.Rf+m.9<OqZh@^:;9.%ZfZ)X@=:@g(AMH6RhAan=kcl=#O(h(cpG2&e]K1*KT/htX>#c,HX=@&S3&-/6p!tW9A7fkj.]CG4%!rD+8-GQt6=gH*7?5u32S?8f#c;mrMC2p8EGDIOh2675ZUW5?ff"93&+=V6.i[kmJeBUrl0k[Jc=LC'g@A9Scnuo/XWJC%D]/"2f%s2B,pb$Et\@*#r!WBng+jVjSua`Uo%)hKkFQ'$N?W(s76?DkH"<G/3r'`XD?P:/>`ME*au`N$<P8>>@O+]r7uGWV2fMB0.J2ro8i%o,gPBl50qTpL?))fr8/u@Vokn2l(oA%^WEhGc],foj26YOB6(mP"fLLl(+BF@a.YJTjht=WZq'^#:'[!Y>?!sf8#!eKu7\Qm2/GN%1qWI'6f.bi%<H]mf!8DI>3?@"&NDjP*U$"SBf<*f1?!k]?:/.`1Y#5[hH4kkeZEt_(/38c2O23h5j5ug1,-\O!o(Wpc!28YjlXHj%a?5//f/d9_;qm%7aL`Cj6)A6PP6bsA<Q.%*k7t6F=OME037JJ"Q2/qTl]cV!H8iQjI8r"`OtsA2p#\$3LEn?<SQV2ngQX<%ORiC%%b&8e.c157bNDWJ)BVPd/ZLMuMq^2qUPYWh][0Rpm'G*p]aHO//'8o(0a=RY?4(<JNP,AL!$"9Cm@G8:"bh_6f1P6=#;u&Dl6l^`7%Pp+/TG49cSa`!F!/J#[Zns%9V=B]fH"bJehpIe\qmJqB1+2h8]Wm2Uj?aJeqNeL5WBj"I!8lC[Y"_OoMGnD/![UPi'DG0H=H$l,J%^Eks-8g5\dF+FK^VE?71"-q;KF8.F?>4lu*N?qU?7=fn%CF*7R*i'VRah"Y^$\kYS4to/5&.0Vuh9QG-)mHChi>o=gE!17iOPpu[%(GJlB'5_M6S)J+;/X]kc;/$8#Qq#8kK0>C2_XX7!(9cg-@o[cdJsGkBROJ=s5bf9\PD<',/8E24*pHB!K.tc@1HAT7hcD+B$&gCt%#ElSSW0p8@K2S)k+<SX5`Me7#Akelm/jMh5=f/[96fp-1LY\2'50)Ke@R-ko!20`qK[odY=#_rb'p"qfPYT308)XUAolATW>5;po%^kNt1Nn&CoL;Es`g]AhN,%=D[^beXc=hlf>+VS]$*AjcuOMd4rZ=`9e+QCDNHZ06A12BDu((4q2@YrdPFc_MhLJ4eM_*aG(<)(aY%/EmVb3ZIYjMe(tTE,MD[5(.d.[+N0uM5ob"5fXtfc-2iV5R[mi`-TKBWHEJ$%g"bm[YLU\0@K5#R6Kkhaic*E!c.8ajNTA!ESgo\%34>Ff=`DtY!L1C-O<^0\<I:'Sid"j00m@sO]t/JID-EccB?2M<H95Np9[t\HpLGW<q7sZ5N/G*7m@8:TD+a$cJUjNu3X<f5Dd=N,%I$tDi45,6@!(j$BE):KWURYg6)mZk=#^Hd!r<aOt,H9j+Rll>.*n6#$<1/K5;:fq/<&8dOmX&ji!C(mM5ukTSf(ic1*sYskJ>LZ'%-N^5Y18CoTaYt@eM8+lK8-6:Y6O4Ep6>'7Zg@hq5)V!GR(g'TtA,#'F(h_0&+T.+N(:_WLmf.90abQqM%<S>JWA<]JU6aQ<S?9MP%1k+s(>8Ka%E9!6.]u([C3=[0(K.2R2*N?a@5uuss2IY@m!)a4.R4>DZ`9;T#CQ[)a42a*TLS+8%P`ie0LRSLio!ALu&`:'PaN$`R%'sK--gY]eSQ*@O7Q=tom1+GZ6/<j'u"EO0C&tKKkE$po9(dL.co.-0PbWF40fKpV!/:9jBD$MM;HDkEp19H9][RTe0i'_+Qof<oK%]P3Y-f=a54Ka6upjH6'6Isi;NS'FRGNhS'A1NV\6Cr7eSNkAJ!*jR7DLu<gh8;<_Oo+=R$ErFot+sB9`<p"E'`]Q7h"-W2*nFd;H%J@M.Z7$q-f,_u[GrMq\.(jneFEnaa`4+d,94!kO8\VQoO09BUCaaP##5Z^et>1idE(H!oC,!cNCL*'jYX'":>gkM"a5=Qt#AEIBK%7@5R=s,*KH8Mo`Jqf#Y4qTsFg*5V`/!X=0`C'uQ3":QL<<2mr#2r4k,p5493CI2!mCM?6IG!61>\J5,"GHhrs/\6gf3"2XU<OBYP%`gVmXSV>9''[U0qq.(H]W'".DGFfa(gtEK1?cJc"=q79fG.gs&(ZTYUgfRGCRX+!X`bK@\3;.N+#B)8HU4MhDLu)r6E$d-1hP_9;%MUG[5b:%cAI:EZL&QTlr^GmcsJC;"Ae,fqqb%X0`S)cK-(_Gh$A$*$p6&1P1j8Dl\9!nN4@uchD8@1Kk9aQ*=TJAmB&"2X4Z19+n%QG_!%s75A^7fF6\:g`:M[5+1rgO6NdJ/C1QL3.'-$7OrU:m[#XlQ+6mcZUO9\PW*Z/p\Md.Lf-&Gcg45L&]4I]eXU45GM!^fJ5eV%R*&\:bV.b@5Zkg9K.nV\_1nt:6jTe?US1<[%.s:4Wt&_jCu;&%L)e8=1lK2uP+p;3=s+qKhQ/*lR#@])J^D5'db('F]2HIpA?Cd]%+>\O+MKh5:Qe&ARL#4#QJFqPTCfX.EY-p'I/hEqX>t-Z)2WR`u4ru_7g6</O?hc^u[maW09EfYm/&W!ug^%Pk&2#NUfI5%L+m;#E%@17bn_GD$k/0tC/,gU6lE79@"9@@Rm5)A0TiYk;6)nXB9_BGj.@;`#Xqp(M`P`Rm:aZs-BJST%c842AgcJ7*KpR\<CiAN7+PSMqq%YOL2S@a$edm<N/m=n8c8Zt9;a9"JH>hjD%*FlO#s9[,&qJG]\/mLQ8A5n.9P9KaV!p;_4,VZICR.eA`*2T;K\4Gp1<<a.+=ee%BP%=/1'c<7bqRlH0;M"j?hn00ko0f@b?l;Nc<AhbkcTWaFOCgW<2f5"tU6FNpq[0DR7:UYHm/7PW*9;RQUJAYJ(*]0KH:9VbBo12;`H%DEOXmepXW9:[`,?Lj6Ce@JJX>lY\)oGR84_,SJ.om@.q4]40H!d=3kK[-YXO`,nj*HZe$pE%L]`pN%Ic'?!ch9FNo90C%de/g=VS%g*oq)HJ7^>Sk23"EBUePAOZQm"_*<,HhI\NL$DOg&3E^8Lo2j3b2M-X-Z`aBPo0FeNlAhB5^0)hM\l\eCDj6bO7WVT4Tqr8;=DIs%GA9UbR[W:k;e3*l=GF7645ahkQf5:s8:0YFH7]GAL";.4&Fhp9;d/>nWEN3;ge^Z*a;n<h_-moTAdG`l.WoR#5Yfck8Zc.7/DUsV%%<&?p89W0!#&`E1T_?!?jY>5I)qMC\KNL[ElOL6Tc\_ak(TR+*h]38c!u"eM$aB=8\lr("Yhg7J72604(CM?:N`@_S#q,6-DCF_?%JNg'hA3PgsP?@984KDr'&`IY_P14glHGVO$M7me;(`e';gYel"+:4k$X6m/?0pKaKbT5&JF70nN=4X[#l!(AF,*'ZK%Ms*YJV:nr%+W#m+dNhZXRM"Y<ARV"Fe$NP>Ih`d[XB=ct"0DYsFEkca_JlQIUVBBqYh6$]ID'Yk(iRE*XB5!&R]J&M]td-CprR&bQ[G$=0r*,q%'(msdZe(S`+QA\JNnKm;@Oerl1KL_Bd1D;NAn?K=Z#M[8b#ZD.jFU&l8F&s&62sYic">C15rGbqYcUg0C^-712.`bC(IJX\QUU=?%brOOT9@[LPa_(XD(,F^9@0i7-XC=?PY@QZK$e)rm<jVCc*=<lfO>51b<QgilC9&,P1e_M.Y@]G8=8`&TBoEu>c_k58j,#/l=1,:Z%ZJH(Tq\<AgEsU#oa5_HehP<[(Z=0;^iGTpF<hq]h)]WEk+\cm_+Q@BAD7`siZ&:8I1+`,ide$FK/LF,>osEXW]-cZQ2C>bZ;JW&1%:b8Epr0_q6mAO7$);=5C]tK]782en04?@j7jP;Aq>9F=:>YMd-#JNcB!2ab'?@u]5`]n^O.Y_J;Sn\*Tk2rc`NZI]"2mY=q?MKER%)AjJ?d2BJlP!FUPL@Bqb\buES@2$QN3bZ>rA*;?FUY3aGXABJm^C=DH@t-J:f`+%WkXH6"qgnT!;B"ec>0T,3Wt>DmY&lO`c2\\a%cBB(k"i,J1n4(*L8"6mPJ"j.Ak_f5Ll^lg?jrZ]F`]fI_ZO]A2i:R!\j=D!8LVq>aKfeKrZ%JN]k7'4\k;(dRe]s_*8!i&ZXk1nH%]`PL-5955t>S@\+ETJ0Af7"0XZW*KOM=JM<b^GKmdDtIbKTfJ^rhfQ1h+f\/54D:*IP@B1kK)q9C$*Jd6TfVKro_JP1\YlLoA:R:%HtT%d@$`4-C;JLjT-Dm&=e!_.BSa<`1Ta3['n!<eO/j@&Aa+s80l=P<YUkT`dPBQLND%$+jf6h'KPm#?@nb[I=#'^%GtU4i>ZF!d%c<I=6`%o)d`>gp,+:6\+FP7u=N-<<rqMO!7=-UnIB9V_]_?_Q/ZCpC5NUs@U5.Zd_-%hT<aeKWSlHc1TXUToK\D<.h=-ft%U*3)C%qq`t9>?&!RdLT(>#)?A^ZD`Dq&fVUc'sV%D&/5Ki:&$t]HUWrt)eVIn3VGR*LU#oV[bbYu"<\AX].2ZGV+rtL!]IqF&02NX]S;aS%D^N\-%VaC-=:rCWLWC+AT_@Am57qngh'6ZTa$J4/eE/[JUM'b:`JU@:.-j<[>]PZB8LfOSd8^V.'JiDJP!ol0A;,aDJrMn8T?=S@%c6:D?OT&&0@GDM3AJjo\@).c'3P4L'coC"r2h[(=JJMHcS'6?(rFQRARQ1Q;H<g9JRH'I_p;%oHH#Bh&+n^OLbgn##)$u">4gK!4%%bl:4B"tYE#_XKtlUksQD!Q(PnZ't9BNVBX0#n^'/R!DIb#Y:SVWr1)_Ha%N*$+$N=0X4WBX-@9Wgre2Hp<`IQK(TCnX08Q>S5P#%/l=qc.\BYI/MGa"FW!/4.rf-3bEU^Q>`gm6*MT[S2&Xf+>D[-!bkt[GigPba>ZRRdg(50'#0M=X`N?c4N*iR[*K2/6h\](VC[l(h%3>uTAVB"B"p*LkaMY;du'AHB&@(L!,WgMn]H4455.UhBlXr\HCC%-\5"*m8>i6^rq5r32Br:65;*!EXZ>$53;:g)bBa?h8k/8?34%M[Fh7`hX98pDG;MP7B,m%N1?]UZWL!'@XJ6K\A-4TdI0XQ()Bd636u&>g;D$V?k)bn9&=O4(>sANQVCull_H5$,A7YJ"][;m&fZ$%qDa+$0l0n<m;4I$mQJ%DFp:r]TVs"9qn!%gY/d0bQ93R^d<OE8G\(IS9u4+X*t?3pRrW.cIfIPMm4Hts4B4HoQZqjO^'SErT=<&l%A8aq]Lq.[Z<`e.5a+D]"_g]Y9&;7QV:-KLj$<MAk1;F.67grEpSH*LI_e=?J/ClZSJZ&T<qUCH1NqaZ^@C8W;^1S.Fi`ms@TCMg#%!\qBN&Y+XTiU_(HB`#K9RD"ZYn\"rD&)Z'n+gn("rb/OnS+XNPs0oNZA^FjS:e+Z[8UN)(>"h-iQGs9$i%.sh.PK<r*EM($&S_@$%I^JZI,QoA*MDYd2,28s%\0+g(c:KQ[5\Tka[?'1kdk1<u0-@[kr<E<$bsB^Pr7fE2f(XH(Si;mBV;E:7Y@-M5)$D<P&<)RhWN=gq%0_O\][&Fb8P/+\<`cSUc2iD34[*.cI>^nV1)`TZ>Qt##.TV6+4/[&X$-]]+a^d;'ekXM0lWA#]3e"^dQ`;Y'pV*26JT%JB#<oKh@%pg@Gm=J7Ip.#Mj;!A](SfmFQVGoL^!cuOkcP,u8Gr:898&`!KL!CnqQ0nMK[(-t\N^`n#E@^$/fV)JLK7@r%)4!'b:k\=ePUo7t7%'8EagPfspikBL$T)h"l0pLFjtl[q_886O.[ND690MKff-9.,\,`"fgPf?^*l"&`sA4Ti#f0.M_HNXBf+<0#,F\]T!k9(u]`g%TsN%(!^u__u=]3Khcfko+PYacC>nDL\#73@S'2C!?sT4Ji(7T62s#@L8afXr\LENXEmsKp@U_1i05`dL)[E,-6F$%[ln3/]laa.=jnp:%338_ui1mK3>@e7rE?:`!rZg;=6;J9L"\!qaP\QV!M\h2JB`j<3"E\12-E'V*'c@RnPF2qVd1<;K.tT6Si$%sn60cLhos="F@h-R7%:Lp);!>!%XEFa$`d0^tt/0Oqc3)05`'X5jcGrZqe3^Z,#>4a%6(Nm2!!dO!U3-.k84W$[Ra"27WFqpf)7k9E>2[Wh:5`/c74(7;c%5t?Q]!C]&!FYBSd21cZZR*Iid7t9"8-ZsN90pbI_TZIA"IQD9e7%-l&8CK2I'R003Jk4qsg*"ge^c/?o7h.=t!J.'Uc7Bl&`llrI%:q&Sq$<AgL,8$fTPRS<4"0C3/Ml3fg:;,lQ\;E)I?M#4807"@S(HmQ,71TZbAJ[$_E!Ta^n/ts*+^R.!`";[1Y$J/bG2)=:?8@1e%e?4.rYO9cha!mm].n8H_,Jl'\%_E[F4&p)Kiu-I4hmM\(Fm5ZFj8U'nGI,f"*B'/ti%U'HY7\Ij#^6<_%B/g0K%up#6$D>lOAX#p%?MP.9D&P`(6A\QV.0hF:\l['X%#!/Ih2.+-9:&tuVmKNB<uD6Bc2P4Bm*9h1,sM@$$8q#9\kmGkIAlsj;4gPK."DeC;VDNL9\a.R%Q)RWJ:r%CVWn-ki.G!0$A=5m)llJd,%@Kj_`ilB_&aYKP!JC`td8nab+OlLQ.XAc"*k(7l%_gi`hnM/^r.RoQ>K)8r)deR-0,Hg,%XN,M?b@KFZ1>)#AR:bD8[/1n.)#=-Q9hnhta^=ePMc4Jq5?d2Y#e'%?'2Op7e^8LM.4_3DY1LA"X<k:,mX#ITLW/M[cOOI1bUtt.%=;4<L%RZY]?$=lMh=mL9%n#<,Fa!MmS;KhCh"Qmj,TXMQpFp.o*O#3#La<LG]C%t*,R8GC4oC*hVVLkFBX94u4bm!"]OBp1a)dKn%/@RdDF(LcJgKlK@eFg8j/V`,NEn^]5&jPfm#>C"o\aE>\TL)eaH`)22RBgj4BT=1lnIn'7`b-CjED&9/)eYY`E=4gF;s0Y'nUrn_%L!Isnai1E05\*hBf0,(L"S(oka)Q-nQg5\(<cP.k4Wnbr[d,!D#UY.hlQ26[Qt9X-HOXu<XC6;."%#Ge?MC[:BiVY>*e1S*<9:iL%`"_A2eGC:b7i#rQotlLFO\oZtm)#*e\JV@5_KROpn@gP>Yj$6Z4tsSVhb!JA=9;)g*:J6q'%UB!f0(E)>AgIspOF]-X5*H&%&)MO%Neu$LcR1Wg/(\)$Pfu8$l^j3*gP,)IiAh%aSLPF>881ZCh>!4_S0rgH;tb35g5U$CIQY:a:U<s5i_KkO_X3[JL8`oq!D2n(ZjGsG%Zbh)$\VJ]UP/:CRO?*AtDPShVa,C9kPV6N\'8@t/7N5lTM.@U/2nDCbZ=jN0Mc*_.L9W(Zqfn'q5HT,\oJigoNM.K`S<"F]_)+Z9%"kAp#c=CNQVO8FcomS+&lI@ppVLWd_jXZ?+0(pSF%OEmUWbD%42UlQ?<=C>Z@Xsl._o53)15*t?d3omJju`bl2h(;[",T']2ant"%X<!ZW(58eB-*S!9d]1NO*g:)O=lh'?cu>gI-,o"a)pEgG+.<X?IR,+:?ibc]qm_P=%2O;'B&m2F005$=*9gXalf.V1&tm0BFCsO*%J:GeO*11P*,uLl_BU.P$Lh,?F7LjHBd^"RYg:3Fa*3/dF+AjJ6X@f)+Co79c**#[3=B6!b_Gb9&c8<N^=Vg*C</a48/@a2<R5)Oc%GO4oL9$B$ZlmW3.O]2jr@[a&\M3O;3?c]&i?%`KCd!iCioL\)[Y:(>n$eO).8k]^C(_Ks+3eV&h$=`Rpa0)IJ6M5(\9U[%C[!SC<%*jMZ$L*;A%$)Oh_aWXQ/a2cB=V)!]*86YRe'hkmQUm1,J@&6R[2G0D'Tmjm=a+!?k3lA%qprNci'2E1>L_`R^S2c0'70:WZT+l4>%a?cAbct\?88Ak!j6F(/n@Vm7B4qTqeoWknk'4Y>)Z99"77e-kpB@aa=^N*60<1POKgG:dBJna2*,d=[ER9(`*,0GA>76"0o!fQc>%>=c5i<$-+I:f`J$AaTh/(Bn1A,7k]1+8#nE@<':7>S",_@0T2F!p5XalqTf*KL5/U?ns6O3rpkk:;DJW'@:02!g_]t$!>4*:;F9)%bM<I17GP<s22#djQ)FrG6!E_)''//d0/CMan!b5!Y]/C"TiGSLo?T"^KhKj'HP?uU+Nd8,#9XWGM<+_J3],CcEW@RTg=1&4J3p.$%#fKti@r4`/YVGqu0UG]1o`t]+m9]4r"!Vf93s(ONXaob]gtfj\$Ib=d&:hH.3s'uS+6\a#2&@W=3s&JgGgb<:JST#@U)egN,$KYC%"C`NC;o3VZip.K"mKb@8s8E9t73/<s+Mqu]`?0X@WCL@4r"8-H3s)ZmO-;d0ZgFp`#[D@pnA!BkVd]+N-U+133S,JeEN8X4\g%d$%;XA!W\+o26G:X@EQQBN`lg=o"`A$D65g[*dh%?#*"gB"u%]Ms+_>Fo/0KT>/n*LB3@rQ)=C;ipF5t6=5&3RsdamIelUHHa@[bj'i%Z/<-#Is21$ftuV3+c'L)J:\enYU,<<G7%rM"oTU3>/;(<#*XJ6m22p\3sH)DN^8HQ0k^a<gbB(a;OG%*&?DJ2/&rbJfj[P?C5J"2%\j\ad=0"%>O26IMlklN"c5cbI'_\./6/4?KEuO/aK:O85BEfl)btIpnlb9CSRXt.l&@XW%abG[)oj3/PUrus..G.t"7I`jk-jVoU%R@OGl>,YS7MLe'2lb'$jbTHld,k`;#6-&G#iK8SdbTX'CJ.!kW3)EB[F/d_e!_L7,W/[fZ&0<bbgN,$[Q`rIiCFOX;qO.eUG2f?!%6a8Z\_N*.bNYNSKXSYhp6gP.NS.qAN.7A0W<RFmTO<FGC(E`!9p!Bq9R*3,ZIj<."$n<%?b6@SM=-6u*IIQEFQ&\3hNu_8:IN6L^%oX.'YJbM#km&W3H+ur[Sl"ca#IoH4I'4$@,p'CeZf,S&_'BG3(nZ@bN+RcK,8\n(NQc<B:DRZ7;PjQlS7qOi:1RD=0$E51cS_<1#%bgF/qL=jT):L4UHP)mAhr:$2jM*Lr7^]13mJ,G@WrkkpgV8*&qTE![7IS]#[>!5ndAf\<cm1"/si"-g`,1)DNrUPmB=9%IPrqYH$%q=a@Ub7?i9q/?9%a1qW0ooHlbfAHVg+9(<f0*(sghgYM%hu*0%?bH?sVuLP$J$P^HjkDG;o/G_!e(.q(YJ5J^:YS\FEr4a;-2>aY%^OQ%Qb@$CfrqMQAO8lNaj'O_.hr!S*^O>uds0ptSTCBJ-]-&t2[>;WS%9;Do@D>Dsg?F[p`IIjJgRhc#Q/ZtbN6$s9,fHQc^&IDJ%#2Te+3tn[@P#&mm/3hk(oX=..p7'WR3M9:hi!,;?i0/Zi.`kpVec,OWG9Rm,L:=qPrqE%oJ,bjPb5[&6Cn!EXO%lVLgC%\.a2'O[%GqsiS0_:`TORm4-,;cNd0#ob.!+AY5_,LCi1,i`B7$''D]eg.&SZnpF*&asWZ>%"5TJ]0sF:;U";a[]-lEJKJ_m[9Ufe';Y[=gtc%)O4:H:dg)3<l2<5Y*Xmf8UTtcO22kJEggOi5fe]1`t-V0Sk/?oq*0*E7@E@b/4'^q_:u1Li/c'B%LmA#LhNt$gG&W4$?$mY1/CQp%B>I34O]d5+Ul%:,^@bH?7eo5nLD]kO$Wd*L[i(pk7M+VU4q#s9$,'mW?'bc_IYXju?7jtD%Dsj(QpJa2qWPRW$n>*a<uu4Gj^pkL%+8lP73MUi[f+:n=L`Vj4l/GTQ`FI]3_1Di$(hN[%[^`_8\78^SJoPm#FO>rL_'XNcW98k#T*"hp7n!c&Hco$mB9H[Y:2o,h7>4[#%$/V+Rl\d%].kr)&5^5M\&;^Kqa+IKs-_eJ`Ca`ajk1C%QcC]rhg-pN#"O+[g&7IIFJDgY;qML-i.&(.ae<kSn)!lmSfHL[6-G\;n%788:t`c:AK8;I)*SH.Wi$=e5\7$pcW(L70"GTFLOPM_mq4aE:7ogD]kr5`f?a%h(S^IZ2a%pUcdqpFI0N>$Z1QQHsr2*#B)ab\Ug%&p2b!nfo%(P+;GBZ)T-8j:uLRCF;?2Y8YNe=6(1A7Gm0]J6F5LH23#X3VinMnh6(D*Q2t]&QRX'(DOk.PQ\'dG2Dj^A^3g,IuiUK%M5h9-R,mUrW5,:rV.$kn+G9CMZ!"5-4HQgp]Zi#(?q^Ti^h4jGJnPspOaH,)a'K0:L4CS"ltr<B-f^::5/H[>$_-jt/o:gq[gJnK%"5!Xb.>)79gl)EJOVDh&'LmWRjLhK`.u=HlABcW+HGb=Y?u@"fb7SuaC?H7^k9on%7So2I)ed'*jIoIn8SndB.],8VhA]p6\6^.e%A%hQ&AlO+1PMXLJH5'^l;kV3@&2G6^nBHE&lLQi*6mA>0QN0+XU:43O-8U-f'UBKG&S&=BJS%nLO/bC]'>btFZuNc=/?"0Ic!qS4%^7!D0!XS9u[Lj57l:+s])mQ@^#hBXOa4tfD&K?>u1<bK!lS4l*l+Kf;0<OPs"RCueW"U5J,1'ZkBhqmoL@OKr`j7+Lp<)q[Knd!Z%[U5g+En842\\*=la^[#+4-W/VA"46t5/X+?A\4*!B2mf?E^L$i-.8Q/#EEaXPUUKbJUXM>XD<,%'K\@^il>M.#S<,O(!:b;g55>2%XkG`EEqI<R-;\ZN,oZIh]7ZZg+Z@+0D<=2EF0,0opG8^BS+Te)d0>IO6q>I%Ns>-LlaH2#+>ur%ObBjtkX!E<O>1DkZiC*ZoZ,'#%4tFHh&SE"2en@.!`Id0J'[EF@%gF!-kK6[oaDs\SFIQlE'M7>H[8_;KOdl-Ocs;5#0@DMnZ<W4@7,5t[DF3je\h$I?&EuhT[Y&hH%g5H@CQ9VlWDETmu+k=:=iXl@XnHSd+`uqO"s%%HC5:Jel_[E>K,(IDZq@$Qq:Z'm1VYXn%=QA<WEI7]W(lA<p_/:tBUXp?=)=F5H%*]ssGqb?m\;%me<b!R(WWr1)@UV1+YeZi_pKcuTN^t'nX@[KAaXu2gmMlL?^.n%m(VYarDC=LOiiWrlB\bfsUU+-i?QO(eA]3eU?%lP%g(p`q3^nQTb\b`q6o&(-dKA>+>\L)0?D6_,.X\KP&&#HQKY_/@2UkL*PN+#;-UGD@`CFCc#d!m1/[#\GfGZsil8=3?D'8Far5%88B0<nfY#WZ(d03&A^ge;sAh28ud]),`V/J*g)l\dhF%E3RQ5&[R:TK1%J%3'XU":Xn'QjaV1ci@.)u3MFoh+:NeOoTO:fu'eDQ%%4Adq/JYj"Z;_lF)'!O\g6t@&,&VInO5ZjO.8rOa,8JUq5>t/^CW!:HVM@*+kEX3"X!![B#NPhZg.;TWL&ZZ8EG?cDS;nS\q]:=R/%o$#>+!oNCPib_E")[n$FlYRgPor9EA&h0$fb=]k&V1p@J#6GA=gsBF:igf!Z#7i?1JEg<=72Qt/ICQ[hOc2V.$g=d68t\WU'68)m%c.EDcW5nG4KVGWZn5H5-"auf[kd>s3BQR>2b*Fc!2['o8\WV"cYrj=X'u2>Z3mq0&&2J$=6H!_5q`f!eR,2)43dMB'#Ra(,^q.C/%"uRXR*!-)sJrLb;!nj5HJ@,^)Ft_5!]=mdC7ol-8C1l0s!mH/,9^jT'gNfbkD!q]CHm<iK*/3>9N=493SiGq`0lAi`(!^mt(s'^\%<"!7p;]QX[SE?b;!`h8@R#Y5GL/_fI^%<]-:8d=L=Bm39=YBHYNr8SubDO3-<bA1ma"qU3?8c+L5<5Nj):!Jr:rCX+?!XfWiMM:F%$&.YRQ>_!%Fcam#GMf4j\NP4CN1V6tq;d(1U*D#oY$&9ciiJk/]\R"1D-MFs?fc"L[QLgZe=b3p]^r&R)X.qdfSu8M3=5scq7u8?%#XQJTeKG_,^HJu5`WaYc_WA[K-%q"@*iTgC9[)X2ni0r1<6DEjZP*MiXl[MGhcO7Kg5+IUMJf?`9&;D$C<iVM&sM%4-cPmZ=k)SB%FaOC=9skRMqRL&(ncMatnV/a?&+;9t8]ZK-f(e$5bYfT$XB"q%9*[6^MT`m#k/bLY`Au0#KcJq&JHmW-[O>(:nEWYl1$jImBhA][%`QqNZTR(.Wb$mq0"a2+[(;l"1d9V4U[c$3=!;R#+QNj.rVY4[.0q6&Q]R:e&[`8#g6`tm.L>@Z"/$(>]gL\6GmG0!,K).7H7XFAT%9rIYjApf]jogF6g3i5WT*#Dp)//\AMTAU=dl(d#4$PPO`9Q1--lo&+75j3L/Ajk'!I(VR;k`MD_7F\(k35)_DZZHe&DT+><Vo)2?%^3_)XCRo%%cVXHmZZ'l6$o9P\ZQ`[5S^126B^$KCABS;V6Vq'^=;8pf,G[nC+B%k$nn<T-1\3Z52V:`.&JAU%HOEGmq=.uQCLl1+%VJ)Cb:'S:*VVES'-?!80L4DFH)_s&rljL5Q_Ot$.AX&I,4,H9p.SrD-!]a6E2rB'QNbJ(1\hl0!1)aDEgCb:@1GOpo]g9.olY;+=%#Q;[hl6'Ke/,ETgZ_a[:o8alGeUbMi-7.to]5T6Q8mLDLDRGp8#WJ5#QBtP'/?T0MKsK<?[dXoN,rBG<rYgjfg'hN6;4fZ1>gCR;%aJg?;VMiU+p&u#=&Q8FWg(;PH(;6Z;H\=a_=,+t#q"dK%#1IBs:@fZ&6c0]$"5S9>Smeolcl("TJp[R])%W#f:CY.6Z,r8.-O%*o%j$h/!`*kb5hn)68#5)OE'XodIX]\/_3FA^]I<l;LPY@2\__F5/\8@ekSrQa0kn"$FF-i!?L1q,q%9c,HFud.J*P_]S/&SZQJpK:C%BUlH(TZGk`O,XQ9]_0X'&r](6Ta9=(#r<s*Ju/^fK<n8('tY&V%Hc6)`@HB"%EMJ9JWM!S>H8$P\6.0fO>$O\@FX%A)1BI.=JgU:%Q"S7f%QQnBIk6CF+)(F"Qq#Cji*'`Nk\.XkKOZ]-&AqVJeQd^BdTL9UND%rhKn4e`Oq6/SeF\<jU,pL>E$TDC>Z1g%YcY"nBFm4V%m>(55V:gHr[ci']#bQU[1^r-f1s5V"Ko<PGU1NLf]#JCtQ(**2M)2e9,N>ob7KuffG-t3.!^__&fO&h6jb9'H+?;_467`uE]c==M%[oYY"]RR$9FOH&`:QtEZK&_/_/4gE,jsUfehJ8eV#+hX%mVc/0h5AVb_C_&nZpBJhlHX5_Za!#6GJ%6#[Oi.j\UW6D0FnrJ'pHWP%Z4]t@F<e.ufM]V3:5J=J;:/$l,UM\iXG5]_+1Pf[/>-5jhg"B+0*I/0*C9e0DPRHJ&Yhta)T(YrYJ0U[PTa`1(hQ.KH)sc>o\Lq.%Qe(gtJopB;Bb/XiE4q]7'*lMb)^rC4]Lu'T+L&HK@&M3Kh]FN-qcme$M7>CF2@$B@oJViV("%'/a#7j6(8[acl<(-i>D(/@.#0+2%o@uH_E0+)/TubD0(+?kg@($o3s,/4RS?Jmp%Df-Q9"Pth3*DL"p+aE#-IN8)EJZ9eN\Dl1jO$7W*ffJ\O3tjWCDSUEgsirC<Xa<L%AD?Z3aE!'^+$\KQ>/^S=3iHU!/,=[qfPs+rKL.#"D)Olg7/J',$l'^:(KA;8bXsZ!_a([t*IF0WAsVt"`E5M"U!ea(Yo>D$ACZtW%.BFJjpP.<;e<aT%<djUr_I+-jRmFqgU*-W4eJe_Q?B@<Y&/cmZK43IDaU32,j=20gi4\#%l$^4d[[(>##cuNSH>eV!!I[tlc%(\g%*/[$)W9/Z4`/L1c(uE.],?)R3/?84BZVq*FkOL/UZ!ju?LUS=o@?5E!UR"%1!,W!r>l@J.]+GEM_.lX*\6J2Sp$NEP!I[tl`d76D%9rN2@k'W9AogFD^mrjN$qRlIOS7r8je(UqT:QKY5%(9%0?WPDNZ@6s&o*D[V7;PJiY`PR,+:N?cb,CjTh/8GHqnYU`iaQ5Z7CrK@%4H;F)-4WYKTEqa6;-")f(,lA%IoJ'DUECLR0(&cprQR;4EjE=pKKa3%_PV@<e8FCM;9C;i,Kdbha"[Rj>9XQIkK7s<V#?Os7kkjj%'pFd$^aV4a00>5Y%`K<s1V@g^OeLKg%Xr@8Ks3ij"[HoKd'%'KLbn6laXAs>1`0IP9=!V/>cG`n3a7^q5?cRe-rk4T(!LZ3=E0`K%ir5*<@TMj5jI2I:JNK?,ZVXbqp!X8F?c#Dfb;QCPj5FAr*ZXl^cFm>>4kgD3iO\Fq<-mo%o%m6)F)RRRBLR'a+Vpc]e&2p8Ya^nn%BfhUP)d;F_Iak2W9PRlLPFUP:@?qQ[ZP8W*bL9p\nt>9LbX?HGNA1+)G!`VDO5d&8Ui1@`H=4a;@)>[)'$<a,4?+gsVd`(O.Xa8#%8mRcb3"='`0M+>FGJ*faWi;oqQ^N2$lCVB;s3%[s>_=dc.M/dlK6"<jb9SFWm["[+\rP%Y&$tpcA]9Q3"@p;$36=2!E+ugnemu]m%.'G?WMlpO"&6K"]OZ!WfF/`Mt_g\s*a#RUe73m4NEcL)R."fcDS9V).nJFX#bm_<[p`F_]$+'PNRg'u4+:QY#W.<"`X,J_8IG=p0%#8l$VbbmJ%gl.Y<R;/a?I#YGj="#TYmH,OiVSi055TJA%(/])aaI8:VO4<c0Q5W>!K@1!_q+"kT'XJsIfq:i9$tW7jfRfO"Y>7So%R#lh]B)=H5RY_=tfHCKg8*MYO<a6W4.mUN^75e]*)h8e$iLidZ=12%9JoT-`<.1`:iJ@-"D-[FP'EPeLeLp1<D\mg?a.ZcopAhJa%E9c88R>75b9X_EfrDbSl5dmeAi]h$j2p:eLZM;.u@qaQZ$>"CfZJ`mbhoW/d(gq_*f(DF]eTEk"qdGPAM&(FtJ4<1h@0M\Y\LdP=%lY8=)fU3>9`rn%<,AbaQcW[[saN=W5f_,BH_gZ0)&MV4gZ8<u(97Y)7N(&=\%3Q#>_&[ls?%q9MC*^_LZF1i.@:Y,+XOo6_]Vf0d%/!A=s^Kbmn@?jDD0KpK])gI`S+GBVFMk[LA3HCD!//Vu_V32OK5/c,p'PD[?V^[E)7HS3-R@0F'"Z(4:07JfRe0_4t]41Gb&sc+F%XVctEYm:cD.Rk">nP9D+PFgT:L]<I[J4u^jILK8/.5bq2LifX$!LT1K+48$b&<"B=?6"]pNq^F$b;b8\kHi=g\.KQuocl?\7]atb%W?LKfQVnuWI=$VlJ9WSV,JAB(cDPbjVnAAHogF9%j-^7p'`?#SWND\FCRD2!K:LQ]QOUiO@*[dV`<BloK3rd26Y.)K\`#3X<AO;5%/.d]^c><Z#po*aRgX?B1l+d@X$9X--^fE,uUF\1U;^MY?Y)BS,kih';`K,/iVb&tfef-_(/;[O_gj$S+<ud4qWLY-;Ls4"NG14@C%!>@pf9\DHW"b)2,^5^?!cr"U=fVO>4\iSPHmT`\&7\h%$!)tfn-9_QjFiXiHTUK##A^o(K@C/t38UW"c]CP#kQ7OmRL-f]t?)#C[%`B]sSPZ:U%WY%UHP2to7U%jhFA:iQ/S:3"12H"SU4Nca+5W+$.%riWE2Gd#`,+1-!o<&Xq!c9:;I!)qN1Fd^7Ea[!c;;O$ZosS97%HH,V)8oG,?1Gm<.2#GR:fGVfq!l?K(q7(=S-/AN>Fg-D:-Km_7cm2Aa)$DCX;C2&r8A5t>G.ijVC)s!';VneT[rGOb:P4W%!QNdZ%.$C?tFXKY5<fSo(=-!rNgY3gTkKja"RgsPc0eVT?7;Cu#G+10^H&:e9#o0((-jGW6'6=LX*.*VjK.uThNM'Hc6'_]Ih`1h0fVD9Z%S(j`'Z;g?<]*6lnd#A**i[j&&#dZPTUP2BN#[d[-auWq+c,dK,`[.%XW^i>bOmb#&nJf<j_kP.EP2BH:T#@k%`XO#&(pY4"'$sH&%[b!CsI^ps!K`MYabWjc]on\R;.9JhA$^;lhU+X':ZTL;'dHAnHG#Mp8X/?\K:89G1/>8#"15p@aPBpIc*0h>!3@G#a_&8lVos4/B%bbW%VmE,uVbG2lYJii0M1I2%q%-3jD(A!\hEasn2Z,B?oZRj-J7;#*d5,i)^]n`C;k,e1mg,K\063G%X8;gr=&&[:L'kIE[8LcSK%5FV^U<(H%1iVL24"j/Q,H",^&V7C=[_'P3.'7>#Q=CZ`_4DD(gQ7S@!gn5T0)%d67(2FeGal'n^+ksI?ls&b[S&_1Sk2jk\DI6<]%6N+RP8.E1N[50Yd24Vq"dlO[g)qH(BopAIPp0K,[Qe(gtJiLZq<Wt5Tmna_j"hPB$Y,]$@R(=%O!e!nlZ9s`(GJ+uhRtktAO6`;$%gNEi]K">U)OW&E'rj/0"ag[d.iTtlo8/p(h](M00VY4;.]U.1A7".Q\)G(DHZVOIo4!gB@[U(XM)7Ngt;?[.h?Q>.^NiPM_S3';X%ULI@AWuLf`MCseTpiI@k3mr?A0T4b'j'X9H*8fI`$Y&^uXB[hAl<u+!-g:egbhuY:&bE+Ec]"+;m6n7CC.q+N*]:e_af6j&Iu$,q%KAArk8nRGc5kmfO,#YPe3,H)(&KKi3VT>,7V"2OUN:GZJKcu11C3o$%%+(8o;%&H9*$T0T?JAX*B6HG+/\`RDo<kfpTl)(0Bq+bH%W+qog(u1)qX.i_l/*7qH>pcgs*)!9)m9QmiY%doi[;-*8%64DcmgTpOGlg[^S>@!TB"Si)0b[eo,6XG)Pu%Wc82_fiqKW89)RHH\%7Fk=rVHk-Q26_!?1F4)5[ZVpfoGY.?85Zbu\ahf+RnCY;N#-'\<5g2[BZO!gV-ZsH@b#M8KaEa@T#i[!N%)0cT+3AQ"PuSE=WTg$%&Y^ndT^=Fs/5q@=?Q"fl+VP\(7%m-6)KeHk!i?>]]I]F`9$]>=;*h]UNMX_B@V4!o<t%P*'a-9Xg&Hpa&/-uRR1BXZd0JAHQUqRa%+e4Uq+-)ufCCDc9_DdeG\B)hq:[*OIXE4LdRi[h=T_6ZE:_A\''T6bV/H@"7/AA]'\E,@Oo_&H$rT!qe%,!_R"J@[>kT96XY\8_c%54#jGUQ,;I622I:[EV+*A6IoAR:j54Jg%*9a:_Jr\5s5P$D05E;B[F+H2pgAVh2_V@`e?Z]5_tmjD/Uh.%nC%T\^W^+`(Fa#U:@q%/mDW1Oh!u5251WuA^HEuLi!TA!"?HnCNHTdnW,5'%9OWAoXMEO3XDFXJQ$D&.cF(2Nl#fjBIV@"$:Il^$Z]gjA]2!d@-UC]KR?E>%a`kE;@Ui5AL2!STCjCm25%b&=2Cp?Fp=<`470b#Oi!j+[D7i[#i<s\V%Uu%8+h`&)r`m&tNMGgo,928\12J/$#DZ+STV*+-7Ohg6%q_5*W`b13P^u]CSg:0b;Y_(]@R>I*)?pM/c.O8LWG/uS[0PFCf(t6VTl`4JglZ9`eRI/fI%(Z5>)KsTMS#5CR_N[9F^3>?O$o1Tq%An/N"XNmd<?>$s<fC_OdN!+n6J8sIQZAAC;@kV!.h/L\j'/W0CNf#g<<m4.d@5dl6H^.AI6^)=*CQg;S&lVK,--Q[:pYJ#1,hoOM%fnPb0[GK*.&+[<'aAA%Z7BpZlKj/<]Qo=(HoBMs1V>n,H<2<*o@84$KZan]EX*j1LS7LqfSRg\*%uY@/8h7@,*E"1f0dkY3eJZoo%l`BjO\t7!)P(i@D8YugAGubO,bid6j6d20j8doVY(D*HJGc;l^L2:(3oWX**26"%F!G7V/e[n=2"SH?Yg4CcOfa)RXr(,GH_iiHH%DB=Ed@G@u:`7:GF6=C^<_dI!`7.=0CR-(5R2l;G2qKd"8MZ37YfA7HUA%5hb7UP61N_`X=Y`4J[IQAn!r,h6I(,qVJ1d+Bh),QtJ%#Qn$V+qoFJH#/k\!R(mb/RcLt-2,d!7lUY)n>BHnI2q(:_V"a%lR:n/f'J8K6M/i=!t:sR*)m/tQ`LqucYVIGMHlS<-+_WYh.T*?%3mh-V<ZJ[CmLYE;HKd+aMr[c&9Zq0OgbJtmPo4g?cX7*P*ubd%'AX(Ye<ea8#-\U@5>s*m'nL894/C*9@s%uCJ)Qi\+TBJ5.\g?$%<]q^c+`"i/=B7`*npYR%%#dn12''/QABq%]+U2UlaoJZQYh8\$\k+%90ZjMfO4oE\Nq<Mi"9qtqK?"2P#`4b>2&qks%OC'5h''\O%E$0q@.#RkA(u<QAG>LD<ha/96!U'lT;/'n"NL9.nXl3^n<)f7*rNIHh=ejB>6HhuW9mIclZGHCnV8H)a+^]&nLn08q..YJ^@YZ+]%F=oa\-N$sq/A+A)VNdgV#\ZVN<'[C(YhKX6*#PFi'Vrfb2_lRN<kW^h'nig4j-qX@".MEAh!"&E68G*LgZ.h!Z7du5^&]!dc0h(.%-<]QWU!/JZJk5t>Q*^E%&c8r0(TaaldAeG3/FlfII>$-Z2bn:"]QCuog+>fSMh]+mi9mHe]jV:`QgosnYYd'VotCR?hV&ML\@Re@%KT;.tjBCYFa\AntL=kOkapM1(H1P./N:l#h]9h%?7!c4:<HNs90_@+PR$VO'RUg"d@lT-U[;.-g&3%S)QRS!$aifo;FGJNU[3496%%!,m[%BFSck7+[>Ge'-6HF^Hj=m'YIHYHb],Zq1^m8JbKQ51dJDAJP:fSpa.Tdgh>q_YIu=(6?F6Vn\heo->3#HJ#B=SPp+/\s`h%+,+dF?oMQ%mo:p3]S4eR@W?0EKWbMrc&/?<QgQOG4C.FFAd-^_ZnWD<oj]lG`gP3YdTSEtb6m^;GE:Bng0lnj>E<JfXnOmB]tCKq%19B@@NE6C"<HnO\[u08sfSp^U2-(-AXHkCY*`A&$Q(Wko\MT;s=2giq[*CVtMfhYH&.3H#6S4Zh(O6p'b<`DPX`F_d"P6;ab"-G6%B(IIB[lNoRFZkj0jdHdb5E,P<(e)/>0qHmqNDM;OE[tU888!"b.Y]:@r5-TrII"-DAY\p)Np/HVJm@,6$[*blb@PN^^:*)`G5t,5%^P5$cTJm,+fp&)_N;'WhT#e,&6Mm1#?Fk>cPo'0a=&dPlp't^*obC08>T!@]8EG^$JLXV7<^!jipeICO.@&oK"hPAioB:W^115YF%(<j@\HGhpP%FSa(4iGc<Y&AB>\If[!FT\b[1\`7b&mlS%R\"Lm[<%B;XOlMUNUt^gRS<%Z9R&4ilVVp"Xhq<a-j6CmODA?:.Aplr%(uG@O5`K$NCFSRC59rlD(JMS;Q9P\ZeA=%ohVY7%pA-*$M*Q>p*/O>;(/2JJ/`\Kdq,mHU;dPcEQ#T8_A*"i!.J5\DG.;"n?fIBJ%)56%66fJL)rt7WA1Yl%U%'?b9(9%.-U;M+%F69E/`;2S#Q/?G.:N,=O=D%Lc9?jZ-<86dQ#tGRE.-PdPP_K55DoKjP)=-U[h;-@s%lZ!gT_h<nVqM\(-LQM'WYm7P6Flo_j2%i=W=0.FD&PT].XXTQqJ\cO6X.M+a;ll77RVN2Qe6OB;n3IK]C/Z-TZ]WmRgG*ITTahl$%Gskb0#"?]^QJ*S'H4#L#XCZnD0pbqPGM"j<WDEg#!M^W#@ZBlN*\]TVr;^553n<&M<=XkfG0shI6F&j4+i+A5,X8ne-J[c=clAp/%opfk[W,Tt]B;2ka;)$Ks=P"2elJ,#\%>%Y@X$WMGM0t6c1HcNXV^f\f'hOYm18W>"PFRC<>?"Gdemn#VC9ID.icKAh0]_LhC=nM)%^!$VOf$`'sg:7GJ!o9CVZ]X*jN72KhQPglUFZkj/Ul$;,5quRP)>PNjZW1?Y(@VcRDaCt]-4U8S%,c\#koc:\EW+)gm]XsB^X6da%6*K]8j0+5hr'n(9LQmQoW!oWu;od\>l["qtAj<>,)5BTF\OXm%)AE00+FSu#A&Um6/2"4#D1?'cPd3.M)bGh$'H8;unFBeG1(OU!%nu0$XO=cL]WB@9[IH;#c?$!bP@]ZO,32?k_67D<=\A#ps/g-`,;,dQN]o2DdD*(U,Zlt1.VT$u;:o?^^A3i%0_eDu#%*6@r6O`EP%Q1uONq\s#^P[@`>b]fToe_WaI;#@j2WC#A%_77k?aehrZWM)Mrrmki>:8RA;Gd#cPCG-E9&ou>#-4(k^Y7)KpqTU=O.O:5'@Q>F,%/;r:o810;!Qj";(7<d?s.=PADLhZo6]`u:d\8G7EN&_Fq(C*Bh4!LKh]b+Eq22fqJppMO_GTgQ4Bk0Jrk/h2)9djY@@%'j4(9qOV%e&#SKS3i0<k$^(]l1!eaEa;i71@CW=g.bF3+Y5p1\7D3,\9&JX$nGILqd94A&;?&cCAdqSrr2K_*FHZC]`%5O4:;+1=l+VtbI;ur%?S4S@oOn34r?%!cLS)l?$9.TJ-m8!s8cc:]OpZI+0j4SeH;?'loJpXeZojKZFQatA!bX8WGMpOZhL>!ahuE$2iD?sa1$C3Z&.a#m%;%NTodsjOJkDYM<:SCVuh!O'RW5//^W!^6W_k+Z:laKb/Hp<?TCuE@\W"$HZ_k-@jlaKb5Hp<?XK[>Rb:a,aqp6?bol_%-$h!:Y]%R7HNFT[/`JT]L7e$.eYR!X5rYN^?#Ro+NAVB4ALQnXYdmGS*/0YM_kI(r:e?nRE7@?Gqne/9hak6F1VX[@\]&7_dk-r"oHeQgeK!%$spf3OYD"d5=WQK-2\;d_jT/k4[G)B%03"FC"QU\cnok.,=E!n'9?*%;CJ+[CZtKE9%WRWDL/*ufYA_o"2Lh5*7Sq'k0Te4d5gtF%2aRbBcVZa%jdst1L]2*nLD,5f]0]:!+!dEujhj#1nq7>Ok`H9?kS&%LC:GXEkg2gJ+oI]H.>6&\BHblG:COKq+/"?JPNfP0o7Srp%N1d).\>psIO@e*VZD3WYDEStR-A4QM1ng5]:ebVS5=7?&Ds8.NM0kC'G*6Pr'OEO*&Q)qtcV[QlQi@1+Kl&S@cr&S(F9ds9@!e=L%@?2(%W84&F@Yar!Z3l*:<k=1c'0D@Z8FUsEMu,XWaXt)Q/%roGf9RZK7>Fq'M]MWoo`_Ksc]MR^o>R5]@WZ:[`OLEr4Ha8tBVi/I%gVX>S7Yb"_NVbjYaYc-OB8ke?]$[4*G%1b@5eMZ68*UPW:QTLniLYMYr`_FHEcbukjm_J$`#O*fcVS\1rHXr2FoX[gFr:'8D$Lt#%M)u(@3-Bu\Z7#+f<1]fP3"s/QqT9\\a+ccDm=D0"8+*XiI$3>r>>.g*Hu(C,U\MV]T-F*`)EpaaTpC&"O*dM:)>sfso.pLlhgBGl%`#o]=1XmQ)S3SHd+aAbIdZEpPHmBBQ7%U%b\\!ckOGj0fMIlui58&t2IJG8_,?k[+"=-=+TccYE,72KJ&Y2a^D!7)D,hd(,TdR*^%F[o7PoGNN!aSJG*o(=1j,;6k=Nq=XTXPsms'D->k2S&]c:?YI>44k.:#^r667.#/n-U%5)m7B7r8phiT)<qmCglnAscj/c1c6R`9%kWP\0dC/QR1!8<rHpX0OV`[D8Edo5QBN23G4[Z#crt.bI(!P\uJsH4/3RY'D-BAhDgu"Z`F=_[VF+c)OSH4)+(-L\-U6`E(g^/Ce%*qD:AbM?g$d(4>_jF$)c;S-<[*QVLh5""e5Q90\bqsunt^3"$7IbCD*:qr[bOo.Z31\<>8\L2q'7X$p;L?[&W%C8EO2E?^c[AScl%q?0*C)X]%`^+o)H:rdZk+ck<-&(&@ijcMetkee)iRcBDrk5It9;Tj<lOj!+<#O#_UO$1=<ct=b=9NjN@RJZm7Oa>$BNI5>nrbVEK%.IoP%)LtU\d&>opK]]uuE1j)EM>%uMNPDV\7SfeFH\.^`kLbp*7]Z4hiYn@^:Jf[$P'J=Vq<D);;qf;`Yp6Xgp^F9aS[(=d)im0N%D<&[laDHSo6Z8`R\L4oOd"a#ec=Hc?=N(U>%FF:ZDsk@$'1s6-jV^sdqj[#9.]5Wa=\a`97$e"(jZ12JDiX`/,+T4G<''bbHmIA/%cq:S7`ERY0`&dsZe3!CVi<M[j%ou;o0DunQU7Mjs<';8u&6Y&0ih!;CkVIlTC:U8/\\HZ8M0q@k;YbFu6Y&BXfC.pNKK_ceK9f#"%T5PFU'<3/M^@l)%5bFeJ;8YQUcOPARnu!FK-2eGP%.+R/*f5A-oF^A\1RW\2=)gP6,`QP7$hVuH]dF3Qd%A_'O[Q-8^[L,P0(d%W%cdE4"nC)F]6h^[YNjM/<r:D9)d+7\Hl6/:[@Ig+qI.qt[,)P[n;PLc63M@o(H6b$;at\=-CN)ULo[US.;]G])di#^Dr>lH58!q5W%o]W=eP!'PC-F"d_qJ$.[MBn6`P,.OJ)@tn#5Q(.!IF;3VhN98gI"k\d)a3J>DWuqK:'d3#>SoO@-D3jQVQX=LSt=(#h%;L"?PuAf%-G>R*ERRuDEI0aE%fO+s':Pg/X[GtZHT9G<F_E(OqVDCd-\_^!'K)+STdRpTmU*PdPYj]<,E7l#oaG]e2ib6iSWj@0Tp,d(Tp1]P%I8;?cPr!8Q2<E4T2YG>;3$FssHDI59qA^*4>4/AgKK_amV,?^GW.[?%87b]_.B*;26V;JJdVf4s:?\\hJ8lj9!r<mJ'j;YMX+WZ(%>@fI17pL1TZ(99FH*e/eh=';nF61e=FS5<Y59mt,'_W5C5bB7:69NJ51g&Z%5Y$,O%p":`Dnbu[i[g`ml7AT(O_:ZPSj$qFrd4dL%DTnA49B[$7>'N2#)QaKtKLkE&U>LFh-PTe@]s*Z9h7'O/WOG"DaLCSd:a_K4*c7]XGC);IFZH[hFa`jE*_F#QGs"[YF]V`ojBd)i%:XON;rK3\uIVn"a`*YP-StQ'\_`dhI2uCGu.2ZUf*%fhA2fU)N_tWX7?._*jjcN$VK7uk_]+EjE_:\HF:FO555".5]1[-ogZ#,Ru%&rg`[T;3C;/$9Ne18,4WOJ1?K,\6WSGGHPfq@ksCf'k\GZL((F8Po-*69cVG47OXGUAm7EZ7iEX4%_<8VEI4[#34$NZt=RFF2V\b%c)+"BZQFXBP47i(4m%\/%Hr?M:#Ig<B_pT[FD)]k#U*A1k":K-n*Coi1pu,fU@$;4LsaLYH=&$],>?SSYbt/.q?1N$hV=,LXTKXh%:@#o)WRJ4m5!bd;L-,7=*V]Vcg6k@Ddtl>Kea/COOfJM2Na>F3pB5:+c\s+9RR\=e>),:0]k3G]Og!Tk[neF*TKG>,ap-td)-XJN%h(uuc)#dI`ChNA=i`juK3[&>BqAaA,h%arsjsK=T60It7&V!:A-Gf&*hS-aAm0V]3Zr4\^kT_?l1/[FQi07%0$k_8R]$C[KS4=Me%gt`pk$#pqSq\42.h1qL3b/s)G"Jm)-G9iH;<T+g!\bh"CP0F#UNc%Ueh@n1Ce5&reh7m>=M<I(UW9Ct,U@&<P*7u\)^,)i4WTuZM%am2"W+o47,4;-:\ofk`N#IDU9`9sdmNmr7)1(NAg!hZ-plQ/n0m_7?`Nl6,^=K1aMoHEce[G96g$%7O.cW^#VG[Cc*:Q3o!Po=Rr%5!Y-@]4Xp#-h%Fo4>knkjPA^4Nl65!(L=$3^,'=@.J7N+gl^l9UOS#!:G)=ZH9:a"C;"N7Q)MnbSgWape8e?hf:`^Pm%$`@Meo^5%l94cY,i@)JI>32H/b]Bq47iO\^2DI"%6R5"LR(FS^(,RIMXO6=?bM"87A%;u4\;9mB5%,uQT\4'%Xil-Y8_WY#+hUU;p.=4?\^g5%flndn0AaKqb0OR_bc_6nT_!frkt("coGL7c[G6uBh,!i2;Z1`O-2[#TLZn^kU*JXS%mN3Mq59O*d_G7a#Wje,%ota,*diJL:l`RZ%-(qo.c]A3s?Z\dGps"A865R.!NG`Zi5!U"\_bXp@JatKX6Q;tiHfDiQbOpN`E/1k>5"R2ZQ:Fh=U!M'mCAI=T"i#%ASe)CSoWkA7%r6d72,9lL$8k&N7<VrTA2I%V"P!YkgckN59JZ)E'1K9'AGpFoqTg,0P&.O\RKgME)/4@B#C#M!oUD#CMO#B&:].`c/jKM!%c/JWB%SKmqRd-'U'mi1;IUkj9<OVUeK5S"MQhA=P$0%%OpG(b_HHT9G%DEXL$.=V$1*=3M+*kA%JPdm;.=k%Z/VciB5#Da/oQn-]2^h:_(%+ikna@Y[-6\9K@H0C6t37#YIGNEjiRr\6/t0BG[DfV&ff13PITP`/B8O-)2D8N0hm%Xj"tnP#h;HBCrN)tbNE8K3@I6edE_8'["\%Je!ipN^/YiN^B?]F[XCtXlBn>JCq+GFes92m%5GF<6IG<ispKfi:0L@hgD%Xi^]Y3l:7PoO?]c,T)N_brd4c<5NkQ;WR(/B&kFn8%dm3?J#DaMKAGV#X:C&/@$10/cKg%j:WKqn"a;t*W;5>:VUP]c^3*@MsGR(fN%mEAuGp^r-GK1qnUjrF%/!X`]PLf2_AFb0[#O4kc%2Y+uY,%_=\P`XsgQ;Zo[`0=q[TVgLq&!0`d+hPgJ-OD9QE(<d9"+NL+jbYt3>tHF9Pn;6'_"-o?4JB0i.$,ISjo$6\FI,1#U_-p^%e\ds_Z]"^Z7%!^q37;;?N6mS-o.)ifBeq?XAOi9d1O?!ARWq1i6I"tGBJc4BiBXdG<<kV^9sd+rE.6>d:WnS)Nl7I^Y>@a#:=D=L%KUlKCYbUaDgG$@5_h$ZCMLJ@jq,Q`DmACHH4n7^%'%kT_g4m9c"T;qJ4Wt/t@_JZH[H%,jZ;<V<HFcoT+"%KIR.li=6D#A0207*(%2RF<P*[_F\'BrSEdZI@*$[GMsCA5*U8O[JrltAh3kg(UlmD`D17:d9\Jm;7ap[k1Ao]HmHSk8RgoT-qc_B,Tr7D!3R8($`RqGB+t%R"4fgkHC\f-RKT%3&N-#gJd1/5Q(-n4fJY^"@4IT5"AIrf,T*'>UoAcl;G!9S@hhLJ!@ZH/,F5ee$;FaUG0A7]d'd2cm,rtcmQn/%ooL3-WPBke:*28.R1nb:qU?k&,<rjpV?8-E<cUunqMY[BN%XdYT?[^@^WWN>&ug2a;5rF<kKj/,1@Dr-]DU?s?&#i'g]$r>\,Z51%hT!$SH/"@e[srlpG/gD6r9X[L##NqeoiBYf:g-g,R()b(S.QO%6S9]7'>UXnHADat(+1=Hda\Zg1b(ut$sF.`\kkCP((F3&*.fS?%g;4atq\\QU*!UUq(s-U'I;4I0J>B)qMO=NS!TL47<a%t(]GW1`X/a%/!$]0U<!SZli6D>e"gu/3Kb_gQ&7<G#VMK\Q(#e,VJ:$Q(%W9[<(+KYS$Va(4++9)&e^UsL8GQ7O:J,I36]`#eRrF,nTdWVkpo'ObQr8SlJp\Y!ap5?]^X5@0cs7Z84s8'cc`(tmYp7Jc8roNjg%$_GI&ISP$^J[Ai^cBM]8j%CGJ/?EiR'Zp.?kqG4N9s8opTS-*).rr+;(c\!/h/BKBfS$Q,.I(?0F_D\ZE2O[_pTQQ^W;&8(`Ibf&%@E<n..'e2e@5!*IJp]?F/D@uKp@<uUh_pCGpkKUNoab8/Pd>_&TU.kmNPFUme9te9iT,ITK9fE?gHE]`Q[N;D*_+kW:"SOM-kNi*%R4biN=U@Do+D6W6X/sRE8;"4i/9kH^X8>j(p7bFE3,`;qE7Eht7jTA@@M\<"N8_GbA%a);?j"e+GXFOq&\ZdhK,B!EPccJO!`"a/%GnFC&6:&7$$MLKda8"qmcRR6tdPu'oN\rUbJW_d'+bs13D3,Kj0OU""]^u?%/'IW.Sp*=8_okg%dW(_Om/"hT3H!j/b-4b(CKY81%=?AaXKFVI5;b9>"5i+`oH8:5A:Cc/C_ihXRJaYf"f//[2/:5=(q74bi#OFJV)&p>GrSt%.6[7/:i)1]l2GD`'Nja\Eb.PC[(b6e,%=WL0f*'kPGKF,p=JZai%kX07?NS#Anj4Y-6n#YnZHZob9JA*M!=OQX"+fN\JHL75jX&2M_6RW5O.RPf?N>QBs>t`\&M>Gc.5UcoC%niI$<3n*+rZ9-uFK!0df^Ztk`*O[?ui`3V<iOsVb/F!FaEu6/c:aiR6kX'hC%u`3):*EDe*!Y&m7LN_i'RhXJ:E\+9,0_RAfHh0p%=j7/SJ;-nu@icuq,K<"sQ"]1gX6`9Yi4(*t[3eGn3MS($S`q]E_Wp0[3P^KqX'!-TN(sX9jT#agAk4?o[#bPD'I*aC(G4d?$tY,K%Af%km8U^t[08Mq\*U&>BgIQ4;\X0[ARE8CCd\%!(MDFi)R)4R5-mV\X(BjD_<bl6%c1bdbX+$;/k2]*8n!=3)fu$G&oGGQX?c[u8%;O%:Y/[FND"iQ7sFUhnT4?jej9c5U>c3DeS/6a\Z7EC4_LctjF03(\-PKMspQA[5Y]A=P`g8_*5NV(e3g\7XpgcDnrbmhLNlbs=`%0MTqA<*ME:=RUTN>u)a@qSUMeNU>8,S=K!e\Ik9%hHV`W$'i;VODDEpntZen@ULor(_P>-bj&lTURV^+F35%$!"m$0NUOJe3b$&C%>oSr_(PRNXk8rRnY*Xm.l+C];lV(L#G6%fq*-]GVTU1)K=GXTtL(ZbO\L!$Epe.KrYR:<WA$[XKhKk,%1m2(LFu]%)_dk=Sn4cp$%::$<-p*rY-)AB,TdNCH3n?TsQY^5mX.[f3WL+*W)Ud/T[!tnI3',=:f"$BCFLN*JGE#M];ZI%?YV2&;?/?"KJ'@JL`M%]!]=MtH?%]uP05Ce%uC`D^ba0L6$dN8%D7&,f1^,Ueg(D\KM6J:%de]`F6X%7Fk4OD'](:^ItA3(-^L*\!u!Dj(DR?tH&<Q9Gf>f8fJ5,1N*@%/\hE^kH%WC$/$$,U_%@(?D?ee,2cm$:YQjIBFuTpJtQ)"FH%d@`BmF@76nR#A#2X/HjAI:Tp\b9("m3.h1L)2Lk),*lPqb^7`@7=%!!]RM2Tj7$:(U^%Mi*9u/nMb-M1cLEV#l>D,U^52`JYBs/uk"A(h^sbgSMUk@ON=(?5?*28H)KD.$;G*<F.b[m@l\VeYP"Z8=DdY%;AKflp8EgX/_Vr^GL&*RGHd><mTgTaYKN3<H)iR/D,lWs^Mdm0N,6\,q`KINf"-ou!W1K4O6qYU.j>=Z,rd*?#[]?eD6TH`5JN>)%4VRrjE4Y!)_f^$*<j;bbo:sFF+\=>->=0,m[6-";>E;4o*M(B0J;PC=V?9.0HptKXE3Va7VMa2cO_NXZSDXUm^3>?O%-gL<0T*"/%<SMgdOu?PoAO)m)k`CVqgucP*d_%i]8VeXekAYu(Ic6^'W['>`)j)D>!XVOrptUUuZ"*%X-f[UH/u6\0Qeb(a_DRHfC(ZNeB>`YK%airmecn)b=+O!\/7jI<Z!f9J+'/FW7C`A0b8A`J<*]$5dii"/hPc2AG)Be)F+@:Z40`R+05)?K+2Q2I6IVQf_L(9.G(DYeXPl_k"%,i!>I:h^8eXXf5JZsk[l(5P;LOIe81aDW;36,d1/YethQ?JU+7B+7m.fMASV07Oh!&(Q/C%kH9?'f8>@ZC"K(gS_rN'o?_%6Vu-T%=dd"@"<<d7=Jcdj%6721o[[`$h003;+'![WSS"C?gBbV216,OS4@lpl,%h(_Dul]W%&3o;Q'J7UT`E_;Q8m/h!=XS'4YSYB6i;N:%b[=hF4^o!iINosD+Lq!4aYZ4U`ZK7H('e^Y$`WLo9T+=JTWiA8Gg1==1^lB]3h8Ak.hWBR:"WmP/9<Y0R1-Jo_43>13%2#qK&;$K%P6hS=Ge$m'7e!)i4UnJYg5eUuHD"5rGES;,g,c"PMa:b"b!jt.0>h,(lKbcW-,t/T1@/RbAa(%20nI;qlgkMVqIecVR-3m?#/0M/%o'-?.guP&,TU.elk]k,A(g#RTnLRPp($oLi"(%2$g':8()CEXXXbsg]@JtDQLLhKoL:uq^86UNr5GJeMXED:VNa'J/p9=Mpn]Au*%&4_Mhn/)P7!6`"8/7[(ND@X#$rbug1ar&P(eA(c/DXGV@%1*i3D9'k"k\'"l'17:JLX;(ERp#FqqhBZ^,Td\pq(.bu%,E<RLFbPo%IIWdLh$t,*,R"Cl;C+TVZ=oI21-<eLH8=Ls=no?G,HV)[;ddL6$jB)$4"6VL=d?m^"I2W'm6KYhk>s)5OBdML(5Me2j?@+FX7dFJ%O5VC8DTb(FZlUpg>AQ:)*fsh8GE,,2Y;)(l:Wc#]/qOc"5n?:iH+V.3O:,0J1Drbt)49o^=OV45_<nO&p8nd%[1-I)\^CfiYqFWE%`'6fr8YNOKN^3F"g6oK$`,#HQ`>Xn]*bIsUd$kf49onTMBmN8"FKHBR"cSFciFe1&P$oXKE4*hg9STC:H<dO-!:=%1V$7Z=0>R74%HB#"1>CV8F@bU9c2[-/kHbVCrQCfE,)Kl8L$179UBbf;B=,,4R<Mr`A3_\sf1>s$ujV'YP<dm<g\UtVsq0AVhLBSA0..rhL]#SmJ%8^e60F&5&Hqc,p9^OUi@-Po/>)Q`],X#biK;&4;AgNSt!3WHt"Wf7=N_j+@j.)NB?0tC^&$*8"4RL-bK7M36Y]&-J[FE;]Zoje%U%IDLON"bhYQAXj\I>eqD:9ep:WL&b^W-;>X.MesVDQ=l;i=WK9,[oY<JHp!$$L&rlA=aNYqOsIuc0Z_UdF^p,rFVnKJ]f^_^q[MLa%ce:;AUsIS+hLBRD=XJ#;jJ&&A"I>"1N15Tr[>i3<XGfUG/F?L]Q,uT>Vs%k6ijOet+YbZ?<?l$MYide1gO4s6k[d?uWP9o-T>2t.%PHrFd>NF@n^.%CL%'RYX>ZTQA=>r.>Zd/L=AXY<k6"UVnHOC4,TQDn=fT:b-Wk^+qX^G+@>\kW8(op!gUa%>n``WQ1-u_0P"2+t(%5$A2RR"K^)*MRn+L%*rd5]u\NW/.A*3K<rYCm6(K=h*N".2u$]4MTAUO/%o<o2Jg*P>EXf;ZukQ<a7oZ!gm626T<1-%O.H`UiTrB%[5(aj;ZSA<CtlTSZ*\;lAjLt1@FBW\#90`@9iT2BI`3*,DJZCe"c.!0@c\FH2Au<)r!f_PY?Ko>oZ;"s%WuVU%GPD,L6p`2?q$]O%WIaA#0)72*DAe*sm;tGIO`VKi1qMc(nsYg5nuCB$;_`<iM'U.:]ZHoOLj'#eO(06UN+sXe'5(<R(e^n:N?APM0JgXPlTJ[acJ.1K%D*aiuPg+io"39419=u/5O:X.NW?s%cL3cW(!8?"KKPP=O@17=`lGjK;b(9BB^dq';_4DTQBOQLV*F(C?gX%,X@RJ6E?sO=gc2$>5%nl&l=@i/)4Dc)Vg[Y]O(TKo^7XAR%`V"hBKH>6:g*GW2q;-3+L]CiIc*%)p=FCGY5S>E<`+.:Bk8fZVDZ-a,PJp,`4p8MCFmDf<R%T@"=1V'@FEBf4YfgeQT`C@rcGAHi8Fn=i%9#bi@_#ps!8&Wh?G&Ti_QFJ1uRIDI&!h0.`_#,R/:iclLHULKa)i.'9-?<6o,,7(&T%hrif-KFe_]gE:]ce[#nSRqrU&*Q$$pXjCt,,STDWI[qapSESC,n\BtfR+q3D\I%DLQtOqffbQk/@filG8b20p3;2D+"cQq"7)C\r%Z7]]MUf@q-*7gH[jnV/0$cP6L!?ts7]dKZlN$GP'd*o'=0M$`)rh',`#=KNL4=RQ3A\/9^>rO3B(9C6,2901$GZ]8tLf[^_A=eU]%.>DASA+>]&3/[B?<b8tT7J3Mo3<*(%&oQ^r0EO)Dn9GZ_!Y42n'Yu:E!jRATNF(O>afj0kB6)r67;%@CI+a=&icjqMjZ$@4q=p;\%b!EeeDU%0aY1W+C]>lh4\RA=@"t2(HVWb7s]gGU)7$304j+LaIm!'b.%9*ku$3q4lK"hY7j&D>Ol-0B`P"fDN"hDjpg``UV(qK#j%/1TH>Q19rGf#7cd9J`_Oc)>W;B3,N+7hb>C'ga/bNLu=-G%T&A)3kJb9W!\uWU>Jn7gQ6<;%harcdBbW8>(jrLs;mR;_cR84)H-^%-G$b&)7+M"1h_@&Bo`d^/rabq"Y5aajTh%c_9^qHR'\It:pOP4Ql*_a7B78X-_\oh$'?%GJe[("l_VM?0R;uh;&7J+8,%VILJ7`+%Z;)lYhe%&YNR3o`FVP>+G4,^=o+'^je5aI)3d>_u#V-b\@E'AmKI#lj)*p]iaHcWCbrHMcjiML%Q?7Bi&B4/(U["e'IIctTOj^;<%Z(q;uLF"W\]NV5PQ&H,gS(8dY%)dtsl=FeaNE6uu];QPX7LB3"F"i7`<CF\TMY0A+'A1<2rCV1(**&#WK<g0bMPWlj#Au[_UAd0M%8E1=h*j5;=[%%Q?cni&OYsPWV3XXD:N)jX",=`6hG1]j^7Z=`D.`PR_BUH="%&j0Q+Uedm?5ePZ`AmU0*^bK!"tGko&ILD2#Z\oA%&G3BQpf"GaXZ_=<Kr#SP_-[$nXd:U05qL@kJu)8(0p8#XEY,c6k$W>:@4<)P8HuKE9,*P$/XT8Q^su#b'3L2a@%Be3@:3VH7GnVf%"K'(5Ee<[&6<$u'8mj#UrKfJU#\h[J:("f^`k2^E^Gq68KJU?68E!Pt2m$S1baEQS=M+u_j)STaG(BY?&HdQGH62"\UIAiu<4(o7%@n<n4hd"ck'$K)%%Cu29pSI+e+c5Ul-GN,2_hKo<@&+.t0mMm_Yhh&m8W(HbV$SOX,+srb&i<Cb`Ekp"Lo]&MGK@5+TY-D1!b(Tk%CBo]rO%$AslH&L8Yj;?]9,_Yi1$>'/%-q+V4f14[k'K7R_93U\l^2\S>$Vet:+E-%GF<,SbU";n,G[X3M\nKc`FW_j<?VbeWI[IB%*>Y'r?$f(X204`B(^f8V:p?9-*OGOHj(L)=M@\_t.X'9YK^b+]!MPp"jK"\05Rr^0"B(r>erQIAl*&97lPTY57@mG+HpL^?LoG;-%H_JtN,;4:#IpoO0fOQnB#gHZF7@9K:Es4oT$r/>>1BdkII`(QN.\H#<W9_#p2[fq0R]S6\[^.YqNRcm29>_QMa&%jJ(BuauMS2V*%-+beP@,TKNQ!uWtnaTZHAIh-P.C9fcS/B5jM^W\s!klgNMbD5O#qh]0lV>"(Le[8PfIQET1\0h,:'B,t-ILA&Dil]B0j,Xq5aFW:%?!.:3p3%EX9Us;0$Wc:NC0mu0"YP?Nn'qlbGD/]J94]fX<$C%2dLnTsDS988`<kL=1KFOX&BO'fl^`]'>_E:6ma\8k%B@^2Ts$a5%['&L5PD\\^+WSDmdUCR1*0_/njuQ9Fb&]p(jEbf52,$rU$.Y>ad^Ah?[&un"^?C4R,M>&FPLj-"LWYPFQpc]k.HC6)GepFT9:(,_%l.>MHVuFX\75h^nP@X<.0?,1.`Ajs3QjQj@e]t4?lO_d.BgZ_jVG4"rCm-Kbn"k.i$Li`];Yh#'/;ApM/;G8iPi+o(gAd7,EQH!;%o'79$S#kdac=T5$4/HDjO"Mu1fjX3279$^I$B8A9N"%E_NhrW'^l-+;$tAh/fT"NO`OE9\N%T\L@0BoChANJF;bJQ7`^7pC.K]]P%f%?YT9gR%cclb(u$*[i_Fn(/G!&XQ`Z?;r9`NVau.4Z05Zjj/KL=NP:$dt.U!-\EEDhYt,0LZ/YWLkK97eZ@df96fZC-PnLhonc@%V9Z=uUrj+jQLtN%;1_`Y5cc<SFO^h.&t20!!DD0B_e<t5?)iQOPGRjgjh"Tco5dBccI/q`WP_OPTiB7"3/Tou!"=4N&S9E)[LXT=%&T#NDU,39)81#>\gLA'5[u(BOWQ5H"[fq>j3J)sjq\>:C7c.&DltL-5TP2l1=uWe<.;]SO"O64nlEBKWCJXiL>u)gFZ7@M)gK34'%i]sLDLERuLf<'$m\iju,.)X7SWHE$-Wns`7CASSMXjPX$40"*"mWrkT<6C<gBiZ+&p:.Z_'l[Y45AK42*?Aa94dki`6lD5ebf&O%%0?&l%CfO6Lc!``\7N&<a9IrGL5kli>,$)#uLuc2H3]-1mfl8XPiCFX,i]=86)1k7oQjr`NZ#(d_C<4,u^T!I,!>OU@B`frS9\l.4%D:uj8I33!B4d"VPUUq$UYhu0Ob6u_L0Ctd"Nkq3QVs[\=TXNLX@8Qmp[f0p2'"#[\=]1ckN^dj#Pp&u?.[UfG<7Ie2XM3Lol?1Xk%/#!';VmR94+u/9(k$L0h0g7(5[:)*A?`(G<nWFcP;9:"37P!t1Yh-Wl=A9M\&gmf!9auI"WB,u/D&_._R5MVk$hhG=[]/_j6l)*J%C<hCfLLIAK_GP]Mf:$h6dJjqKJ;B*RJJ]p-W]MU?Td"51W;L>Fi!:3FIra29BSQ6!'-n=DgZ,e]VqC<Q<RL(J+t>[Yn2g]/'t@2H%)mLj2fJ"En:'74oJ0%9CPT.Q'Q*)U&LST[UH&u1BNBi#IS6,G(a^q?mXu'oIE)^,$%N.ZLil%6l>!k'NY#$Lf$>G#DeNmi5X@7E6%#flk@`t8,?>=F=0"rp0=-bIGiMk:Mobmh3=!/[kA!o4QS1^pWt9]os6U!e4AE!YaO0H9;Za-aU!H=''Ne:q@]oNiK9@@En7a08;s%m//96l\PaOF_bJ9-Y.!8=YK8jcs\B)[+@-.P]$Q=Zm_W"M%GI\>u_1]f@5U5LlK#U2e(O]j"NmdnhO>DY(,3tY87^hQo>8TLr_K]%f(">AL&&tVh@PCLg+WublteGbAY!c,I4qScM=b-I>2\XKa16OK*\4Fj@4"$7.oD1D&M>o3&=2al?sD51cs@(gfpQulC.lK(NUE>r%TY22'PrI0r,.uKP&TA[UHSoZ=mFAQMeWt@'[J.AAXsXj0WHg-IRC$drT+2c*55a.4A6sLpm"),klFu=6<h6eofK*X#80T\&\/)Du%!3=L6dB(ESnLZ3,APk/3U>Ki(fs_sF:#C8@LfM1R0TPhgZ,G])f/YSf-6Y8M6`q4a<5UO]Ro!s)-XAdj9C$mJ_&)D`93d*V%Lk29%\=:AIR)c:?-jjA;!l=pb*;F"`kCu5.Qk6M\2XEnl*+,l1,Vgk$HU5dke/,@rjflcS=^Qn,bFdleX`km])6@>HLm/R5[:5RLBB37M%XO[1^4CVg12VB3rchI]OPa+7eY_foN_%M0R.@uj(fB)7GC%d%Y?6qgc=?72"@&sfo,f:GD9/XE]_[Lnj_m5FD\q_0slA'(tKtTUh%<fcn%@G#1$dOnS*7BB$Y2Kk*hZ*+`sZWK&s+BQ;m)"p;IT)N/j*jYjBS&]-,&:f%A*0X"3%auhqgTjRq6ah!\X3-H%m)D[bW?nU"%&ROoP\%Weh"1VYWp0n=rGhA4-L=?i"4grMeE9f4n5/hAoiC;TA+cD.!XI'q.&]A^f2Jh\p`We<4L2cWohmW\WGuGYmj1KLGe*1)W%jgrj2DMU\pUGPZNZal<d?7tO@+K=[`oNl+c78!%dI*@+n:t^lIdga3OKcD9ZbZY7GMO*jEe[>j;Z[;q)r6d9'j4XA>!"0pYc7;eI%TOPlp'd'Z4Or^0kDhp?r1(S.#"h@sn5RXFqC-&b6'1;#30<=D9I'7iJ9ck2d')!au\ogpE[ZMMZr%RBNRYIoL]h(05EVk>pb+!BI%;)"fU9g;)<mbjDUb4hbsjr"q?7$,GXFfnjmpmngr=f2s:(un6JopIOu92]a0jBFViLb7,a)h4C_(6#EpZS:pnA=bgh\6as3C?IM'%WA+2jeZ2b+>Vn`XnJ<.j?&irtV'V!AX*X5rVj(#KJ]`"0mPr-AP_*@>9^mmtWa3"ABq%X\2DGY3Q>c/ZQqID*g*RQ!Y@E*MR!2cT%#t1Cp',-D'nRZLYM.oi3BcIE5kIt%m<I.V0O%B*XPR^0J9c2dL(IRW72B^'I)7H"Uh8otH!nI7$4_>=>N?LU8!j5gm;sBogk7^uM%l6r#'N^sHq-iRFDEDV;kahrQ$.NpC`D[hO;"`&I#@1HI6CNs,U-DMUnOZ3hC7#JRi3\4AZTXZR#KF7k7p:la2VN-WF5oH-Qf8(Ls%aDF9UV)LJPRV"=X[]V,gcUU3O-<;R.i,aN_'n<;J@i&6'C:i`pol!82EJtW2bS=d=g6L@"^)LM`\=Ue+G)Es]ILKpGpeFnkOn7hB%<JB$OE+FZ*fk2k&M9q&93^>uYXLhFd#SW5[i7^n5]sUg9p"^/u!FAF8Z8";n4I3pQ;EBU"((_)-&QIh;.0H[`KP@c,%I8sgh[Qh&%>YemQ42kOt@M$PE(:///.U:o:Lt[iUE?;H>\"Z8(O=@"1-mE[KbWNS=bSt*%SSZ%!L9QD;mFqX]_"CSK35<PljUnL!XlEZb%I2s]%U:%j8(?fpU;eZ]aFDL%\8T[0;j`ET'?M(XaWe95:MT7!P%2hh'4388&9k7AqDZs^\`n\6B/Cn8!/Q!m+gS+QrG=[!4'l,JB6RKIo%GnY-7JpT:rW:&3c$.Y>ad^=:[fW.#'lZS0!k^3-?H$bl!l#lAqn/(Hk:m2!k4kL;lOd(S0%iR-^HdIMpSt/1(d7)X"K8/@"hi(YJ%/j64LQ]OfVa7q--nkJYZ\7,UOKc71ZEGn&d[YSVFF,P%W"]D3`XQL#Z%:gr&lA.Fhc?2l&'45.Yc%M<`lLd;.Et8QBJ@llN\j!UU%YU8laf%^WYjO-PsK-K;TX*%E9g8HUoPbE:XpO.NS:AXHk?@ejJN.?j;]c133)j0sE>_?S\"M7:NV+YDVOOkUV23Z622WI,5qI,2(%2(&!1'I4t2IMjE;Ys+G[MDUo5#Rs3m)O&D-BG=^_9emZ9T5[7/P1a4IX@[iVWDLDcX+S?)6q_NgOQU"Qba*3eP7(tuj.mhaGJ3W.%o\1mueL$@%V@Ld=1)ldRkL]M;]:^eQLOKRrA=&"`crn6!Sls\s>.'CLOu0r#!,H>U/1dXj,A:\aYiUQQqTuMN^.[1%UL>f/X<"rE%?&41PpA2WqH0j2uVV''")`9*;/8T]NUm+^.+@;*X_A%?B@4Bt,U_dXqlO-WGRS@4Jh4R%siK86t1Ts*od98`*)amDN.\=mu^pLM<%Gd\h_2;5;O#7ciQ:ZD?e`3UHlin9@&"u[$U`?W/'Z65`uI[N'V8Akk008IcZpHfT/M;;RlX2VCm`^O,k'$LVn][0m9e<TQ1-NOE5%U?R761ZGu$dS\'lJYe_(E@gQu;MS?>9-^;cm=_`a?j)c6jJ3BjOppmkBX6:!";-26kY!.R/pRK<iZ9IIG^8'%gqSjgeT7*IQ5!oG%Yq`%#8qhW'fJjkfL<[NYK>aEGQM3A<_lNH"1#8`nKl.o`EIKF0%1IfN>WWm'8SADW53thec?:aPB8;_O[bESK!,E.AZSB@Ugm^?Z%^a(n/p<4JM@`qdU6\9Ki@mN1<Uf?_t+:QBZg=`D,I'-eQgT2%@??VFT7Q8^Uqbl7srO@5E$qC9=%)%6=M2,oqfsk.?i1=Xq,I4P!%pmZFb0_ud"FuBpr!h4?kdoC.1\99c2N-7-P>rs!p&n=WUBA'>nZSuBeg=\I?o'55gfko===m-H5g=bu5RqJ!<[]&W`c--$MMJ!T2%,\7Y8B"DQE5(\#;G^Kn<VbB4BAcq=5Rs6h,N7ktO8ol+-8aG)qZEY6dHftIbbuRcu<c#"LS_%`RrG,[a/n,C=G3m`\g,p&4)Wm5d%TU-Ci_Tu<b8B1Rdf[@Kf][>"/7OtZ8:&@QKK%,e`m;0gpG'6EU'%eB%J?TML4PT2uggUnb]B:e^>,[#Q5s!bnTUai%Kq?\^pO2]o%l+bhgA@c>oiU"(8RC'A3/q6#=FA1L66P1EDNe*+odEUfNNJh;mHr`ORYCQa@2qtU1S)"aH,'M9p,,dehc1]/i;TH@Fl6XWB[eZX3%HaRNF)HO)&"jq/,?MOI+^".N+1Ld-Vmr]'0Y.0=U?oASEMHqpjOW^%YfIOod]@:_]>r5+>8poHG$A9b69;r5f:0fT@Z/!1clNddG%,'D]r&?[L2Kf9i#U9:mcJJSOnUhf?Y'!ug&$X1.cV2FPlg]PDS"KbtB)Qn<oHF;>,="%bL_Ji(<8(ZJ6+fGihkut^kW[s)KjBB1*%&u;eDe1UK>=:&5IQf5r>f/Z8&WSPD?4Z\lVj0o7eYFD]&926J`UKhS9&<UcbX^,Dr7VZ"t0m0I$+H6?\;S,3J-C$fIe1P'1o"]ch%0!u(GG?:-b"[WQX8aSPMUimc*iVB=nm33[?`;K)VM[MY-eRnaI.Lc:kGZ0DM1[O4WQ#)NI]eI?1<g]oNHC"f;?$qnnic"`X@Y8Vo%?#:CEMA`_gVRAQ@U=f#lT9GqV$ba'2W3o:L#:"_AX^0.7&4Bf>Qd>7P!jHb9.lATii2*H^*MWAFV0:tsU'RT=JW)D`<*a7*c^nX3%.]LoM3gXl70!ECCG1n&pgh<%6fIe4PeH2tkkXk,M]0N<QAn&B25_5;S6#7>f1KDf6fIdtUW7\[<-BJ@?69lm!j-Gs<4Nn5;j/MmZ%bSFc!Z[3:2F]l(MnA<o&1@3QV[o@UN92q^0kiHB@70TL"-q.IEZ\u^*/Ng9dKjLmfMiVirVN&m(A$=J:Q*6Hk0!;PHfW0.<r=]]&%]8jR.B,@b"j#YAb=.NX;?ELR"91R@^FmN\6;TTVD<S1oY5RMGX[U+.]dKLHc13X%&*\6iL?RHc$;dg*OI]g$Q14#)ke04=HGi?1u%*Fln!DSgRN\n*`Jmk.Im!;^JVD#hPXbr3_!]$Y--U`G(E)Zmb%&'Um'&=IedXjFK/.,I9hXD,"\ImGIbdq7X*E"HG'dq7X*OD[(U%br.;(1Xu_1RuP165O9m&2OYC#Kq0OspuGO_`.7S[a_K:<K-h;d(GsjmGoUAHBVX`Kk![SiS,Q+SF^Ze+UCF>:r6?G5LAdPA=C%^3%S8.?N\4djsC$/%hJXK2969KoURpm.Eg/;-q8LZQc[Y4A_^8./j>H/5k*nMO`L,8=h?fr57iW&+ZTA$@e<[SncWX[VW8ir3XZr%Zf%.HZH'=&_l$iIqVh0$uR4<nY(3BQNOj,&O;idE<"DD2u<2ALc%bii,f2#Ygt/V!j\\&Xks(Yu81t)Z[EHQpMatEc/K=[*ahcLiPeU%%E9aO/R5"Z#SdSLU<SfQdH8g!\j5B1`jR=tLu'!0fu>J_NUXpXCi(X#F4c;TNGo6'Y7$!GibZuM=.rT[#f3XUf(F/OQ;!YTWpR\P%68YR`f$;*rV?k%TJ6LRM?'oIs0I'%)0jusal=t7SCniDu]NA-.L"Srd1fZ;,L"SpLf#m<[(8_4)EAmI++L`j;B,a/(!_qe,ibW97%c'^kf%>E1IonCkFK]RA92s2jG^ql>S9Dcm>;cu$68Cg)A-Il[#..sEjW@f-.++m0+W\.L"mHo&=:9McpQgl8cJ(J7Yq$pf$Ci)*G%95`*eF"D"13Tb'l$#H0/:(_1Zjs8n"4/S!_[3h@Z(.?gq$`\$'\_pZ6&2AqV84P"``uJXC&gE$hdn:JtQXrO&VE@Qp6'fd#0$EC=%$a-2PjY=7i=lbWq/0!m256$tMZD"@CXB[r@.[sp6Q-D%I>XOiV6QcFSR,&@90420kM@?)VY\blXR!.o@em)'`j'!UdS$'or=AWRM%bdGt6h36tA@SE5NJJ6rKDiRg7G$U@BaGS`5X0Ob6<S8?!Wbd^+[[LjC6!/i6b/WNS-h:og8uk[L-%_BE7)sp*Z/MY(k"&<[F6nU9%lg8R('\Qg,6QM1k6':Qr8$Kmn2(5cDqA=!7fi2Nu(G0rk"]711JgQsQ0$/j+)]?Dfa9H%DKQ:OZCp+nC+Y'e&8m+M")[<_BZK@52%(6ch_VT=M.j/(TYfc1<eClZ3].@djh%&lk-RN@n`6'BJ8f2Wd[$HC`A&^g@,NZg[YW;8i@c14oj1P^NI@a/*d$jhf-NkKN?<Ilaq%JjD%Bc_\-*5MJbArqMFS%o*ioM3MD*CbU=b"i(l+Ll=b`8ep$t7'["c2WVf/H9arnjTe44SDs@'l\]McM2W`OZ2pZt01`A\RrT'J%"#;UBbG!1APC@ba,T@Xg-'t:Hk#`1+F3MVRJ1s[7#&38^q@R8kE-k8O[_*:n7$T4^hE$''Q]FrJ73:2L-MD1[2V@fsaXpnA%h9Yb%>Z@YWcEa`Vc9[kXLcCH`17K-[JhUD<TSI*;#bAZX7hB9"X_.9ilE\gWLGE,$%1)!!"C3opA37fn[0umB@=oXLSa^B&2Inq0>@BG1%JhW[(0!CS^B.Y&*!D#U'TOZYs@l>0@B-I#N%d^k=g$+g9Y)9o7qbU]ZR)5&5lC'Js@mQL,0p>]Y&IY-J2@`]5Y3=4\ngD`m`:#GA%%/\?@&W.AIkcu)u@Oj<#pg"CYp<rL_MC$g+7\&C,RMT6Ic*<qek*Tqc!HF)V7C(^CJi_Wl)][XVT+N#B5J?6O9`**#TL_mlF6o0(%02lQ%RnK`]"e;>DM.<_iBH-9s_3\/qc(S2hZuPdbi=_MERq&WO9[qbR69koQ:hQPgZnAniZbbKJ/0e)+K@,WIqH#h$R0jn)[-!(f%L`IuJ,C-u(l)H1e-T+A[r7ka"^3kQ-GdDT+1Ec)[P.E-4,=.U>Z(T5T;Q@61a?:ZI6Vq@c\iq@IC9XM*q^N306QHjIZ>>O)=gjF?%>OAuiqs/7MLT_J*Mh;Zt)k;^UpR.+Gmp_JBgC0+bU2:+4MQncBNXDkA_$Po.:;D6r*:rUigqAWZ%Xi;B?2NRP(0Sf:C<QS&?]UC7%I+e$[_m)tl2o\RJ<^qBPDkOP2Kd3Pf91*,[S1PI]_^hi%pH&R0ku?-P1LaMB\6YVaDsboYG&]E1JiK606(G'T1iYEcJJU"AB-X]W%&r']Bfs#+f>+)=q_#[9)&=X:OOYUe'ff4HMJ:-ImCt`PFgb.&FS;fqP3<aC\Yj1C_Sg2[LHaqT/Gr?6/##`6`:92Lam>?61C[beQ%2D@:K,*F7LcK85jB62:.>_(%dDDM<es&IEYj']UJ\"RHi2Z'1R"$V;pRq&YQAqM`DX^%L'!fFZbZ:8EJi%n'1VpC0MhPPmp'LCc2%.fh=QPbrp89fE$*W3(b)%+'%+,+H)&1H_IEJd7'7K-Hd06'3bsasu1fg,J>;daV>KZ>gJnlW$bl_mstn(][UecYtudVR\4_3=lnX%_N.Z3/S&CJ'c.S;V?0clH0U9'p_IVkJ$ZnB*h32*2oK_s2!o;2gfM\(OdqSi`=1D;jrPqb@u0*NF>YrV1oe(,R3P"Wc*=Fkee=LL%RciLX*[TYtX6;?K8QK$@)fe5(M"_5n'%GPR$YjK@Aa^M[r6SN+PQ#os%*3n"N@RnQZ0ueaI`(;;0sjZ+,GHR>7\NqYCn'aq!MI-]%o[k/IH>F&p4gpGIFh;tN%VYZ(Nt(d+0D(2>!Be\UOf4F/:!@h$=,X@Ym:*Yc>>[<!?G;u-=i/_n;)ZI$/]rg,Mms+KY#Xi=U290O%"MP8<ClZ2.PYD6HQln]A,',;KOZDQe@M0H:U'^omZb/MF$uWVVjlI=Hq1[U(2'^UZp+ScZ8*3q#,O6ej_OIO-7"iCLUEJ6qM"o"@%%?`2,(AlUTf?/]TTGCcpVa5-kN`Gkd0F6YB)cm\MJ:n^lYc?;DSM()V+IOB=O3A^_(%[AC#`B46A7!OD(*i^iB9&qHn=9+X(_GcL%*"-dtNc"V]iWL6Il>b7!0AQ%h=X:k)QNMADW2%I*.u*:JaQH!#BR0O%_?rlo;le!7]-00-U^Q*99f])h2oJ;N\N?O.Gl4h_nhOo[%%LFl&BAQ6mSBtRG79#:?WiDFC;&eRF6UthX]A@iR47IqWPE`QI%l$U]i@`F=T9k74<3[cRJ(i?Mn[ZV.#.b6TI&di(`l+R$<5,W)%KTm]ImE2],FqmoTAlZq.&ZJ).]CMCS,IWL(<lfYWr6V*[j[`4[E\+.pKp:G-c[F\TO-:W4d6->1d3P!%:8qqPW<@$fRH`64<F6[3%?G/.^aq"j>/aY?'X72:E>>0,B9FcjZqZkYQV]144)l5((?7cEC)1P+,\I`r)`cd>pl@J1#EPZ-5(t/S-,j57hf(FQ>6Bh91R<Kpe%5'P%Rg]o0?K6b4`kjo[s.W4n)/N/Se&-NX-NZeZ03>)IG*:&2A4eXA&oXk:!If(57H9MFaf\AG&HH*"qY(Y4<$%bF&"[SfQZFAF@%5P3IcV"\1I#S`ju!`m:GqM\Og:);C[&K<K8U^_*@"EGb9!]egHJU0Wrp?@uh7&pk5J\oSt^fD&)m?tEnVKbV7JKdAmaKZioe5Q'!%>NU^tHCXWcX$qRV:gr;$a[Ld!7s#'35b_V:X+uK4Oc"f'.Bh;L_.o*@(^etBS<ii5c_q]S_>(784P;brKtm5<=?Bfb=fbi.8>6mY%",kiI)E[NJ$["N\0--8>b#MD14QQu3WZ#r&7-buAQ&99]T3JBnm*p*3_1-"`<X1u5J+U;jpAC\pW2C';UUfjjlZ(@.0:J9tmur:/%?oQ<qBQTfi3W)<%iLg/1O8jILC#r\dL6)B1OZrdA,7Papepu`>5QAbGjl<!4O,s>=J(mcuq7kY`ZfpguWH*+UCnM$QB8FqtKY[A=%b-d8f4BQ!=`p$Yslq&e*KuPJI2Ru<^7'*PsC_8AI-;E_QL2l1aoELjCUn*4[T4dpT_.h02ire6I_#,`K52J;6"nr#mp`78b=Fbdf%'#[,aHGj:R[ilPR0+3r(U?/hin$L,<:SRjglP2e_[snf.s7Cg?YQ+R9&F<!ocbnhM)ceH%7MM>-AtY@&rT!plXV)C`)jNt5.cDd*%;5_%lT[28l6Y9`lLuN<8l,.UU,qNRa.fmEPcOC4SbEVFt7.1Gp6O_F]1^ne6-/`O`#FnL7'R`n+1(LTHS&\,<qPHm3k?utm*/;2.%&r;u\p2pr99iYk^Vjd?Q"L3/N!(Q?ih[,%o]L#0ar>C[-&h,;\fJ;ST[Yt\K_TmAq!$E##!uDJejKVj*%)'&;YeS-1:(f4KmBW\i%N]n1hoRBA:+TP'f@Ik6P(j]'m$J7CX(.-ddja18d^cK#-`/nh+)1(bu>NC$Vo!DDHDUDV<AWKO2Rg2(K"/75II7NNt>=*R`**N'&%FY*-(>*GH%-rq>I?KF39)@f9i.>I(W5]1"hF@9&F)if`T#[e;9)MGVE/G!jbP;b?=XtN.FFq)d7n*KFU]-<ee"/6+2mDdP@00d.#%eq[b"/D-g^T_GnL,!b2+,4G&CMo)P\:<*j@X.&>l@!7E+Ns12\6uE>M#2.D%U6HZ(WAO[%-m9_7M<*i5<I=]L`"f4%?.T&^mfgBK%L.HJgBg\MM;VN=i<c%p]V(c)^C)`fiI+eOd44g;p(2spIn;;X3cm"XWpTBU5&cLLZ\W)M!qi5-=#'QfTIq(X`n<>XjKXkC5e]1-_%6q%6OF^YKSLd5K[J8\FU@*3ImHpAS='E=GTC$D&lfP+?a@R!e0*P18Nqm8?fXT[EGZCPj2Ps?N6Kn`;P!UPG!gD?\q#lk2IjBX<f%Lkp%$=cj$>d(^UK6m,hUc;H!U^dk27=h@o?Na202cMeR16*C*%8IGS+=:H.GUa+6=>WnKag@C_GVCr%04JbV>RoR>PRk%pdiD;An%H2i.<qMsU-M$IFFb&C,RgnG1".fE0G-t[B2/F`&C<=KqQ&!$2cNnOgiJbaY-<Dj)K"=3e:F&;3#gnV6*L&uJm%2Db$TafIC=*%FY%<#b#"6XOO6qqc[ip?B1IC#&nPKIW1ih4m\=_,49=!0X7"LG4>.6W4=qi1r8Ccd,HD6$`iK'RQi]_uT$G<GZX(NY']Vk_W#oTbe7P%<ofr'"gs*@qX)p1X-*rHSRUj>IDl9E]TT5?"+"Hn%JKrCV&gV)dn2rP#9UV)/NOi+Itt0Ej(;1#3#ch7Ft!\eI.,?<T_J0KMC8o&%H0[*e41$$.jOt?q)8snQ3gcZuq'R)J"pj&2(eSDkPKZ@YPY)HJ4pK0=<B,Kd&685KH-uDCE2h/6%,1@)_$P95&nAh&<3g'Hhdn7J%,,T(?\4-eYjL?q&XZ_XV`5(fgE"4*Pb>Vpa+LRCJEWVL?d=@&^HJFmB<@fbAj2VCU0gY:lq'6Qc!No0nU3*ui7)on0jg8cm!Ch0u%7HHf<Ti^GkLs9=DAMDOB!pi`\"Ase#j+>"8-'/mK5f#0X/_j3mSaHXhE#t@,J@'JDL."Rgma+BK'[W:(,/R!V`*b;lXKM1e?DJgZ%9an945:1;-?fEQqH>*?*-#q=Tf"7**5W-Z]leUuh,>T72WbMV^CL.7-%'[CiI@Q-nSSpD,(`./L$][t"105hc'\h-3ZedgD]tpQg%,?54UGBB/1Z'Lu65+1X][[NnacheFE;#U8^J!.G$5G8Z>=SgZtC8m4S`=JU&)j^@D'pBs3(Y/X(MrD^GoLA7h1&-&4qT1R$nF=rf%'p'n4c8k&9SA?M_cOS2:+'4D0n;*USXr-1)o/"W.8"Y\$Wpsd[[0DEt,m8lYZ2=_F+Q?=;IXQ/m)6`8%TmZXYUSns<Sd`p=1VRDO%PJKGq:APaiMD?m=<#@#X;MMY'HiboL_t=:1S%%8PK$]H<8H]a2StZ_'!G;]Al<6!&35PBAVDTU>XL$(!Ar)>7R\6Zm3t'0K"_W?>%Uk&p!!3&Q)5F7mSe(+T&.14H?TV\c$?$$:l1(KM+c8ZriV97(CHL%BlC+0F=,#O=%qOU;!7X-lYn#\r]Ph'ssG9(,URjrsuEA#_C%&r+-Z#jWruhYj&c'YFi/%0Wb'(d?Q`J\d.^^eO90At51GmWG>+i'=SU'q7Nk_HHOk_%5)(E:<nD!SeDNg51`B-3LIXQCMPM&1NG1%9]K54ZOV#8EBtSL;3dsciW(EQe?-Y7ETg9Tl_^C9(kZh,>lf_]9%a3;);@X4d<5_o[LYlm7lZjSTq<?s<_O86^euM[S-n:aMkO[L%Fe!\9l>aho/:^86aGrr&gN8[h_OGHqG$_Es*$n5GkB?kH/U$TbZdS-C8jKC^*>H3_$t7,O,.Erc=>L':<JSQS0k).;]Y+gGG1t5>%V51K#K7Pu55o"aN>*'>+FeE?-UGkt@<Uu7u7c1^]bK&#b/$WB`X:gF2657,D&utk^B?+$jq`\$Wa3gA,Z!T4s:8fM$UMi*l+H$1k%JJ7D4K3n'b13LsGFhkC6_88jE7f8:9*o`!+M;Kq].e/=1)kXlH6(ndm5pS"%82up:kB5im<4Af3/gZHeY"="Xl(h#cJBU0gI8b;E%LR-?!/n3R;i,_/+UJdnj$oW'@jl<`8[p#nNO+PM,"F=H!X)lZ%(JG(?<(5d`G@VE-IRokPP2!+Z/+g8(<"PgE?1a593/stX,5E.4%RnR**rOdrI3NeS<IYH=&i?dS,$<gc$Fu0+0&B;7N$i*\UPSD\OPJj3)X3q&6:g0M=%'QZoLb&-HJTR/NZ\U=&]a%@3Efqkg@E9e]%+P5>!3)3V.f%.Dd%_55Ln[a]mh`&31O1E?n(e,IaGQ3UMj[/6YZQ#$K*$ikMFklbd#?6YVUPN\eS;2)7_ftLZ@0Y)+fZ(X"X3uKO%^ac][HU`a7J`uT`dUJ'FJS!rSA4NIO(24NL^[idt?AD!6:7M6;'o/IgP#.n-DCb;mTcSl)g?q069TAfU$jOZY:n^XrpU;?p#2G9^%'Rj[#=W#UC`I:`RL.Y,&^[kV[lLj8(Pn4)[*FEiKW1/KQ-U!,Ar46u,+<kB@d'f.k!E#8J_lk&aN"-"T:93oNaT9[Ij8*PM/Xmc>%eU^0&0!"cL!2Z;O%<i,9QZ-#2\^RSU76oupnrD_RXZLAb'D=HnPbKJ2.93Dk>*D6Gs,TmVnHL_DS%TWPQlu:fkh\A-mAA%SJOmh-%E5du?VGYkRp^PqsLj""un9[;5OkEc'$DIJ0b%")0-".EL>Xp]1R%_mYat,jM,'+JrFM\*PLeRt3Wql+br_u?r<((ZfU7SKrXoLaC%ZC'pfXDoF&WUZs+SmJ9>\Q4uq"_^eslRKrNGAPMK7!krP0N2tpG"TQl%O<Dc_iDkI6>52O158;bk=HIQ`0=_YfF;;UTqIANpUASW%;`'=qW#*7I2a0B.70G&#OgWKiN?Ruf#"qnAigduNa"cmpS@D$tn6Cte@D3U+cK."tQ@E2I92psn(=CC^of-Zn_FpTeEQXL@ZKU>J%.WY)1c:dDZS28(WCFCAVEq2/niSFB"R3!a=7Bsh;UTN]I6h/aNMs5COEXGK6:1R;k6oX_/i6%VSAi^$J.18q,q;r?HlZo43>#rB8%:s]juDgF&"M#bnY)ej>ajA?V\%4:;,&Po?cid0UISn2*0`Qp1$=gE>FR\XRXcM]buLX9]JouqZLSo<ffR*92t"^cie#tgo;%/&>%%]B*!3HV=Q!,ORl:3u<o3?f@p#L$9TcNCee8KZku:\l"G`"7P';9K9C%U0fY,As3^IoH!gmabj\l!@Hp%\?KWnn$X"(p68&iauHK"%/IJ;rrkkDjaDK(PmO+k`g@da;73jZ((G3`1]pcGZOLf*r+c;1=,2%gcW.T#V1b(YWgBYI$l(d(18ktfEM2.QjbTod72qq^&>a@4!%1,RRo:KAfCROQ6:l1/RdUG=u8mN*%4\gD!W@IR;1Tkg(YAJVO+:,\:l"^3%Sl#NYH;:Po<1F9>m^&cTl%5bthr>i5hKMHUc%f$NJ%SP6$3N(=r;I.ngrihu"HAQ7NHbF`ANn4GY.*\N>-2UCF9k<.:\:l0M-UMc]@<(tQ@_iN>pK;)hC^1loXml`Qj<)0j:I;600;*@p0%_sK=$Q.;$%]XFfYd<&Cs*bC\MDcj0V8e5MG(B^]6X)Hf`9q/OUY,^4J0QgDdl*4puXH'm_C-a,R"=M3L,RGSdQc4t##mbYA+Id8L%<'n>_'5f\sW=>\EX+;nF=sfX'jpa(;%!d\jiFj!nei.tA0'S5oTHo37)\mL<P_5g<Xq&$N/&nT[PNIZH$$[WkA4Nt^M;8"\W89$S%d1.YJgI.Z08"YZ:o@6\OFN%pU'Hd=O:\2IbLuA2cF-g[VmM]W7NQ4+EDH2PT=uT.K*N2'6U[fS,;QQXrpBkHT1iO9eXJ4DAd$0R9%\<];PBTb:Z<JrH=ai\+cWl7$YCW-q%Vh.m,FjtP@]mpR/MHG%^Wm"g<'5Ye'orDgYOGP.T9JtC`LT]&^E'!iUSb''kgP)#pZL?Jb%O([QM>qW'6qjnJnn`F;GTF1(5mPD"=gWkpj[Zo`IBj+"ednH=`;4"0aZ7b1mok@iFR#<[69VM/C_e\rU<MX2K4hQTGFcp-2cTR`:%<4[B--:8eg(U#\])Q)f-#/4U51f<!93?<clQ?K7-XJ8Q[WBTXH/(EPoh,^/Z77_THkS+RBH4ppZE.bUea`INh'&XghE8eJWL.Hcn%E9l`4o3)<8GF`:.>:O(Q:fU?^8M$tSZmq*!#Gp5q^h'CEWiG'qIQ5,a``7#8eCc1ClJd[i0a1k<bc$Lu(DjPP.PX&-MC=@4ALT%f%dSO%u0J7kfVR_I7*H_''9)`@;BhiAtYjIM#*kCr<3#";K@aFnCHF3r@FcnM%NIe6[$\2RB&`C*5P?ZEcm#'sA77a3H,@k/7SfVX?%aC@FDhEYR0%947t-aPRMPce1]02<+5hi\B4EbSm4Sh:%R,atG[XmXXV,^&\c4WANV<<Vi,kJc$r6/_tn/"!@%d\L43WN5:cWMLr6%T8_>g1lptCVP0eI+'SY'm>ma7B./dV/t8II]62U=#`@V&lGC(sg(%@4ZJq%ZqOA04fAp?iStDdGZ#@8XE0;&F`G8r([Z_,JbLWSC%]K,4AgYn:OBoYAo7>,HJUSb2`'8L_a!;:*j(`n`qL&Q*(,2aRaGincS/(i*Q#t$8r-#*"3hYu4sC#25W#l:,bR"fP!h9(+2>s[(>%G-!.[3pLImmDlHTN"NmKb3Uf&SOD<.\OG\a!\>Ye*fedfCLY@PV\W(*No#-X2gsR$T49WC\gdP<H?1B3pG_[a>Bs_Ur9N:c%k=Ra%S5$FhlCa$MNkWEN+DS_Tf77<u'8,NQZWBVBj/QE>Y0Ra?bOgBXe6hWe@Ffe4klucfe%/1Z_]5NH_=X%KAXCNX_nM\F2BZ99SpN:i%_pm4k)0:<P;l8L=#]2App$8R;VjbCE[H[sO&d#q=4>`n0G5_kW(%:<^5S\M2:_?,;g+]Y9U=NRdS>Z&jn.KoXpGhKe>>H@oV7RV\%#ke:XW-#6-p\#aaQ/CBtWZLYI!3>n>LB1@ki@oc_#m2$k5(F,hpNcj("C@3MJA'BN!.3`WFmf;\@GcEmZS&q6!;1GEH7(L-b1nq*%JdB5!a1'$04cfGuLa42,EU1?9il,AdZ=d*+nS1n?a[b"2FeYD*$6@S'M*fE5FR09gfVFNJI4@joj.=uCNp5J"9@l3Oi5&Jgm?g?M%&cWTR@pFT;Q*+psAC?PD*Q>8GgKAasfVU.:Lk.IKC^,/T7gYpV,0()rW6.O9i!E/n('b5SM"98RNtHtF[@d1>5#1E`mn0Q'abY.O%A:IZP2GdXo<$p9`f2Vr=,()YkcqoX07qo$8S%`Q*Gq67=DG+:.lshNfNo#//;/Kl8$D]DEIudZ*d<CuE9TBqpnmO8:>t5]pAQ63M%BY1YOjXuGWLqMNAG]NSMkUVFi%+#V5SUjogBD.9r<EnYj.O#24@fAHm]]Z\@jQ!W32]Ft\YaCH66WR:(Nl#QE(N.\hVT#84c"%(?%8P>>6_p;;13Fq6-(+C[QbsE?ZH-Hs7WY[\i(f?u=p9S(PbNdHsa(a:HmV8"0B!@VI.K-59crG=McOJ$f43_'O)$i+2>TVQ1)Z^9p%48RI`AP51k8M^#A*3kCRYUHN:IW!R,4\W3J3TG$aL3b]cOWLt])etEudPObU4%8a*o\JQ78)J:.4)Q"lAJ1,D_)f1'mF$lm8OYTt%+G(:DhZsrr\S0TG##ZoSAjlsY!SI`I$/34nK%,A^Big42lhNUdeWAS;*X6hWmWN[>`Sj(GN(MDo3>C7r$J+]k1ON6(qhM.i[%m)Y%.&4j-b#)CIV&d8DA777B-uQ-(IP_JHI7d=bRN4VYm_V9kC.I0$]Q&YfFmZ7l8)YF8@CL:j0gR#T0Qoi^%OQR2.%V[h]fQJ+Leh&J%L-?e]Znri%om;.EhL2;&%;uHc`5X).5ul9ToVj7([N0KJDBKSd4!N2b/KJB(HZkE%6S0CRJ5MoAH9DD8_4[%%J_#%po(Jl-Y`m"#%gE<ksm"Stp6bI]0o%s)KK2VBOSGuU%)?Ets*/-ScBGDE)k8l3B'%RsIZY:W+b#+q<[Nfg:'a8I[T*eJpgJJdYp&[,X.q70\Wg/&$%;%a1&$13[.K!=YX;8DT@>%^:+[G!N-2grXHNkP0HmF-E#l3rA=RDX3X)"e6F60l%\eZbek`#t`<o]J1K+ZPXN#S+^$O_'kE<3/3p%#5"m.>6G$8ed.68QG<I%[1I[_#?g$K#%XAf#[D]<"jtGYO&--ON&74C<n(<Q%J/*+Ft[:]F-"fL]Qa/?G"k9Ec1"0/%pqi7HP%&i%6E\r@i7p:Y)g*rafS8I>MSk2SSqSn:4Z,>e;j\XIL]\LA5(Xf_%djMQ+S:Q0+mbJS6eE@@WP/7:_S5acVg\CWUU2Mdg[b<R!E0%G%r@JUb>k"71q/#f_Lb_<VF-!J<=hAQ6$mZ8CjC7J9a?-]M[QF=bPk+5c[7\5i&d%'t)E0'[rS4-47(c=r=E7?eO*BZY%F[p"C<b;K%H"udJ.q%7]O4-:@e!Z0ckaO$O_,\.?T,SKid>[OGj3[oA5gn$:39$a(k)RO!B7^Y5lKD0o$-1na>/cUk$&2PV/3a_DV?Zfp4[2@I%:Plpn=oo6>+RkgZ@L"^?g/2W=>8L2,Q97g-`e\;&*jMX$)bnT-HZ)7r"9XNN<>_9UCQDK&F5@pcjG*uHGFUV2ZY1o%,Hmf".?EBk%\+bO=-Z(B-kdr=L#e=kT#t<`M$/6ouk-X3PNpsSFYt4"l/$Yj<1lJ8#<?[-lCBYp3;S:,5bm3Fqc!FQM8pkMRFjPMRd@%hB-s`IF%Lfb'a&o2JiVn"$ge%A;o3_*aY)I*;1&ncI7PbmR#!Nj@/djb-Z*m4!/WT#AB'@u=^?,^FKgnQ(HJ6OKD1:c\FY;4m8o?n68U22_&%7@E%l7<]5ui;g1%qu`&)VkSfIj6$n_+JYO=>m5Qq'X@)WqC653eTP*\fM>D\U$!JprH[l'#/[%/EU/;m5X_]VHJEKSHSu_Q5SsS/%Lr@_[LaX2[,3PNJq^%MfqY.:KT)tYc9J=0nX2mXA.b_R(!a,+<@JOC=``\m(U`+tMZrp:<6`mWA1f)ph`<t8lh;bS(miB,kC)Y$u%<hq_n@7aq_W8(Z?^uBTjm<KTcOY3VBLIc9YG`+K?iJ8kHc)nluesBB==K#f.a7Nr_CBh:>\VN]d"]X^&+Yh#,1(2PllQS^rp/31V%':@#FJHJFX6rTsIl_#F`?4+YUAgP0;D;]:dA?&@<NH#Y3iOo+Dp"&O>*SDcf?;6LrnMIO6DH?tiV>#eZYCl:J&OhToQ;QZ-82h"o%DKjQhG]QOkUU=+126nI/)[?Kcl7$4%=t)EE:F6/*F[7rA#)LkILj\X()mP[*RqH<r`Zf^mZ?<ROVPsIr?SPbJ/&`hYWe1$EGb1'W%CTp?67AV(<eYCr3G5V^$O[R!=-#XFX<CKCI4:3NI5?]KE\hg<0U=Y-^DW$)Bou5f=`U0`?0fjPg^UFkBBhMI%IJNuONV5>m1)JR4%DWc<<Y(CkB)MH8&bu>;%;<(R:2F6;r%A^,VM+B_4VN+2d_t#1&OUS!*$$ZAo%d5acnZ@Q4*RIt\?33mOOA^*m#A4A@m^Zg2=r0Rt%Q9+fujsA.'3r2g?Xm0W&jZWX(BJgj/rV$.%^!W;b<)BY,X%$OqgnLj&.\<:k4jLq<Ah\Wm>cg!dk4m/&ToMa#j10+;C"keHFn$IB%mtfO^L<n48[JQP"[#/=j'nH98OIGce3$Pbo.Q]%!XtAsr^%ItH8$j=ue%U0XM;C1AE*]S7/b-.NH&?9)r,qYQOr!<?'nJc(9XT&Z%4O&XIT352&O,X'T4*40O&B8)Nqua`L4>`TsBh%TGeakPT8"uUN@^:/`#t&NHZ+^E+'pN>'`7B#`+<jgXD3+Yhr"?^5lUqj8C--YP%Q-O5;Z2i>$rt$u`lJ?^V&2lEu]@"O'+,6.$Z.n!X&Z8,aqY3&h#;Cb`_,`fC"KTUU"MN6Q+nWd"C@;-U+X0+'LYdB,M;J%+iNTEB%po1Cc\O@;H#_)2=mK5_s1rsGD7?N*o,u#C7MT&i`eBt1gFP.&$YmKZ!TU$-#ejT(M<,;HfUViORn"D$A8@bXZ:_Q9Vhk7AXeCpt*%o@0JC["Nl-4\g@shEaQf,".t,[o30sE9s)rS.9NjSoI\t.!F8*-`gr<Mp,PJ]n9a+#J2DE*k7/dcFE;1p,6BaN_)CL"\D;&e]Sie%:fsgIC1?jj+p9?#pi%.*UF\p:^c54W#XB&8ganXl!8:S*`78VBh+>.?<&*ITej3c@UWkb5R9Kk9Tb^&;AI)gdH5dG;H(6^as/sB`%-b];8f+hP&-:E\[7gu9plR7]UoA'fb.+/WFQpI@m([6!n%N5?5k"7%;KpA$*?`9a0SBeT.&4#_9j,/jhUpR_h<_sVKD@bP:H6Rp,%R<HJVkaO'L%]^kqD(B&Y].,PX6gCfeMS?&&UW/t]<apGHA@bTo!S6=W?O90Y</Hk:Bs1UTd!&JVj]Qem;"Q=m=.g87AH<8VX$'l.%8<%E6SF2c5XHPbN;9spa#9^7qfVo96PI7JSL>LXc@FqSPg_b_i?:5%EdAN^[=iZO(@FQ#7$r[f?5'7fa6.&+FBKl0(J^-q;5l3N?%7$2=V)1(`s"HT-M`f+j(Q;gAp[RA$(+dYFBaM+0%n97AZV7bYE=sa#Va:$ugYe2(#I%8dKhM21d/ubt"gMjCh$Z)EkTVR]c3hQeg%m7rarj#PJm.`+G4(ATqlaIClm$J@J+?+[pX!?ImnBL6r9]]XB);f3P7KCZ5an9GT,Mdr09e!f(Hn-X:XSD=dE#*.*'>83-%(,%&0%#b6`1ONL,WD/ot<%Y8C/U8&VNf7jUmo;/3o![";9`7/;/O6%8e#QX06ff9D-:;&r;'Hu:O_rq7\KQF(n`":&:.W+BJ;$OT>WSpmM%j`_Ck,(`@NW!PRZn$T-YJhr-"I;[D/h]^j]2',6ZF,T&"D!Fe:JgO?>iL<W/X!IihU'Y@-649X]bJ<)6qAPmuiF0jkaq=LU&A!2g%W>%]cBO=bs`6_57d=_+lh2rB6AYpRm_A/3)G*o6fO558FIG,[1<k/q76;(iWK6!IOA1XC11c7OSA0,B59p92npbZX_DUtHf5c>(>%&F-n^jeCHipeGkG`O`j]@$UK%Ju+j3WPYRaescgI1RuJ%='TI``q=VBYA$Qfj\-jj'EGZ$Y-Y$)FQi1kG9:l%)R2gQETqDJ<#BrM%0qoICOZ^,M8-HT9$8@RCZ9g:1_WM\?g6\.C"Uuke4b0ouT)7pU6pun@Yn)ju)iiVZb1O]WFV,R"-m9_7M<1Y6f(upI7DPjg+R<sE%L]@s&Qe$HTQi`sqQ8J5uk.^;ra(^UKCP11iO9<#NPS!Q-Vh0kgjsUe@ekQY2=*M_^bl>)Gi)415cG@_Y],*.o^\<%&+?d*Q;:SN*%4k+b7M&Xldmh?+b#jUs,KF2J#DZ4+&"Q5fi/F2]kX&\fk8h@XN[l#/+m\feI%I!1pLBQ55&c:@XA+5cOBL7fQM%W?0]FTQIkQm9<%cS1+KAt<^&hf+$qd.fTl3AAQH!_l;r<D=iHk]%#O:/,jB>9P:!E=5<KPpl:SblZe:,7)#H2'tUZ5uFf-&_Wh)4$X*7#Ye^#_]TJ#%JWGa7b`;f[3W/<E.%L]4C:oc".,ZBSKJg%4"C9qN52EA_%rio.=BJ!V%Ah$nJmZk5?#/Y/?kGnr\D"ZKE?N5#-N71**[J+cLBQlQ%Jg@cX(6WQfSTeI/_Cs>:6tDTuP.)M':iQ^0AKW!lMX5#JH;pGcW\FNF>ne`48Ht@@Z79;blDpAhLlRdlH:nT),.g.k&j]TQk:_r(%\s]3Q//eedBSJ8iS5TY%[nF)Y/!gLG:Tss_a#/O7<`T>.;Zf!-cu$jK;`"%TVnI8ZDJbb/&_,@`3r5/B*63=`qX:Nhr4_[[\*XJh%hc,Gq]@0NYKV:>+K)E;9?U$It_NQ*/g#':&+;#q5g`$j#)V;m;eX3Z`Z,7s/Z<_AAT1_.YOfEsT=ZVi+Y_pR0QVjOF-[6pGl?C,7%%gf!)WgM%HE!Kd#eQ'Pl$r^tF1p7D;#R,a)?#grcU_P?"3%MT@ql):(i@H]aWu;f]>cFqK[\X<:2^C"+dfu4+Jl'@05aQ@Cg7[M`%&>?C96`<il">L)uD[V]6+504``VtG([!Ah2F/!*u1.gm.8YEj/d?"J5<'Ves8Nf.$Go.OhN\fY32u!)MS%Y<THg3j8R$o[S*=TXW%r8>O'6=9TEe80@7Vl:c6()LHR.O]Ie%HN)9W-nHM$4>WpLJ]'<1N)n9RYX#cFU@9V;mLhp4:Q@Sd5P!G:HQ';*PK-!gP*d"+WAU[%hHYm]RZ?kX(t[HT:'=FLhkHf'=(8pDb+*/"=&&e0[1ZtY!1$cXk`^`oa-i1NjDiqD&[,oe/)s<aB:,5nJhaAoS`NipO83ZjH!Khe%kWY0;pUL<u;dSp9aU,iX#ek&feLkZ6NJP22TWW+G5_3oUs$W3^LK)r1h@m3-/%1LZLga;p@QQcK0aP3T,_EbD0%^ZIQpH?6\7.NG%7ettNMXB3*&_b>@gM(UD9O??cgM(W"PGBY9:R%-4`idt>hgf)(#,[\:Zr8r0ZCmqPej[g=D]#OXh@;,LoE[[';f>0mF5"-M4'>(@%B<L)d.FrfhJ9b478+/,i^O9XWDo]tV;@P89Nn?&8Joq*<:cRUZ6J@lYHU8.?0m=pZ$Fm"Bi@t%`$+M@q<V#8-"Pcpmfp-a,-Tam'%gi;5>oA0Ci4g[+]AuU2%_]$B,:rXO>HG>0a"PcLpD+j,rJFqm;U`RP1_q:B!qoF#plV>(Jd<dBPipE^1$cpQ)-Jn1Sbrqc+m3CC-%geHU8gIM)ZS"%"2[M'rA;cVQQaQ:ongQ>ct!Mm<o1q4_6ZXfuNm4ccTQKl?S5c>1U_X3@SINmS8i6>Q'P3lc6**5O2s3s)+pi)ad%fHkF<KLiP\c03J^-eLW"/ZRYJ<8%N1a0r:><%JZ[MGV14<9njS3)GfR+&i'WBG.>Be_]^`'JSV?19#GID33m4eNP1A-DSYM<'([>%X-lra-n;-5&trC+p5s>=N:LIVm3>a$j_igY=,j+c4*keKqn<HHO!&k'@X@Y2W.ODM3?KJ^c?#1=,tPb[IC_.P93S7]*pi0qfXtq6%]"&G'duHNY3r%=13pd6]Gs`lWVk(;$ZTP`mHQpl:DA?a7Bnq18Z.D@pBn+TlBaX7p'I3'.&cu,Lg)];@X=:M<lH8E!I,:\p&S[#`%ahk'%<1A2TUK!rC.j9mML5Ma%D(7Es*HgoFP\6MZ8jk"'Xq;k>UTG'Ikq*:DMmQt&;P),$>".-cj`maq]7V`MNo:VkR>tei&f/5t%7j6];\)+B([%e,u>-W=9pqH.Z;c.;:4)4?P(bBFI7:7ms,0(7"ipOclmjG!S^2'%03[crU4/1-JFjA&5Y0l[9HjHb"m\m1f-T\NX%4/DIf3sm<Bd!U&Eieb]5g4??8=1^r6,JI>4!IQ@fNHRftA_daH+KUB1kNIFXg2i1<<i[K=(B_]'\pl#_bY4">7io6.;kr0rgFlU^%rRpVL<+g^0Y'i8HJ*K'\FnRa7QOfDsWs$u+hfEop!U2'PmHnpiDe.JeJ4.##S7e_GDP.BE_dpQM.]1N%@%N>,CAR;c).9eMW9-,k%RpGm0d'fY;H1\X;7D6_5feFL\UiM$08#0k!d-g*Z7a*.30hl8$2)ef_".oou52AJ*=<I(9:Bd5D\.;8'+YkjbT!+oqpu1iH?q_5^%0rp'QP+V$G48P6lTR,tZIPUCE20#m<HkGc$BM.fT`pg/DPmCQjcOLU2h6gL[S]Fp7HW?\D9SI9/B1H:@Qj%#bYY,Lt+c9%S#ikdJ%Zif<LklU6;BQ\gg\j;r(U/MPBlp)o;)*G;*ES;dRrJerf?JHg+V&oIH#%C)p3_r>gF4=dPJM;o3#&3h$l8)\mKJR#^:XMI-P!]Om%@&@r>#W5K?Z(DFmDn#^DE#Vi"G9mOY*9EXkRZ!'WP!gKEr#Bh4M4!>/l*Q@g4ijuXL&tT!Llb5oHoY)Hq/^.$W_,?)js\8Mg4:qM%RS?\;0bS%kLtL'c/N\V[J"1]'c''su2iW0PG"6D?TSU1S0!q2e1Segu"M$=b\;o^SP.Eqn7h-hUV2k5;j:JJgf36S2Ck!q`Ni/u>%9GUPtGP#SW,JlT)C1?KRPcUhFl9O`4PoUi5[e%$3q;$h]@AR3m66uc=Ql[LZ)#0sE,q_-35#V"^2<f,NWRj>nSi*O1hGquEAI"]n%\tcF<%`B+6(!1JhIV;>B-_[t2\*++*p\GIo8>Z[]2,WG.F,[HCd<Ct%9skupZDF]e0JjdP*PM2Z@]Jg*?%P%qWjY!6o:(W;[WA#e%is(re];,+$6M0!j\jcLi"Su$0G.pAo-$R%G]P7_1g%=!,*p/[@^!Gr?ac;/JGu5CTNg>7DF`6[teJ#ue5,6k^mSOdlg7T,WT3TAU%837H]Y0lZnKp/8g\tbF\8uRNp.^L0g#RG3TOn0Q(Xe/g>eR5/cKN0k86;80!OC)1,7BO8W3`#-+i$Iaemr@'^\"5ii;g^Z_&ab2f%;<_PR1@N+gP39GC<-e,l+BC3dLI"n=oe;1&$%j)A0Ska8(OHHP$so,WLqVAZ&:<^oFmf>]iR!(8dpB``(od'='6hK:-T](GA)l<q%(nCo?Wq.1Hm9?AjQ!];RM$J1g.,GH2RXC&/bsJCMWHS+WXXQfK42N^1WHLe(MNSG';k$`JZb[TkCUFgY-PP*0X`j&`W_P0Mm;QYQ%*>_Xc-W6h4<]`enT)A%:[?sEE!gkOf:9'j.%d"J$g(?2V?KO6lD6nhhUGUiT"_-]k,NQ8$FT&A`a&tRn>qK'V*LtHLR,"QQ[6#l+%1b.)EW6:J.R5<Y9"%'1qO6S*ga70TYgKn,Hq@)a`Vq\`HZo`T?+[U>*iVuDPm,tflMV_PDP:6_ALE<Ri>81WH/D:7A6K_r)JbU[\%Y(+WaNJab5Da\_2A7C(T-)hS(I>FT\/K6hMeJbgJ*Kc"UV>`QWG0as]]Z4`]Dr.KnT:?98hPNLrBSKk/74qO?*Ja)lR_(Ji!u>:&%HKsI%Wjs1V1;o'7P`DVaSY)g_c&V7q"uUZ&>EW.&lpn`TQHu7]O4/j@gs7Gp:-*/3QN"ZeFH1r]*CVO0V<bDhT]s`jc5j1HV]`RG%:[M:Ce.\=W]'%t%W#"No<Va0oPO&^L5@ekUp$(!\6os,'CoBMn8CK\DmjTdFd!(Q"*kccu3U@40'f!CU>I7Cca!OPAoNbHd6tYoB%St_&cm]ObDJ8\&WbjL!tHD8XOi);okZ\PofYMHO/5\hOR3LV8@gcLNa^!K3Bg4+!:3sXPWaAIN^.921Smf_>bIFF<&bnBML%cAh`%mc_p-\I,^=\7/4p@?;2:\L1@LSK3d<g?-.:JTaQ@@?OX@E>Q<P_i:[E48Mp@U>V'CE4CRkVQ=,idVLSX*<j,emJ/cbE8mPo<JCo>%R6psK'-;@^q3geu:Ydnc9oChP']s[S8jsPY\pT99?H'pn4n%;jUbQ.')cVE'Ya5A\.m*hiI/=*g=-N!'5W?q/Wl@aRDZf&M-Ap]8%4Va_E\:H7Qm[7u)<l-U*e11COUPscR$\83h]^EHO#2$aq.Vu&k<8(pIVOo,We=l%HVu:o<@A&iRP\tNO*B?*0&b4YNR-K<O`,j5@%RM2A6I'UWY:dd39Fcg]Dns^1,/B?98;E8m5"@ogG%o);%?7+"D5mcr-$Y\X#*MHP&&\AfoV%pE#C?%F!kS>aYf6`Rb0"p'[J`>2Y%\USMDRcV*RhF555Q"cM">EccX"a!`6O8sk_KNO$Wk7"0W*RnVl*K`9;Q&'VUW@4U=6Y]Vj%OF(Y's[*FA=]>sF;9;X:r!DiKqMH5%a?poDPucD'X,Z`#h>ps"^@r\HI<t3AdK@#d*V3N;dn]*DkPt_J]:PP-0g39aG;Hp;<._UNcRl_#7%!-Y'a6Z4f;0`4kfBo,l\M*#%<6\UoRiAc=`9.n16?mrsdIGQ6d^cFEEfjtT6W;TZKT.a0>t:N530BKT&t<]T0;'OnObY8_oIYK%Ej5?8<fhSk[qHKpflN3LitUQs%7@/$#o"'iP+/uWLUWcLKE-l'EaR/d.^tENEe/CP1+S;%?](X?LEP`*+:rKqLl`6tl<81u`HeYZQ6dInjqt&ZMdF;P_O,j=Dnquql%U8@6"Whq<8.?&?'k-0co3[.5($JRW,T?Ipsl4UY@J<";3*h#pQn?s.['eG%1d0jW?5Uji^%n.Pn0!2ISellp[V=*`[!Y2p<3:51A%LTp)Y(5[_i&`Zl#=+(%7+L*G3MmrhG`%K0L#ig,IghG6r`+kQGPa!#VWl)sC?LN**^bcr\`lDgh)idtXcp"pP4/\rY/?`TYZ_sj-%B4npq)Bs+[\Qt6YV5*17Y_nmHVk,%M?"42$BMH\o5uFcWF,uVE8UaP=*m$m;?o9Z,o!;L=qG^Etf2II]dLu9PpGhQj>:2Q2W'u:?%*5-VT"5EeZFR)WskPocqc=rX6J$o=RkPtA\B?]>ps(VN1^Y6I&ocnn_c]>N.I/N^DLuqY4ppWKQ;FU>],'LY5<EEpgk0gNt*t(+;%J`e%X^_m0,[jJiaXV!"D;T:9Pf\EX]1V5GN?kp&cQN=qog)<k1L,=&M#GML3ca_slLb\NO!ZSsmZt@r0g3'':k'uNmbs*=5b#Bcn%K?T<cFAcf:W_a4A0&XjY+-f:Sr1Wo>AjJhlP5k)Ca/h#ALhW&g*JC`_h1FX2[WDXPcbbogm-fH%]6$3+r_`V[,3TESG#(FJGXb@Y%_UUuk!9'6!cC%92#eGJHG;7-7C:bFmo)LfnO!G?,&ucP=YrX5.<lEX2$j`8i'k`F*`CFI)UIWA_30ghX^p/&oWujM!))d,UC%aS)%ddgS"G,eu#kN$0,6H@FsqEd"4FciYk^o=Im[PGG`rVI\Hk#?S(Vm_[e&76pU([O4W&F`g-MIj#EiMcg9.hN=J&V32E+94Bne(E2*%#,)p?B&sl++P:jj+U?H$S(RG.:'&bNj)NJO-a?PN"COMd"!EhM70@gi"[]@-Z9mak1h)tD;#*\AYKQ-c$DnYi2=p8C,2C5AHCT*7%o8ip4b7'.:=rhb&gFF_MW*N+7#%3jsD<-eu=eL&B/;?p+'dCPc<D]@,8HVN6SjcZfro4FA'efI&Y[%65&^_9u9h:WjWHAU]`k?KT%TiK><e(HAL>KTBQQcOS@8?32_dl?WK$T9_uK["\\&78'c+09B])=VK]4\g;7I7k8YHA0_oPcFF-k[P)o?]\ja=RVfcMHU/q/th5K%EM=L8*3&V`Uf$&mLuu-h!b7k(ifJeMV2S37V3S#)O&/]kZrcGA;*?6%L-p[-@<UHL$qI#)8dlu6_$3H(MEq"n5a&Z:q9W3(PQ!qQ%b#0o"iM7YgS_2<SROQ@h?)LKL%'DU\6cm:VnOrY7i`jaZ>U&sfEjRMn/#i@E/tWP9<ID`%RddBUjH<4q9V#]gH4h]E0dBYp<[?;i%bTEtR*<LIR!C/02/H-NLW%ao$/tc<+(F[:(8B51!&T<RJBIj"qE.8]M=s,RF(DPDgA;PBo8M&m:atY$^Jpr<"!rYMt/sZ<K>EiZ"%C58pV?gS9l$iFbH'ce<c(H.)t)4R('d#bh*bCF.pn1cpub]:WESLO:%ETEeG;HI=qeK3deW!Ld0@<n]Z0=EA`5\1;W#BXU_qG6.D%@h-If6NncWn4BrA?k/L]e5"tl+7fAt:YAoI]VG'DJ@I;$!NS3=q.mnE;%7Mhk*!0o/<4i25_muTBsn\.?s.ZoSi[nmeku"$3Z'((%Q5-31a.C6%><SZ%DEMu1ZjQ=/A6"%q0l<"ahV2j(0][6%>L-5A5BC'Cq3dQn1e2qW8U"R[Yj.2\_p,H:@,UM\p2l0S,_,TX3$uO-%$>l[V^0*)"\<&6+=PoJR\VY)i"q\:aEp4F>%.dpS/E.t,[AJAUZ@)I$&Vb.ioUNJUkZdo0Qs)4)&hlYd@mCC>B.@D+O7O,qk^>Ht%30r^SNYdRQ4Y-6][D'Zs4Lg!kh:aStCI5t^[J03hoJ#G8-sj$(*3XY+r$s8^#@pFe[.7T%MpiKb3%LYMcGL@_TIm&P+@G.#RO&B;%TAAukO.tK9@K'pT=Wgq.n<a2fKG+F(6Th79$m%)uVO;m-F_Uk,pjgpH_&h;27/U_$!F@GKU=H9qX8+DpESrqRVXfWra!cL7DTJGf%&HQUPJkLI7D99+*R]rZsI0<1X]\\e%0d*<5PoD#EB0_]4p%Tb>1H_)K8&tuk_V/"n(FK2\9bR/os(6"I[5,^;*!q<Zk#Lu2]\<8&%4\coS[3D:5Y$dpYKjNTQd]nMRC+pkTj]cd/6H'q6@Eb(pdu:T&dmJ,48;!e%k=#?8g?:n!NeHsCZV#L4?LN=.*[`PJ23W[4>:h]9%\9UsO;6%W4$Vs)FhWK0q.n)L/*HA#r#_`U%KU+o3J#"USisMk'm@HG&Ooc%FdN%c15&^K9&OAKi:>f*bAneapmT9Q?%lXLAH&kD&%g6YeUT,DW]>?<D<P(T/-=4]:e1VmNt\4j?^%p[h=[JO5U7[ke;3PpD^dOIMXh69s)'F/=9Q?H2^:C7S[ASaS?I)a>"B.Qct:69Bk%72!tg<(R9ui9djOm>5gkD^A7:!(;,`OC;DTMkT)3a=(]i=_+NR9XcA9)TH$1ZH+lFOH!?S!RRtVA/a3`JER:E\#He!>ST$rk3B0G%g@tJ2>Q*;JD<4W.*b>luKR:Y#JBktgIA)K$4!VHQ$#U'Nh&'Z^('k$5=!amn#FR5:<&F\q^:%RFN#%EXbWb6:'.h*oGf'('YoBM-%ZX/\(]Odm*'epVSE427"9N>J7,fWBf5\<$+@kPmD]rn..KQ36Q_[;\b@M<rjY$c9)KYhAfc[43K,k$ft\@\F=b@ocpUW['!%niJ$%n+VNb&fVAt#Y(mXF$[a<^L[XqqQ)2X!XH<Dc#0Mn+VVba"^!he9jCO&\sg\oa]_><%+EIKP[C(dJMS.?1r]c1YioMX=,g]CfT*TY%0`CN-c:R.+525dn6?Nl`SCBa@Q6,%IY]J%@dE<5)2FC<%<R2'P/"!\"D]P3GmAS\rGdB?:h.%jB,?e^3o?c<d4%Vt@:*;M-ae^P0%7Zg6XAM1C.9gJQTlkijeX]nm4\8K`(1h(4Z;_'t;,F%c'qF'DF,LM(9e<_osfo8HN\1D,]>O\=2qm"_.KM$=p;*hGU+b$fR*if^g%!g/8Db"[nE_ci9KHCPf_`c7;JW0JWd?S'2!O]cXG@p#lf*/_gVn:KJG2.n`$@"Z;,$G/r.@h'`?bAb8;H^;i',s"7N7%!SEs,,/C%!%&bB-u+]EFenbb@j@6%E:IEak!T<e"=Hs'LEKtS/Nt*5O9M-;!5#TOB.<[57M/!([\[Kq?sk)B5TC0P@-Paq/1mpV^2S)4=28O*%#1GWL3`HjlWI,=hlnjY38^s9jL_[S\fF*j)m(IM'l[rW%I%qB-lG'(h%.b+op]C?W[#-.DGP&=QbYegBR#,0MK&r8a?gJA\.mbc%%\73"nC8>bIWI8c-7)HuQ(o$f`nrHs*1U]hn!8;FGUX=O]H&^n6UQ%d;R1+Y\(=F?AkV$q<jJA*qq]p(AEm)LnE$Wr-@gN(b-HB!r%kB7I?%!SGB-JbUd/7(rU,qni'<QY-9`&@@gOgb*;4t0a*&_e=ds$Y<[8*j:)3!qRZ&Fjt)o/b3<\7e6e3@aPs.^rfUMb#=hAWU]h%"BhBSb(DBoC_jY"dO)A<EcA[^(cCJiqr]U["RX`l:Zh=(5aWgPheDR\Zso0%oT%$4_^pqrC#_cVNWF<,`uH-moj?,tQj9sKIKPsM%A=<S[(2e:.P_PNM%$sTE!hrL%#)n[CE%%NC&3h?+3I]6gi1Z]+eF8qQ)[s"iET12A0'#qDbcsTr5hoN'baZT(ogp]/78D$_$dtce%3)N=[M+Ca1*#h:S&OeHY'[3.i[I$jc]c^6Kfl([8k!Ls?\Z3%8HsG343cW>L27El-6l=W='(-6i[0pj2`fAT\aGl0R"HqkgT&l0%%%:TkV<uWb1(dFFVR.;C[>C"<O'.U^:7c=X-_dLkQ0Go3:lG(2j_4*CmRaWBbRR%;@0P<JQ_-k?*j&@9*c6k>9[H%TZ8UJ:+oP0.Z%\F9_K%#88d^'_.]BpB^6/_k[7iTS1ZLQe;?7i;FM11/OUbZ`C@lo%ttmDoSY,?uES&pFW%&@uYA?e&-;Qp!+Xjca$1Z1Jf;($4#$%U/I;B8r]$[Z)tKk=FqM-(O[QtZ*@imgY491c2unIB)SQRF\+Rkq"6V'JH0b_lh=YCHssE"FVhnY4_emDqHf#p8ZPst0N&)?%<m[Z%QN\oW@X;;kh_*Df?N(YVmfM(9S-6(9c8n[QI%cfj3UD3"D+.-N7m!08pcXjJ$0d=]')?)6,p/n%QWP&0:SI6sQU$;$.TIuqBt"3U%39fGS._8UT3:g<DD&(s-7g@Ytr7\\*nMNdReoKMY(DTW>KU6-Gh5''ons7PX6!8iN_<`bg6@?<h9?/kBG%T68Jg&rO++#%dd#PKs%3I?u`@jS$*abl"E`b7`P?*Efa;4oV`o6W7WF87,i3e=0&k7`8=>ih4GG?lud7@u].<I^p?#WW]VAb$i&k(%5]VLo?3,B)t54rO4P%ka(lk4X_Zk"ruWSLsNs3)uV'V/4k?DNo'@%\kG.:'!=_rT#t[A67j&7;$WDGQRB%=,P`?T6jpT;.StnD4UOa7C'oZ02qVAK%,YIb%_X*]^>+*f/Y6*3S(-,WH9lVs-pgaMMW"fOu.Y3Y$:EG6'<hG2D@MpW%i/M<tS/e"'4R)LN>L25.ZgXm6Z1HbReG]PMT!>Wb,[Yr>%7LLQQ_:nH5/QfrAe#l@dMqj8KreV[rE=W(\AE`fa#t>Xp_OpHm!&F+b)J)kg(Dm:5?mC".EC;0Kf@F@tj:Rb0PpGBg40:U@(+<sa%>(*%q+gNd0Q7jdQ\B(Z'%1YLJ3!(uK\E6OuiC1BKb//7^'*474GtMR;N[2q,ZU?/F-5J+"G95Hn^@;+[al/U=?J,-/97p.l#9k/1%`8Q8E+ih<]ifS63q[_KpZ(<Cq"D;j@/U31^TVn'8q+S)++L9lM[?L[Z]^19`=NLkU&hcEVimSJW\^BXl2%TAai]hZQ(8DFm1bE8+%!or:dT#jukD<j0<pVtPq*$XBC"L@D=QD.hY$BECkod6$"Aq-?5@H844@^TuZ?Is-E`SHM2+1#):APM,P(K_;Y;d=SZZOKYHD$uRo%:'kt[PB4\`#`$`2jFr\(-cM#e1De6N\E7*l\@p'g$B\+$DQGE'<VR(aORkg;GCVBW_.88E"CH"-D_-4JL[g`UWrq]&&.kQp%ua<O%C4S?I>jq270D9]Ti*gPkjMnI-K,1!qSApO@nl*K_V-O<jL%r]dJr!6RU*p#E^VuIUPi)&joi"-tCGL"&LYhVQmTkp$j0tDcb6P+@%_!L5"_bCL=kPnf+@'IMfLmo'?JK;Mbpbu1J'sAr[@LVJ;SA7&cU<?(Bqa*R3m85_o`KG?'F,LJe5SM!0M?pXW,%))SBKS'4.kk^t%j4(tNY>'h<2JmSrU.4*S^dnULdX*Lc*.6_^7;ui%rY5pWFKE8`#_?)Y\<HIk7*i?6keJ_SrDoBt_5osU=2;-.=$YsfNN(Va%J^+&%0o0\C_gJ'3&@d<\,i4)@N/qYk,17$_!Qe7UKAP$;.j@tMdN<sTYVpIb,NK"%OZ(X]4@L<m!uKY8Y9o_^RSuJa4NG*8Ss.cRhnI-&%S$?N/<5j[@'CbfGWFP6L87X:DFur%QM"I-YCn\g#A@0Lt#fS6EMV1>IJ!J9N`A2HVoRgXSVk0%$qp;pp8W274GQm3V#`!O/BaANL%\O2b4<6F3UM#D^R<&-]?ZuAh+fg'/_:&[tT+qKu.dQmTXW%ZAdNs!(s!,7-L+0Y=NAWN&+meS&!D!"OhMR3"30n.#rM2QZ/p=^r>%]j_JZKc50XSe78uS.BsdL.HqdH):%<,ok3sR$/c.3/>.AQ;Oj[^3,L#(A!q0nNl8gR/W>PR2_4>MqT5Ce`MSi;?"`iXl(5Sp7?71%T^4hZ..JTsnk*WXDlJ[e#?2[4e:k?urbW*qh[3%mM<_Gg_prg+6Wi'Fb,b=HXa#A_LCM4o`5Z&KNjUUi_\BZu.m9"p+$5]qc#h_t%bq/2X!=fr8.c:(-[k3AC[&Km/Y?)S#b_X!9I/[FaTP2bd?t)o@<*+9[*J3;nc(H"deQLfI%\JH42Z]\MpS2A]""#p@YCQb9:f2q<%KP8d%aX6P1lPVdWV'@5&XHq0aVJWTNH[GKMof22!I^;D(LL`Gt<gb<;bk<kM.OKR)e7%VZ&:(J!30h'Bg(MM5ULQ81/2f\P0sl#C%I22'GW.Q:T=BEJ'(X*iN1O@1pU7*8"J?TNE56@^)I;UcVOlu/7hY5X^U^uiJ\K[2q3.'S&5q7<'&8#aT06b3>KdlE$C5A86B@R?'%BB*%g\TFX49L\'N6c_k?H@*5\cu='MgC^R(j,]5:!4hB!3U[I1O6C>:*%,J)\*`G+Z:t*_RKg)JdA(LQ..fgK7EnV[_7tG2CH!*-%5(KrAGc*.a\-5N<Jg&@##L-X]@i]n/j$FV]0&gHo1CjJ$+EhV<XJTV+iHkpY\]F*JA!El:7ra1/ilu,<2?flp#h:FPcr<'sO>f2$%'TP=j0]M1LUmqu#3QKnW_E'gYka9o.gD.DGgG*`5LRd3+MJ_)U.`![=Vm3='_E3XgOA?BP-T,@CLW(n/R$mAUpPQ^R3H.4<rj(,^%7]0OX!psa5EXVi)Ka>%?"*:*.p6rY5@LL/ZQW="KH84nAL=0d$i!,h8rPc!uG7Dj+%M`sp7=io],jUHC*)R[fQa7+,O^mBF`'?4(%V7!>dmYFj$&XmSpI7A$a==`Ga0:n:)=Ol`:*@`h,K&'G`-Hl]&(,NHOI!2U,<=s.6cRhUX"<_e-ndigDif<4ama)_(a.C6'JLRCY%:b<jV%^:>+S-O_if7CPALZ%6pY;(8>5[^4Xb/fAn$:5mAkq2?HL$n.).it#LFcOBUr%Keh0Ru+faII1n*RG/7UD,H41L]g"7P)Zu%.Q254!Igo5c=?-h5L^`3Q&\$'>0IQel*C)@9AZ&C7.='^)RRmX$\>^TlH0^8[tZIBFRQ#lEi,9/rVekoQs>ZFnZt2;dg.%_>dKk>%3g6Vq;(iEAa]60&9j8Z?VTh90\?[NM#8UBAk!E^#"iOPKL.)kZ^m)fL\T\gUe0&_?^qgMqpcAe-Plq4ceQO^Q7_:Id.TC\%`JOdN%3poo3HV<85V@')8jDSTj,'ET[QDgRL^#_LeD]'>D>6.[r(7[<-08j<g7e4j]6E@0$*?'84)Jt,@pdiPb(V:[O>EC,,;fJCJ@1a/_%@]+-!`,J;!^4fqAT?.CE]<6H"3j8G%B3i=TGmb!+5)r1jWb07jp(kO$L_$Yn[t$#4Nci@uU5WGWF1nlgOT.-D-L@kWD@m)GE3Kn8%Tr@:KZaVcKm=r<>ohhHi\$BuTS\5aLB5\Y'finIjp/Y3<?>"3D]BaIbKu2]h'$;W.\'V'2/K=O%RSM%uF.'[fSA#.PjUHPEj$ADd%?uH(8m/<CUir0KY_Q)ao''WV$dn&B=+p&SE>?QWN"+;[B:>[fXd'k!8qNb^Ll!+&1HCT("]<s8[>MrZCl_6%<jB8`H(,k#@<`jkD%>&,B6/?kP&qF7dMOt.(36F%e3BR"KZ'pHJsUm%lF2GTH>Ts2O::r7suV(s3f3iG'\$<1I=/I`sU/;&YrJ&?eqFM]bq'p+:GN)$Zf%\jc'D,Zu:7?8.m[`B)@]HrDi2#H"<m$c,GKcgjEgr2Ps7\;p,HYJ_pg9lD'8<RDF7:ELN^'a`?r"F!U@-X(FJ<UH-Zpr>@nWrMWT%WiC"F-tM)>s#B;A-XI/aqZC['>[-`d[Bk/<j$uU#"37[f^_q5UP*8^MiUgI^(65UoAt<ObM:6P09H<8L,90p#im_*QX.5"[&S'fg%ba:@11F>lCh3^0W<]o#_]HM-Z3,CBW0'1Q$_MGk3jZj[!+_as]$-=&*E.=2a.Es)J,>=1qQE`ls&!Q=arFUcTIu`2A'$>7=/*%Rn%SbF^_S@"S4:e.'.+tp9RFMZR+E?Q!%7K>cg*)h_bcUV+\TePYeT^n%jgj_0kar^,43mrrPR+9;7nnRXJp,Hci'>O(a]./q34T5BW%[\RFG2KKl@=TjOC//q_[4[1l9&O%,neM*(Rj<7`Uf#SWc'/ACNPUus0XB?S3F>$4#`e\GnA!sIue.0uP33ks[)50%[)I'!gK*XLB%[Ks+g2lX,PJ5DHYfcp>'pQNl<.;N-ha!<hP@#Nr\,Y)%5M]B?[9.'pbQ;:-+,'4j*lJj7.&[%(VHFo:k_?]87a;<ls5N2e#fcn3[%]GfEHHn1QO;S!/!5Xd-"MZ=XX%9it!N/`j.O^jf]qX>+4?aJ,s4-N394'MjU[M$s)aWc7gZY<q^qW,M.jCAl#@t<`i@#NB1/e*@`%_YI*[Jk3>kYoD?g=Lr`!k\Li?,Tq9=#dHt'H";g5WH+(3[Kt^eGmE\P&NZSK-/I5ur).ft2RWm<3gDrH&S0VB7>MDa$oqVS=R%8,%&71LH7Gq^Y/7dk#+Phor?Jp_ah1.B(q',Ho^dZHB,!a:+QH0lYKgm%>N%mY[qR,o`Nr@nmf?dG5pk\BdOZG&9`AP@8!js^cPWL2`%Q)sRGG_sT*9@$u(j>tTG%@Mp4TDl3Sl#[O0.#it40#AK:/r[Lrn_S)(Ob!(XfeK=]YR8&8)dNRK8c-\c/j^AJGq"k.;MS7JpdQ(9%RO6TIUPj4><2*kp(BL6<^X>P1<buiQMq"H-O+S,MVi.2`H7`(,#_o,&_8Vca@5sc1U,U`?(W#?C08mshTa+hkjne1g&IahI@WfD@%m+Zgi+CTpN!-+]4_FQr/J/DmO&ZN`G4(/9l&-?;gN,V-043IpTD2H*7[rfIm4)rBf(\,9#=;[iM&HK\%2ms"+JZ=1d`YGJ#ZCE61%K5sC733t[.A3+A>W2925E^9ITFJ]>X:3k@[?QiN%5>,LDTY?Au]4$S9R@hqu+GsRpX#$L`7Hh]>cCdcD#tPm:_i-!q8kbuaAg1**%RhB)<,#O$6..4++.)K!.I,T>GJQ]IQ?H,_Skt&!H^m$5KCZR)e4=,m7+mI6#&k1kpbofeW'&c&Hk)(Dr*i>lB<`13#E/l)&=WiUK%1-=(BM'<cfOpIR,6N?)WUrX7D23523^_GaBMBU8j_\Uq[(V+>*k*PC=OT9O,8-#22JoMA%h8g>I"YMTC60F-plfHP4\K\]Oa[;Y@%7532j4PU+C#YL796RRaF3eafnPUKG/1F6hU0TP\YCHN4&4[$jP2ks1\8.hP&[J5aeM?occjZ_uE&R+V".YhP\Si'n$?,J'7!==O(%a-7d"P8ect`Xn8l2X_J,1jgLQA715_#YDae0gr5abGe/A+rps@'8)Mj_B!c&!^-[B9XI>$_&=Pbp!+*,o"QY3LSfZ6YId:&#lB/d%7.>Ut$j$AC>i06T21c+FWgHZ(#pNJXAIE[1#e`(V'W(^==q_Z5LQ4A`,`IFc`Xh#dPr5i`q&ql\n<+I\+nRch\reC*">a$$rPB(2%(a8_SbX8ueEA/A2IL$KrF"0CB!YT2a.HcK-9b!-Nb/R;-#jX4eJ][."EllX"J*I^[%&ohX"%@m`G^,hbH3b>QV8t<\*[1j:;=[\$%#d5Fp<PKEHL<r#S&I:HUKV%Hu_f]]"`a.d1SJNKoL/fd=c3rUHZcbEXK]b9L1En27Qkm#5e!1Su?g?,MU_)%i:$iol+Zq(?((a"[%r/u?#l`?2jR.4nDcpDu'i83_*&>&34((7J\?3ZA6C*,F6>gp8-L@B7a;loOVE%Dr^Zk.I*gcHlG\TD-`c7Qp-NP#hJ_H#rF8djUA%hmA:._eC:hTb;aC(4mch5#VSn#\KBU6L;W%*9N1MLn#8*o,'U.719FD%7-I/4D!T.E$BK.TlWSG(n$YciS9Oa9B1c2"GRm%g^n:M%1I&TK%Y7o9;ON(U6EaO%!_o_AfC<NdjH+mO3Fmak3FmcafBntF3M]`MP=%Z:SK.c*JtseVKGWZ0O(%F4Lp05JjQqs;7Wq>D>M(+>%^3Z=ATA,NL[d01L6NZEJO:=[.#YhF1Z2rd68#9tZ!a0+jDOg2``6!:l4b;9DN#tqh`_7>##bOe+%K$b];\&^:5ut6l-p`Mg<gKcu%6o[1S1\>dD#Zc!9E9muF?kOHq(a;@m4#)HqducfE)'[:sc0buP/n!HiN$1M$#+taN+Tb'1!6u.l<02MW&4C2/i`asU+dd`<[i*:2%pmTYmc&iipCIsu%>\/ZZ=td?fAVL0sgR^,eGS++<`"75.OFu;E+i#M-k/7gRBQ.,\rYF?oVhH77Ta=1l8>TAIPThCV2_@&K6qW9J%N/^K+K5_WZd4Wd3\5::WL@RWT[jW\L4p\Um2:Y5&!@/=9dR!BmP]]kj@Ae`gOenTm)^K']E,m^)`^u3"3TG^%cl5kSOU=GT$je="%W$%JH3A8NQk\Lf<_]0+=<mQ_iCWIG]#Vj>ELjTcr%6'V2V+:mn2@m5%)C)&>H9[;9Vm8Sik%p+gL?hfi\U%'c"O-t$/j&@HY&obW%diJW+!Ze*+W4rVXIKlOIL=/?hicL943?;X_OUa]g<gQtWJ4(5fVUIh]nX4,Z#K\Z%oC\tZ5rod\+<2"^^u[#Vdm5beaegB25r-<G%X_W)@8-bXp&g4*)"AJ&&aIBeoYsAAG6[0`+E;3LSjQKR)]],DOWFJ2N"BSLL76mB+Ye`lg#WX?U_b5%p#S:$Mo:%%A0GD\Y+C:LH%?74(@lb./ij3UurMiKe$UeNZc\AsV@"JqQA5QM0^W0:`.g^"cH\\eer!_?X7l0?$7")jSp2@bDG*:k(o7UGCtb8uGIZMf[b+6_br%@*UMML)I'/%OG=q&Fi$sOK^W05"b/IV)eJVR)VY$?`giZjO,jLJ/8tEXc_f,[GJC[ERN]L00&o_?S+E.%)Z^'[U#Y3"JkdD6V?(r%)&]]S(Y@mnBFs(MrC8B4'pr9h)0Ma!K0rZcbGWs<hmUQsHi8m/mo-b$)?GM<%6\J"";(Kt1b"&O#pA#=BK_@QO'Doe^BjImbcj0/%)X-OKG)u]2I)GsI=Cco77G+"MALKY,8PHdl'Il(Zn??HA%jJBOFlEXh8Sk:qr$XNn$q7-e_YWIuUj]VfLIIAFb!uL*Q%Z\CA138:%ZNeDS!;@5&9lkq8j.g+TnI[GuApE1Th!!i]iM0K'#p4])jd+,=?n>XiSFFq2:AEILg6AF(bgPYAqrr+KGF5!+9]m<C%FV!aS#?u;%J>HZaU^$J/!\lL/7r/__Hj%Y"*ug0'N0(["2F8FSn.FsNKF_JUnDu)2<[Q@aHU*hb&MPS[CbT^gkO,J/pXeH$&+.OnLdtm6GY7bp%==8J!9M$*eAt&1J\5>L@(a>6?Q-<p)oC<J1*sM,Tb8;oUo:,mD,9TbWkZFX.?qI(s4oK@]jTE6orKYh[+6"b/8&g<OSa[5b1l-c)%.E]riT]$"1<8`,],/WN1_"XM,'O"ogjX_?_cTD3MpZP`?HdJKCcB7PR:hP,C8=YZ1`0g[d6gU4>TRT)b4Uj'*Ja<Dr-Bar5O._\;%<cX7WP!(iAaWA,sS`^U=*dAa2"\SC=Pi=M1o^75R"*oOEF)ZriO>lr@2:ZF49,&T_)<3AsQ&Oi;ZKsE/?:eXPKJGU3K2t0UoQQ#p%Y*h-)3l@_Z?jr*H35_M$cL;+$E\LT<_E^(V_gFrU_#q1@1?9D]*dmfO\C7%r)s!E2`!@D)l3*/u$,M8.#;hJ[_1VadZkZ#]LR?Sg%*!m[H"bOc!,7?m*Ch$jD\SXD>4S\g]-/1]S!&bYaD*6q8:,q8HEt=(i4<+_[O+<'e";aY`mYp9o`utZNN\h81,;;MokBZR)J1g?2%oAEOXSPGF4&HM!>3#6`[!E5SFR'9NIF^RD>$A%FB!ttcW#Gq`uH^>XL%^<NdSqm6Wj`pii3/s'`Oj'+RaK*K6Q6!VE_J$(XrYEi@%KGNOH*YH+s5Q9;CU($&W9_)NAMc'PSW`XoMDr?e0f>*tP5eO=OBpC6E?Kp+Da.]2KGq:#5"pA[\Cd>Cdq?bP.+e%5rc2OMWZ.On:%$YX&9^:HgI@R9(CKBBh,8CYWPpH#8Qe217sFJo!Um!Bq&"u"Oi%cV>--d3on+*1>X/Bsgr!A0;$`Mkpc=-\d_VmL4;,p80O!IP*M%W2"N1)JD#pVj]6X3!%AJA9KCP(J''R.>4:,USpu2oTu*$D&o+aP?FEL=*]sc^;Tg.8j@_<:;;,uM_oGkk]`XU6j40]&.ljNAZA.F%3J=ajVLR2;J.sCR!(g'dc4M*^.9uqNFI$;5o7-].+0@j/qD!Bqc]@_gh]HS-ppUG9+92.$r[8lgAEmh-j\!$q6=^NgOWs\W5H]m+%+luR]CkM^RO:69G-:ucd?5"W##u>*R2X%>taj>^91muG@*OY1X"Nq508sX>@?\t(W0TNGM?e+@6bY3b&04uUh\ftf7.JK!;47j>`%Ash(<=YlK2=+ni4l5NTC5*NdE*nj2W8V8XOSk6f4m+DmIL%(N(cVF=1cjSiG89g@`'D2##BP/?#,*cMLI%O!*8TXUbBTi5rGr3c`%-]k4h"c5(:oN!53^S)#jBp*KiPdWsZ\l@BdT7/p1B+et-2*2C-!O'SCft_HYe.hkhPZk//BB*^p?]\48IbkF3D89LMWh&hHf=c+G%cr"TgkWs+RbJ!(\*BTHnq`9M-31I'#4*e9<E_*p=mUY'_e(P,;$$\bI9bLbDDu4jI4A*0c4c6fWH:?CZ;I0rYqgSQ+'7@+ggK*n4%k>==15F9=HIbJh','!.3fdVnf:Xt)B>g/is*IhboM6*4rp(rDD2FhkUQJ8(I&snfgk?_IicjKnrnL3-<k'#rq(R[AN^#taG[nGV8%!$-gh-p\+1RL#IMZBM!ZH?pUNl!uN_,#9!c=T,Q#FkK:<\kNZ0RJlstEg3objQeX+6*Ei58]n`Fh$3hCXI\]AHXXOiqrfGPVk\E$%nF!23i[BI-kS5O/Uq@t-LP4:?n@lN9mR?\Wnm%=!qf6I8&^LQ*9g2?Nra%i#kq5Qk8\uu%H=otPH6kZef9=3\OOlk:CBAk2gaa"a%89md;n#Yn@m2.5AHd_&I!2"dC,l!Jl.)I@qmq):$*a9f%YJ6I"4C:H/$M:`j(FAo]b"Eq,?ao>Lh$<QphC%4rq*%B\(\!W_01bl[%f<?(]qmq2GBtoC/'DH8KYK?[8`+oF(?ao>LqkrXQps7;o9E.RRn&><KmJX`rT+(L$!:[T@C+frCkQPB[8U*ZBYbeuX%f$"ej\.KB%kV_$YeFAuHi0U!a+t"c\blpC!8U*O!n@P[7(E,^1?'?1k7Jr%qi0X*uOW]nb>nA0D_7_$[q"<Pd`<g+s0?=f!_VY_8IQ+\sfg9f:%-/h09]I$qZAaN4q%;!2U8/fY)E^eLIbPIc#*<No$G)2C7j:8pDh7X(<qX9j],0&Z3&E6K?YbOIXm/23e`%Tkj,+L(9hd/?@k0sS)%`0Tm@TD2uG:.,iC?6R)*i@).E!KBGG(XbCM*^+P.@JngtHk^3]^.3IgmrI'=2TdtbQYlY/pHH_[$M\s68"14-Q?<%NEBadn$@5#'%;&6)\@ZTE;lLkjPHE"M!!f</nA0AYD\e!e^;TS=g+_>>j#Xj,)[R]"A6*CPa,3:]HaDV<--R^Dc`pY3"0bi5--%C0+3>%aF3pu)V%^M`.1KMj/B?AA$K<TGQ(WF+pcT^nur*JH"p*i1C%Roar&9;"dHb9'o0Pe%!B'YF::5pmkDH6q7d@"-_#]f;l1<4DFc?]X_S1fKjK%PKj$:"pZkWl-ZW'k-q8HXiRAi4.4?sdiZLep"H!(P_H;>+%83Orj%mPr9bNWMfm/sIP9=Kog4$?nW`YC?H2TK*;8B`P/C>Wo=M,4%0D[,AoY'VSG;\$2JP&/pjZn=jY"iLoj]&u2$N9DRZ]bob%!D]H?_:sAZD'<X*ed#d]c\naKL^%0*Vp.hd9(#l+X,e4,t93:?=\/5%rahMFPOA@rZ@3u_\j8Kt`")`=,,FGaSIDKVj0+/--.rGN;G"A3,Q2>c3J`o/:*4%>jbSCTW)O,W99fj16*(b,O)h']Cka;mVT@pK%AGVM/nL/?+G0$5mW>[-;Ln)UfFt[ndkS9di2;dbr:4MK1'+%VmnEiY@J*=$KEE$'qp[Y7l,e5%Z.V$)W8H#6--dnurb%K_5KWiOr%U84Q7lBbe"-EBc6+KYE^(+4.'#4D[r^WGLa_eS[9M"UYm58._dTH9>-L]1kIes>_lVH(tn6EQDk0@dX$Ij*Am.JIkbhbVNR):s]<%kT+$lF!g>_oSUF7dN'W?2s@G5?@S=s-fV<pYK=OOat!Ot;NiUDY`eR7#jb^[^HU#7M8KD.-4c%)]He&H+tlO+,2kDAfX&#9dn_@N%Z%Ds]5$#D!h[@LtH,#]-7Cm7YZ=iS(97>mK7<B:?]tCF!1`$:,V7@BfAs)SOaR!'a^N!aEMU1S]]T\udIXs_IV6rI4-VXF1*do56%9DBo;qrKGM,%DS>*m3QA2>\e@gX$Uj>=#HKghP!&bj>r<kY_=;J3=Of&$7o*`W^[Q`YJ-'3%e)Mj`*6C?PgeC<VD4t!rcLO([6r8%\NBF"6Fgb-q9?Km,+pIM?:%`irecN7Utj/Wma,;Hl#(8'O]?p<'@W52HTBn&q?oUFZX3UPCiUl1)po^RAV9tSDAO`4K"D"98a]3f%^$+kpGL[?]?D'eKhQO'38!2Yap8BQ)oWJYqMG\gUeLTheZ!O]>n)\l11Ze$nHm@>I]BmmO#l0@'HS=J2k2%Ut^63LikPN`Oa\h1Z%p/DP&o5d_#\1k074Yk6*0->OD@!PT%$NknQGd*MBesbt/K>4P+<^q=4"cG)+(OEn!cYTUmTkFAA"5cju=K6@0H8mgu6doke?c`i%%F4+BF=J"M*8.`i0kqQp2k\k!f^E2%&3,q2NoU6fs$\;cT5'r,q6%:C_/FU,2RGnMO6E'\FcfH9VXH1lG(GM/a^V,<j#5s73Z!!X,%1<+h@a&O9m8\(0CrkXre7,iHDDIPh8P;u*7N2+biQNWq5r3;L!'gNQ$M?L5\gl!<Dd(_,aN;DsrO<k=V"Y&LS-s_U93l8&RM^1qo%IP$bb%*b>>ndbVP<3l5A:+TPp.rrb[!IMXnTN<D&O59W\@JNSj=^&.u;\o"_TX(BK9.F^+(IXOreiR#GrH9e!/*g9BP?-P6IpH=T%XAckTL,74gFNm[+=f:-FKpQrCG1+Qkra't4ep/5(iL0bQIZ.J;jph)9&a$DPrMKHf`0p:6hT7R']s8_KRq8_WaYq=sEC%*;'E2=L%q<KLP"eC2c-(Q!$;:J`I?BB=/ZIUC4c[Yi4M;7^Sbs'fqY/ikX?,0;WqJZBnPDB,iLV7ACbi(2[;`MokbG'#G:tkWAXebS"-a48`%ktO?+1?XYeI2&C3j<"-g(PSe6j^*gjKDnK%>.T2:8,Yf)S]Fb<qKnoNUq7aLNF\BoW[6U=\a$MEJ$W1JaB2)>IkP>lFI/f)V6O+?%XBWh_En4kTs14Qh]/^4($b2P7erI6_G)__V\SFJa#[U.mG*:HaY*15"fF>MBL&JK1>SY.o.Bgj%J(_'$82e899K'\%6J7OX?7K1+%$Y%f[4m_78^M_k)7(]/EA@,RXMaH,Lj[CWcYNOqC?sD$L`3uDT(YP+7hTKa$EcaT\>NXXGCA[<$*X0'Mlmi_(P4FJ92emb0LAQb^%pI(SlkV[p/eFA\ipQqG#,2=cBbm!?L,ePDZrS?8d97!B)Y).JJ.Xjh;qoei,Lj_qpY/l%7i*I#nrd&[I1>jqM=+n@8jmT%]^Dl""%5WHOe'&i'G$R4P:&*m(R>R(*"io.2C>`fQsH;G-HiW-1(MBh4?@I`eUFY>\6cFYD_N`4:^amni&l?a[pg$eZ5j?Hlk:F+(oj4fKV%U\35Lb&Nk0#aPFohjat>s6];FnBGiu'K4j!5Ol&*"OAeONfrR4)e4mpka85;.J3(LfF+LuGI*W,s*>;"L"#/[nS@B2SJ/aN:]L9Q%H^%Kr"m1E8\g4p2X8^p@DD/H$2n<;=XWuXJ_=au^GEcO&67rPKbB;j&'`6K,HOsj,n;9Uq;I1#Ns))NEdd?Ujr*I#Vl)r.;s0*W<%aLZ.-\&.PtRELVBmkT=bP4.:77<_)fo'PkAi4ln(mfh_4>/$>Zs)($fL#[_*V;o>9i@$)boI)0g>oiW*o6THL8^2aU_bkqjEnF%3%J"=JSQsNt$PG\A_)tnmV5S'%Nhk"kt6M>`gh+H@MSc0aNY?'&Q`;S<P&&S']72^eYq]kj(B>+Z_mu_sVF1Oc3qO)]TmsUJ1$`@=[%]jt<c](uO%)B!3RJO$ogJR4tNIjAB"q.ik'!%2.6)I>8K_%5=:>@S4e7V*4'JW8M#)4$m4fXf/rB:$ELjro1SB(HNAm#XSI@'`lB%*V^i]q^=W]a'dO*PtC<VCpKcdqS9HfH[utYUL4<P:p;mW;m83ZXRTVI;6YC9+pC&-3cM<S8t]5H@+-f2k:u<j&MXc=!!<IQK9Cj-%neVf0Z0ra34o1p"4_HRb";Z/G!t0I.P(h/9/hoqM:sBA<2;nqF;6nh"`kiM6gG!suZcj<q].t@%g9ImH+B3,a@2#&L?ssG;)Q$9I%-CQe]de>S7rA5iWE^q0/c3;'EM*,UI')'[sfL0DH0HN,N1<N&H@C$Yk:#o`(6fBc<Gh=jaMU\*cY^m(n2=Rh)XlR.d,7U,#Fm_DT%J;n7qm$jURfN>OL'fT$o@@g#Rf$q7^1d?j$9tAk@jMf'If//bo46e]:qAA0?;QkXHI,ZjF[>F#`nJZmMP`//G7M-8Lj_*R19EfG:%Mj/#0AE<[f1Z_ef6H3S0[cU/;_V:2hbp?Sc`Kb:74$uTMZ`S4@V+t8@>6C*ck@_*.I-tR:1^H`">A$EA-J(7sXY]rY./p#Al\o$Y%D+2IOcCjg,P.!boH=)P+bE#&,q;NM,/UZBq[\fGa*"C=\[?#pf6f(\CM)%-Qc\uYA&):aJPd[r7T^uQ\`V6J"_U*V(:jSXM*RMU2%hOr@p``)#mVHFg)$_;p8[crJ2Jf@^h69oY0Fl='`&X;;_6s!>6>R)McXofRJf,Ks-CEg)_Uj-Vt_Vi%gE"/%L(4UmS*>H'ee[hM?%;lt0L5Ym;^hak83d^n5hNGtF#%"DQh'<XD.#hK(cK^4.<i>VN5?T,VU!22OS8@R/![u(9$,[9FH?[YNe"]?U"[M##2&dZ/iPQ^64%Q]e;\`'C^7`p.Gj[:B`sW]:5.Pj#'tbk(DZDqk%HC%p4,(B7qg=h!XTMsf6FN0*)K&4k@Qg!nVN@7H$RPW\=:#)[P0D$f[G!pQc0%+X74MjZ2W!nuTLlgD2tJ>5_1q//ApRd]7p[8!bX<&2aP<Oa2Qr%l/[PM@MWqEB9=$#hD6uhQ-TmKeXa;SlH"^JJ$CXGtq]?I2a9+%/cSJW'F<8p2<\I`-pD$aa"nWT5[lB,W2/XKPnBp@Oca%2k0f14J$pO^TY9eJX,b,9EmQ:J3VBuPg\<aFq2_ueY^FAkdn/-GQ0H!Z%=%Ut6OX?')i?W4,b'Xs$R:Dd<mBk?.@\"CJ\4VPT^p%\]777@70s!J51W0(hDsuG(/3AmY^7bJ!?3Ee$PM1<.S9^j-)+0#h1mV=R%!7N(S;N%8T:!-1NAGPP^CTY\$53Jk_Ce>U2&6c/=[<(fL6q0X6`aq6)[b0kmj9tV%:jI^5Qm#=)?ll#l7!KfYLK:1Dnohc3ZoUQH%4L1e8(fAfkI=54?(HP'haXs/H,N01IFmNPQ)&\Fg(/GBIqFU8ol\*K,l@nZre/PELkP9RbM-dmJ_PpUl[r?)42J8fLo[k2QT"l+:%^!Jp4qLmS,lH5r@6bf/#a.'F2kP&%IQE%4q#`kBTf'#7:(oTOU(*njLWm1oZ_!q`!iRAgXKi=U?#!6a1Y^kr>-X/S'f'=oX)Q:3d%cdkX9lcT3\%@Q2))nL`%T26K_r5+tTbP?Lt3NK@DE#CYR8'o-^VdAR.:;*>:mL1B3@X*PoB*?d,H]U)]`L8?_hOif,1]4hahbYFM%\h0S$6ahO1Kt]aD=tH$AT(Ma4"0)rW\pT?@*Dik'Km8WUT&:Yb]n>`LL]\;Uc$3oj*3ltKdF;!M<?cmQVWP9c9P&,_-((bECqu",%?Kg^MWG.jpnJk4c_*+*1#NZ*5!;`pR8F,+\Cr+Z5EB<1(Ese`J8jhZS%G.=^K@(KYA;3u8o_"p-CIPZKl>>*Y)ah<"HA57gqXp9g%C96EGY+Gcg)6AAXK/X'dVCtFfiSk=1Qti;,rXEYY.ti67_WsOef-IF'lE+-kMkK2aKgK7XfP-^jGSN/IVcSpKm.?$KZ-s*:@])03%,+JC2Uct<rcbn*%'KQ\=>!>hFLJH=s#/u[)j#Q&nJVC2PklpLKdi5=6BmMZ-&nlqn1CBH!iR`i[b6/p83HTSAVpOZAb1L</k5CT_%@GX_M6Ds'1ebA\rF;ei:N-V%tA!_4ah7p0;1OOMCVtfKcPr05P'3b<(!&\&V=j6C.!S"c<Ac[uVJsuGV%/CkTe9!mIPH72LDnm,S%4jd12onHWQ[4_=2(,:e3_iC6rW*ql%RDMl22''&=fioQ&N33G$rI,VM%9+'>?6;K#f%nrO49%3TZgde,'r,44?*SG\@tn]58*I/M%B^I.HHJ.ma5s?^_EsARKO[XIW"ntf;^8r,faS*FZ[>p5JXfh-1Hb;)o<s58YR9::sY_H(%#*mF<RU1tlEl!!l0"kn.B'eQT4oY-%%?FL!jK]ut"/d<)g8gjT3G*p$iLd_oK$t@"HJKL/!$eW7g\<%=g`RX"k:'kr$!A%L!Rg\X,pUWW(@`==TE,CV=WF`2r`R>.;(5,e[%'tEOMlkpX:+Q(R22=bu0&YN0F(ZsU680Q`eaW.r1%23S-()dlWpSuTRVCV@]U`/+:(^l63>@]7gW_#8^7^b?N_FOeD!JK"+fZr/U%@7Ot$f@SQUXbSpS0R:LY3<7)D(<8iJXRrMOr55`,g]dK?h*6:6GMN5(s81.@O8jOpmf1mes3CQbmlP_]!6!4PVCr\pr-gE<I$F0/%jqj6oY"H8$J5h%tB-PM,BjiF_L_uKK,/c81Xg>Y2%cm/?i?Rt9SPPpdXZT,@7137j>M//hI+.HWp#mH8N;2Z*lT=IX=X%CGMqWjb%-FoaN7A8RQOtFG\OO^ssNA8X9c#KnL,\o:f0'=*\0qWKA\J3=J9k=.X`+H3mRo[k=`qS+Uh?iAsSO3>Krohkj3c2C%e&B^arQT9L%o)0((I=8`9h[Q$j?/.M=9lKfEFOU-WNg'WHokq-XC[A6'a_t#knia]+?1jNP86JJqrGJurK_=e'?%6a(DD8+uh_h1:DstKLIO`Ws%pcA2gU"Edp/b4Z!kq$50E)<>@rpMcfh2/PY:;&)[5Zq,k/=]o35dHFP!I92kGJE.HIdo>Rq<W!:&mQ6b#l/Ff#+)>Rj@U)OO$"?p%mC>eX5t9#t9CUcVF3O<OkMV^H,MuR,TDShtKEqjZ\+Uj4a>1;ciplI/PXgn.m7gp]U"f<(S@/OSc$hZtiaqGVp#!VAT5KVZl0`bn%'k<-l](_'q5-7@s.L9'%5[/<W_4h&cgLPE1WlE/NN=IgErl0&%$9dI1Z-C>b3DRZp2Ofj-X)go,rlmIV7kuIRHH>8@fmgTkVP<R(%VXE(<IE)'@8F):GE+SVKql[:HRsAU^?\qTi%\&q-B_N`@1BQ`t2VH^odL%3!-T:3L>V-1TG(U;rIsZZb0"+;V=79Gk0U?2f`T,e=%WSIBW]a//rWH.kUW$b(nS)".6"ZO#=%+<V\`q;$h8/k\4_Kd=F1)'j5p5&d8as7s%KL7K5&AgUCS[srs[]YI+$$ejX=qfjsC,PAL%E-_f]YeA*>@JecKLTOX!*k'qOH+4pW>>Xp2s6Qd]3PaI!E*:j]ZYH1VEk?hp#<_VHDblB9pLjM\`\1]hJS-Y(If/G#0>I;Kl0$C\%qa<:-a)_1\K7l>0HhP(c>C4iun(I`YbJ*4R:k-r4*]THu:Vcr[rpTCFLX(Bi'\E@*5Iu@<J+)pXBE.ksfe<3;mr!tO(W/bs'F/Q_%mq_^M+*bQ<mnMYTi"&&_qnYce9:u4TQbRtDlqbr7Idho;s2jlY^\Es_n$?Mreaj=,I6I"H3:NR#52lM_ro`)JJ,]APYJ5M]r5J7\%^\R^rpC@fQIf.U:DgqQ%j#:=mp#Tg>s)e:%J:@+]LL:)JVt^49J'm2H\g6f%GOudJVZ6Tbp]%3Wr(m8us*EjspV6Oag\94Rj,sWs%Cth&JnQ158e&sC.s8=nN?[h[m(QZo"W3`hXVk_Z*4+-ZB9RD+ZMA]pf^\m=AeTXp&s6p!J\Gn.pnB3m?4[HA37jgG)>9hQH2&$`J%`_nIO/.k2XjCkc:G,4`7IMTggWmNp9N!9l'1f9nY!_bdC\iQ=;*:R'S9TeJ:M%r+%JLNHA.<6F4,%jHD_-rs4jcC9TY^8'#Js^>r%UW):I5SP`hoPL]^"RRaZI![?blH(t>>%f1p@1T)e(ZeT?DDHk^\RqSBd;`3]1;\+(N`rR<JSZ+;']EC#6:<pJ-(?=,(T/-(fk)O$%l$'XIcl>:bYF.pl0q]OqN^mkT/6J),LHAUGZ9R-:_/LQ=,\"+I%1FD0[0_bkol:`#gD0rkgr?e:bdKGa##We3Z!g3=iK\H0Gp7\_%fOGLDa*WpcD8gQRMH7l3,QK@'#-pUWA:P=*AMU!*H`AKMRL$S=92VBZ7tWi+:XOT3>!#4>UIkga,TuZ=^^e5HL3i:[^!#7,cqiQ%%-$9u"\qC\-(c*SGDq*p:S9,ka$\;e\F_>A5H%>W$E\TP.rR.KA'Z)SehA'9^_Jm7QeL(WLIkD?FNXc=hgh<$j$R0V1jMF$dZjLV>%Fsutl4^oue[-H]EL+1-Q>5A4A>U^eHgDqbXB&E_E?60)FQCR4TMs?OV6"WpfojCO`$gQfgf$'i#6h@bu\6jK8N3%33YRjdZp4;%/%;AXF]5uK8n&[VWJknFmsj>+LRLX`%mSi@X0&E4J*:GL%S3MnTcqc-)+UY??eX7GW7T#0`!'+sbR/:0tb?7g8I.*.&$qQ']r:"53=%NXe<g7[dI?*=Ihtee_F8;[jtG&'eBM9u-G^Kfj72E!)&5@4Bu%P&R<a9pH^7-W)+0!`S)1`!r@7/(.e:U,+sB+W(-7(J?FL:b8)"%3"r@&RRGLWq)^TS6[f#J-^,1AU6p1Whmk^(m*r0$O5q7]?JZ8@(iTm6<U[#b$lG7IZ<A<AK;jEs6F''9V7tKIaor@1<(lW5P000b%n+K*T<h,!hCHu@WUCD;6#ZnX6l-j[4%q1@W1U+Fm$KZQbZ:r\KY)IeLEP\ruD47P3=^5,&6nq'=e03*%9hgIg>Yo26a#d&)0-Wk$%<s-n)7\))C*`C^+(b<]2#hr9DL)Rc3\)EU_.'gpXGP#R8<;2H%b5>LFR="WH<K;W@\>aIiSkdZ*Y[Yg%=\pRZk+^fs-%6BPkb&R4%-=SXT%c6beBF)rKkBUX]R2!1[AG[<$QgTM]PjF&_"Q>m_?;U+X@*E<8/#LoCJh9;71_C6#Wf/KEa:!>;7cjf3)1PlQ'q8]8*)(sJ%%R?t5hZG2[#8q&lGd_))LRbjl&Q9-&_HmIR<N]n@>#9#M(3=Cgam"(%@b62ekR=2<\HJZLSOO<S81Y0j_!gpdkGHjq(aANZnE]<f%f$#I=;^"HG(t=R#]P&,BrPSdY4<$[8NlUc9W/HMejs/T"*\#Zkm)7eK(aic)i4X5'3+72QA[r4ba-(^]#DXjfF]ijYJG>Qj^Ka2M%i^6joWC3kV2!qF/bl]\iFMtp`&hjEQ-m"4%qgtR[%XX'08bIV__=<'oTq<q,7@4l*a^jXs\n"huM^Go!](`/IGsJ*C65]1:aY]h:%%Iuq)XU3+X4hZ7<2thX@`#h'nk>_p_UepT3H-[FV0A8YCDV9$aF>6L+_98g8j/u6`\Sp&2j,SOq`0`rSCE\N]8d*&A-'Z4Jm2-5u%fNfJ?Pls+X:sqhO+<,?IPN2H)D;YiIO8q`KK"PdB%TdI%nj.L'9]V>6QV[K7#88*&f+b*!3IQfjfGL1mDo0O!(PT3E5f-Ci2DUh@%-?O8&5\O'S'I@"t[%]O"(Ml$eZS5pPe*VG5_oo)p7HfR/k(?LE\SdHeeoDekYk*($:pijLaM[XZa,jne4qK-"RruI#_Q<.RNV@:!%"6*3m&)P5/E'3i>dO"V@:``UH'u#&e)hgdd*u9$^nJt$0eaY"Y#ea"^N83SoiW)n6U=I2:8AhaENI:15>4Q:eAqMFM$U^46hOL>[%;M.Gd-i2+2!YGp_LVd.giZGN)TOWCi,K[Vt/0+"SM;+G7#KM:4qkc(FoahlUG"8Q\fO,GVkd?5nGq.d1dnB*TWHXcD58BtO91\JC%IV#P$.^Adt'V$WeK$:\oWPLj`M(,`A'iuX]C6C)]GX/m:YX0f@aDt7j3@OMZWL+WFI&MjU"[Oh`]^namF?k)'E/r7!2'u'm#S--2%OHQ591C7Q"U_;cW\?]2u?9$^e9O^nW.@^Rph#K.F1KcFp>VVS8/rHeY>Td`g/`OF--a>-=+oE9:?del5Z5?(eZDQ[N$a-KO2N#FN%i-h$85!eD$X@$,mW+j;J`Grcs160>6R'jis6u_*2c<I8+NI,F;9_F7aTaL.R;BfecW5GB@=Wri+C/'Q49Hjgs"gf<+i7s?/90+5o%4@jis-pgnf#Tn\#,q(/k7j'K<!U,J6-J7]`-#QX^"[ZE-W&$E.KurIsif[ak'>B+#")akfQUT=NN;#C)R2`H"<?uVh@P[>4(!D#j%ojn,a>Y7c:HH$:%oDCk\2A"GRh[_5n*lYL0fUqHM>f.U\8:XB2Zhf&7dR#`\'h>Mr"\7i3JoLK7!Zr;n+Q\5QbCGsA'Gq.[%[gdt%f,IA8?rmQ]'ZQA/FOgMj%9$6.OKT!<_(s%m5F7k]:/OZ9?8Yp3Z>,I&0l[fS&j8adq1_.YKOuI;9q7FQW-ZWnb$BOja\"R]h-<8u%Lq#nf4i)i&Zt`Ci%_LMNO66U#<95X$SA0!kd)7C-dpQW%)hRBN=AfoY+S6Elo>.tr>3V.A.-8U4N()8Cqa^$1+M;@K5[_Stq/hqT%RL%V-/c,GXZNA42`_njhAt^AkUQIJI"W6Hl`RBV0Pdrf*:ml=`IMV=fLW=:eIGh/n6B7ch1AgS&Fk@80+jd&$LWS`KUYF-'a@=9m%&2?<6^smTh!E.FF7@>qZl$PUI'UQ,L_U"L&>>o,ig4j+b%^1LVS+"O(@k9s+B7L;H*cDV,-J9Lu9.Y'S2DL7-)J;?pAr`<rH6H"0%)T*KG1>h(s[#NkZ^nDr>k;LQ.\#_&La^Pm1C_GYbJk)(WV?U-uNJ&T'VSpVV<j#)+_,cA@CVc%*k#k8KL'`eM[WN_3CpHXD=:/Z$%_QJXH+,EL9VV/hWKkuqX;qCjobK^8,6cWRW<%3>O$Qfqk=+aR#A![k`k)L=>O*2J[f$'AC2f,]9A66e@cWPc<%&@PA)tJ6_@8j1"%Q6o7>)A^(4.?2RQ;&Mpk>]:j4Q'()"e?kr%`+OR;BD#?8Vika\fGups&G^C#P;s*i_^i9+W+I1bb991Xn-.Hq3SjdJ0t[beo*q;9%9^c4ukUC<REM`6'h$AgGLPSR>-Wu2H^JWkBp<hu>>:dBu94GU'`&qT"q1]m04u(M39)(-%k<9^89*lT(8^oW![[1Zp"Mb@;Rk0t9%89$]N.'T`@QYf>5-<V=iR(5`HF_WsUVeHbLF2:Q!j?bd%f##Wf\_]0EPOiS534ZUWN0ETdN#0r&ag'7F@2UFQ!@ajVSE([+Is;kZ%3KlhJ0]OE`,')CRP?8F80.lRFjb!GCLj\8eEa*HX'e'pA312;WBQi-@SlYVpS&DEl.Y'/+,jVKNl"$87Q<eag-B")NdBZI^YOCnf%ac>ofEnMd:.cp/6ZV<&_Xkf#Z2Rt'<:%$*,9hoNY-;jE4nO+>)a\`7TZV=nc$aO2Y[RjrIhLuuo@\/`GbW*/s?l:>Cd>*-R-\5t0%-4eF/WFImQ,VZ@aYYMKGB$%VXQ$!_X1>.<eEZ#hAXqJRn:a*$1oHUtX[R?IoFYZ=u5/R:u)&M8L3f.OsTjS>q,XNWj;3mSK)3&Fh%PB@K=$.5n@LNTm9SdQn#l$N^bQ6P(aXHU1(;/05]$ZgpU0B6S'jO1c$P9$p?q.6,8>r&C*ZVI7=S0m'nPJp8d;T;:)IZ('RRW/sY%pKkn1N0CfOCtCF;AkNK?>:6P+h(hafC,XRMS&C%5p;ep_jruFjN0C1h?;<'NMN(E>\I?CJAt0!IOEh8p,_k^HAt(@FoPU-LLN5I.%gLQ_].)Rs"dS.d%h):+$AoFSaE\a=sR`tH#kiK[_0Ztl4LZr^/)d+,nSkP=>)(TTS-k>Ekq&],03IP`#fZr>uo:]8,[V=Dbj[>0a%d%-R`L0]tD!9s#3];2J,VIc&=9;*+Tm#jJ8=pudjjOH"lfHmRWHdd.uf0ah7(7?;.,e"pJTSt8RBXCR7lom1\J@5/Cgu.Z"#WJ5$%Et&c(nc6M7@;]S^)]0cH&8mBmPuL6D-FV$Z#S'IsbZe1KJ0D-Pc=%\[O=9%c!NQ^T&%LDkK=T:_N*Pj5EZ.%Yc".#tLR9$Xa]`=g%Fc-+N:XnZ(/mV6V1N^NJLlG;fQjog!'Dk4Da&7$#e'J5NN.OMdZ9"d9UAkj^bk%&ad.(O""Udd$0k3g0$*"c_7'mis*6)8G:GZ,3%BKSRWEJcLq3`=s(%](UT4(45<E!ZN_*Q;iL0IPh#eTm!X8L\"sM%+^Q=36K3,'#q^+U2SR]'0E4Q5,Q.3>a9#U5.cnOMFDjMqUp(%AY8KB,N"SGX&g"jU?a>pTBm)hR`nemXG1\K#]VdBef^IV1)o5R24r-JkhU3=d<S_Dl/FH;_QuXBf4?kAada9Hfs#'/YVI.5+\<I!%WW6VTR(7`I>44!?/?0s.*KLlef6(OtH)H5G<CF["$pQ)"$>.Ym7eBAp/=FC5[*"7?k/[e;?7DusWB$qWY(dSr&3k&TGUd2UaV\-&%6Y:Hl@4p]>K,@T2G%"u@_7jrK%G^<)e]E;Q4``/gg.;5t9mG^f"\5iN&ns9-dkf=3+>L8R)\gPOc49Y2r.^q&'_%QmCF4;Q@3WN*%K2`$.C*1QlG[Ag7.#*tKoL:C(M4k`d`;E]=g1%&[]7ChBJXQ25.";78+LaT%L7)=#G/utL$*s3MHS(`S)@$fX_\JAdjp4A0Tcl<Q%k(ucsB#>%JVBAC=PF\HhA-fDe`3=?p8"MMKnWXb'lf<hYD]A%`)dZVU&ZK)1^L4dB^.j`a.i$N":s5pu9@aE&5BMc]!G@Rf;+ZBt%/W#I=aoQHNBb:U!XNd47"f&PdIU^J)!Onfp?.V?MEsh;^\.)SDis0aBhVusM%E)qC@FZ2%_c'.M8[h"1asln#Tn:b!I-)jR2iBNU%[rL*uaI0E)i1dk>5^WsOWs`fAK?jp&]-K%mm4%jCm"hdlWSMj]Q=/,N>\;oUL$?u@L\QTuZX>k&LqSWb,?<q"]C;AF:4L.bXT]TG%]1/mTe+K3=@3BN5(kV*!aH\g!HM-o^Q<WC(H#dj(c?P46`eT;k(r:)qbg-if$[)ct%&aWO`lW/5Nt%LQ8dPkk4(L_"DL]e\[fC_A%2Io-'`gt?n&f<9hVDi$Q7Vgg1R6MsYj7&sa*n/HXg`_4gnhN%Ga9HQ/DoNK4LBJB7Z"<?b5g0[5mZ7l,]QDUXh'!TCVAtU-rk&RO%g=I7P`M*8KCcXtY)q2Qcgp/ZtJN*;^3AY5K8#MUW_mZsD.WY[0DX&uumU>s>e39`RJQ?XCro1emX.rc%hQtW*&]ol[<4ggACHRn>%9&MR0(o4s#5#XuUda+o*Mm=TXGCD$@=;Pg?0\ZRVfa'kYSjE6^W&YQGf5BM8,F_D<H:)$+R;G$2-Lb80bSPlpR5pf5)[i('I=dCk%#d6$CBE%%q>0h<Q#?$HHCmr(gQp`j'q&9JsCI`%:k,4-GGu4S#V9J)G%u`MUV_^Q!)(Imu?Ls-L>6()q>M/V1Q[?qqjTf2FeAIOn%OJuOJb26<g0lNCLI7&Babj8`?r.'r(!G6QV'(WQ7JCFb@HY8YtCieU'j^<E*'9L+qH1IR=oAj92nqq@g%9gAtX\H=ZhS>H/^1IFe%eh(]VRq,:)"g+AtQ8c&0a1l'F`t(RSEVT&+OY>C0j)</,@C/]eIN[+B7L+?>c#B@82uZ;*Bn%It+?>te)i]Bck>+kNUj)Zs%4D-E%41\M&l,:o=F0p2,3UpHn_JOdS/bA7UR1`]mW\H?8`Zg$Z@*i\!UAip`D;ld7'cQk482@AY-ccn!;6N)WRUR4)"/dZt"#7C)k[H)O%k;@*hNY?RLFFbmP3:iEE@#Yq5o6d:k'LS"&HWW;;!Dcp5K8;_p<dQ<a56)H+U3EBS+k/CDBEr/;,t%9)\:GJ-]?]>J2P`m.6+[S!%LuuLBRN*[e]?rVGO<V0cWpJ[?*il29A`qpIUQRY:n@jbXFEYjZ*&!FY0EWh)8J27>=u:K5$HW9h^bV#C``2PMGUESQI1n;]jq.eB%9.6<=3FR._g8/qrG`G-T)dF8kAK4ktX<.`hL`MY[ZPh;Pf7@&t/6h$U-ZU>\C@VqK6pe8eo14HG$H0d^biT5Mluc'4[+b%RLup_Y%Bd>F]+ULn>3:Jl&mtEY`2k_S0Y"GojiJ;T+%NH7Z@.b+^amFlfTD?$pC7\s2V$Je14DUHF/^_EjFFIYIL>/S9#L76\-fH4BUZE%.%-um5NmCc@g3_hV,g^Ts3rMcTO5Z.cC(R<AN%Pl;3(j49b6!G?$a2S`@FsG#<IR%FXJMuAD>)MZIDYU:rn6O!7HT9V/W1XWs0$;UN%gs>QF.XC?jJu[%*d-0D"VR\P'HOOQ<AE3>419`q'LS`a7:,&$FVGfSikF@">;r._DauM2UN"3C_Y?SbY4^0_38MMueK+Osb-8G)'%-rH4#,fO+b6gdXJfL%!ip0jhE#%Fh^Hc&tOKJ2oYa(.TpL@l8b*KJO-eSf\4MEIX"V%dsR'=Vs;HX3jr=Z&6@1T(6\<?QipBSDX;%'P8tR$CoP()RY<9E[=J?B%>/(?*hq_XsX]jB>f+bDlDLIO9Q1B+'U(#-8-IR-QX]R7q;[$ng!f_X%n9d?A0=oDK7$:XbIP.m23G>%`2k:[/@C0emd\N7&acU`4TL+s!._UR(6.7*cj)t`%'r:^gd$WTq6R^Y[p?:Q5>$B7GfbV1SsFe*;VZ-pXq1MCUhMA<Y^'opfHL&0%pH=C]+3C5bY+Vb/?bU<>4lFPJ`9sVo^=XR?Z0r<em<d/ALA608am"E)7iSRB&,-)BNs`?69*+Ja_Au4.P-#b!'l$t(N/"\a;@;g.%*_6ZA)daETNS1htZAZ)3aOIa;Aobe'J$IPRV+2O=o;NkI))?%Gfip4M9X<"r&k>A7?%4$B)U>Y,,-M,_3WMEL,:s@eJU;'r><^`:%J9_=[726EN#KmCY@b;&ML&,Yn<@JYhUK>kTXKa'*(u?-(:7H'<0*<i(`I+i/1WSS83pi$^^Y7M:7Ijm(ks\,1#_s$81G#QBB\&n(%cJpmKl`dYP7MT@=aJZ<R*B0LWJ`L:,-ZmX(]<$CI'F_LHUD`[FGk)0.rWrr72ham7&4M"UgV^:XT9Cd`"\>Y!.mXXIaG@Z]-]?N-%W5HFTF3:@tTh,P\OeBf8=&)[K%jHo,R*=X9T@"9CF2iunQ4scZ9&?,l\8o!IXL20e,?aZJ4b])nR4A7gog$`V.d@4;KHflJiPbr<%]Utr?#Kb*3M4PfJ4TM?"":YjL!?bW_NYjZf&oY3=BY;@cPg]'%TSf7MbFj9RJdPC?b9bD<@*oCG\8Gsm$c-fbV;RY/#UJ#:qB1.f%J-67S0\:i@N0'rQJ9k2=o+YfFQ7P^;Et,qCdSQQLjoRk>M<Q"qWO-&_DnFAW,raEU+?mijMis#hqTe0eA5>($*ap0+C@q+`NGNJX%9!Goe1;i+\i);DT4M:K/+$d9'gE&#`SKYaOoC2m3[a1A&(V)MBg!e&9N*\Feo^SA?_/SqU3\IiC/#VA!Za<go":Ps,L7LCRbi\Sr%@Dh1RqpQ9*0W1S50l/0YhsN7(5)/+;dUV5n-H?R$Mmd0(*9YQqO=5VHH+s^1a\C6%@2j5B2B+S-C+$6'r>+JTm&/H+PMq3>!#,$B%S*F3/PsmJWGU5Cfg/LK%:p6QMo;VI2][58=>dNC,L3#3%'U#22=.)At?SfuO1Ne>1@9f#/+-^j*[Y#3a8W'a?:DMQY[MMpY9g*oB%>kH9)[Ge>SqHXTEE??3k?PmZ@k5aodg#NIa'>0/IZEMq4_b)]I]QcI)Y@UkX>.]X9"eKY$1bc\R;9J7UUaPlKUd]<CNB/Wd`h^d1%XghPYl>8nhT*.>7g3joJcC<]M94#oA[\5=_h7/=)DJ0gak$bcFZ!gRSmKa2lA)P#="%&i8?H\$]NkikBMu-<V'%m`g:P?V/Yn.ms%kd*XonW@Z5:Od/+D$$^0(e7@H7nDJFc]fCkaZ"$+>$M&h).9,d0W3kq\B`<W1FSRfWP&/IlqM'd3H*fUK3sX6_#_>H*mtc2AK4m!%-Xt0A,To\g;8hD2jbnMGJ63/HW^ONEG4WqY\uQtd0g*J12:+\*B[+&r0ItY_h?:eL)PZ[dMj1-Ul4qMj3*0b5H&H#,2EL'0NH#bU%$6\lT]igP0/;U/=:8NX3U``7V/G&5Nd@cA/(!edKd)Bt$S;QD[S!XNaW$W24>CtPap2>(KE"p(]aBLJ%9*dEr*-Qf7^EGh/WU.2q%?(p9=Bc%@m_l#;j3R-8G@]Mn0C,Jm&D-O*NVaP^9l-B%kXj+AlWR`qO^9j/)k[B+PX3H?$_+l,j?UC&lhK`an?A4J%"-`,:dfpi'%+htN4l#CFj%Qb8g?)>ANkdK6kL3cI7]4#BS!FXX:\Cdl_<AiCI-9Rfg[:?K<#)=ZK)j+]ad&^?N44ldYbW6cFEGb"sO`A:2Wg3`N%4jKRi=_\V+h:7u(V,c!rG3d5fepLO4c#5o&&hM8M_Z\&V2]dk,N[l_JD&Q_7borH<fW$mtER(_nE3X6h.P+_B^Ots1jnVG0AfKM5%K>j>s'?E6N,[ht/2`>8u[7b5r0E;_#iYuI;7D!:PWNZYI3c&@S!0U[o!8YZ2iR6-*V_K&eP&6-F%h4OVX\-L+Vgl$PjSS'0JC]Au%6dpu+\U_-cV)%E+2mIM7N7;6j+8i1>pXB&5m0f8N0Tq+AeKI%o7YW-/H'i^p(fM3%Et*'Z2MnCdC!Cq<m]AcVKm42S%(t8<#6g$_%klipR48,nXen"N<0KXTU@3n7XXP<,2[DA%b-nt=RAqW+Whs>f3lQiu+3nZa56PM28j]9fk?<N%UdO<KQr'\RmL,uWm(qnO?p9cJe%HJD)!1-;g(>pY@*5>!)ToZ=Cbqa7j@0/h%Wa<,T(NNDu[`aBR$oO'[f9^G3$m_D)Th]2u@jeKA7.kg\7==BI@r9&fk5tEo00k2ah%)GVK8oN"eV-b?'5XQb'4pDQ;ASuJ8#=]"1?"n5?/RC65YgLZp:<u![uKL2KgdDcG?lJ43!"(7iT+>gLDl@DdmO4d,N5,.S'AG^h[%_'t`l$L"/t0Z;,LOEc`jdpnfW^m*JnA0I,UV!&(,<kLR1##Y\h#1CMe88nS6<>gU1g/.`**@a*8LI*1:.B.[#F;:_o$P*Xgi[d?6%WPC:0<7V9%VhG=lk]d3q"@SkhQaW1gqehj3>5V6r8uc%$9Q@`V?pfnH"sMpAWR0SCSn?@Ub&T4Ud(u0NR[C1Nb`LnQXFMXVbnS`*%far7X!al8@!\!P5KEia0P!h^'apqGIH=Ds:&qFkE;.El*7jqJ/3<kkN(]qep8use]@5o#jVi2^4k<qRYKg:;MAr,tgnhD9>e3kjU%'JR\,E&>X:]+'>4!%?\;6)Fe*K'#'q1Kj^-OZ\3A.h6R>.W+'2n3fS`T@6@OSZ\B:n45u=0?eN+kTnCS^hL6P9c065TdaFP'nG7X%9RqDJJ@PD8R3N:a%!@pCM5LI>#QYVM#?#f!-7B>EAt3k]6upKf#fchJg'+B<Ohr0r'as_h)otklEqR\P>dS!M9-RdeIa/@TL3P*Z%S,gg\Lb4CA&;Zha3YJ58#`HPJAd^&V#[V6RBniS]*\f\b_3^9aeq$59'0S^=nF@SCn?=HH46DJ(Q4?W@g">&7o5dOLePp5/RRmpr%X(3DH%b,S%'4Io-Z/!o*DL"smSjK_+3"LZV6Zd%g_Lk?VVlYJr;oBC^.rRG1C:_4f;Z8b$S;t3]nqC]$4A^*f]8n#?PTn*o.X#Aj%(BJALPBH)u-!IS3*4W_L@!&;7XAo+>6j&W70ei&)RlOm?D@#Z17`$CY'SC2`nXGfl0iZ\@V[%M05"3O]QJXh/FE1!mK*DKVHq`t-%p]O.aLr4SL'6cA'"XZ@losYas@/pCn&!g1j%+5O$c/(:&Sfja2UcCg=d!<nFV"_ZcFLqX%+@acD-:XU>ereW>p_RQ1E;D/GaGEQK%:)hSVm*MDIAOT,kW)KM``FIL:be?+j(Y0;U]>$"f=+r?]7>XGR[Ia/V@1*#S(p!>XTa;!(bn>aiHouMcMIgamTb1DheoGBo+_#A!%PQ;A4;RM^H"8N'm_Y/UR5sqd'!E\(d8!>8?5j`TrNQ\pj,1asFOueecJq[HYb[s9s@U9NChFsrgSg_7G2o$MFBU7GY=o)?kK8blP%_hLY[jT\)WG0K_N?:Yh;rQJ@V`@I*teE=ojeP(6^aLI><2HV7Q2bkYB5n&j<[t`HN8B\nMR<tiu)isr,RmUn[Ratk6(?=*k$JO6m%WpXWo3R23n$oQPf"n"gs*eZO:VG+gn('Pp`=];hNZ9/q7`mQCTM_BtA+f36^Wq80Me`b-GYB$Ji::KiQViatc%s]oC@84\Z%LbA&%"2dn#i"fqilNrJ14&/o@:H5j[R$Zpm@K5c4<rY'Oo%Si%,-`-!%Onot-7>TpR<`,(_j+Oa8N4X?T>p*o2H4rV=n5VM1WQLe9U7dH%M*@#`'pf<R@Nqm#DBA%rRH3>e]1YO#?+65$/W3Up[QM#hZeE^Xq;D`YL.';mBDHWi.U]?bd3';VCHF;-G!\pO3YC'-E,9UfA_:CZ%,/:4M6EX#!'JfB][gL7b+f/G/gh<T""st?%E@0X@!9[/q1C[Z6.,/h\(3<m"WWgT1)b;:lb%iXh-+Bb:,9(-9=\I+r]Vn5M5R'#U%WXcF8_IHu5U3sBgJgCb9o:c?8N1jmjGJljmN'MKR6-b^6R*E>IR66r-El+ikHtjj\NWsM^O\_+.@)p&RU^AC%pG;c+TM"u7AjtR#%d!;-[TB+iArK'Q$PgM4D;:='Z^?0!1I1UEi=Y%_sQJ$pXa-$ruR$7UWXbk\)\p9?&:7P3M1K3O+p^P+b_/PP[KT7sT@i1(?/PWq4%.=4'/nO3i(#3*SEE,Phs*[#Kj-,r?o^m[hdZ3`lUjo1)P:^b(Z+ZGh_)V(ZlR@7S)VqfAS)WT6nNS+;qEJ::JUnQ^c/&=gp'>OqE%n_FB"L8%H[C+.W0pj/dH+;11b1;";)P/90r(`>%_Sg\Hg8S=J,f+sP3EQkXk?kNi;$m-$-4/WHs[!";96,OWCI=`i1/3ZW@cm>sD%4<W)^:+PR5^eAELEn:s9XHQWYmJ*\>'W0:=nJ)7kf^;k4,_G%a2_N.*4hLrA=H]nXQt7&j0f%&ncWH>Hl&L%e$c!./f+`R=2JaF_%46Gll(`4]#Xqd7rJEIo[@MC43#=;C5Pcj'1qLa-bED;70@'T>X1PAkhV&6h'&WA?9L5k\$B:5H,^4Uq\(SeX-kH6Pe#8;<k/@e@\%d%T49i/??P[SGS.Kdd()j5Y5<V0n-DZ?GVQJVqCYA`TZr%>:.8kRq3kg<"\tU0/Ho"UdBb_rB3I*XpMKmG9LPA"ujG@d<m\^B6^_%6"F,FkqEI_>=^0-plF)Zl/FA=8$^L]P4UKW57gOBPX36liH&n4Xi4Qg.^6c(V6eZV&Jq`Ik/+F@J.#.5]8gW0c5A][CuSqRZ4$ma%AhmF*nM5m\I3("D!'T1QFlZ64]GX\1L"S5cH8LmVa_H^dJC.A/YsIOTq=ni18-`bhFK/=CHb*Y)J%5CSh1*'6''6Fe5Pg"tX_Gjk%e537o`SRqJW,i!1i&^!iUp!I!V?<\+]Y$JAb1Ls(Z/NnTE6ZM5o0V`S*.\SoS"r22eq\fZIc(Ep/I2"._k%2NKFUZK^`7i8)BOaR%d7(rX4[Fl-K?Mr#nae4])r"i/!ZaS>qPnVlE[-:gMt3Qe7#\9LFe3:n#=<bGEtqZ$eL4E_h48J9FMu.Qp^BO6")6,AKNl9]_V@1m%=u^pDVVI:XF\Lf5i&#&,*TEf(7lEeEj:CiEF!#;$d_i&9fFL0Z[>mMU<ta`Y=ou<B9q^,($1tU!-qJfpVE;:gQ#3_U<St>l=eOA^%CLc("=+``@YHZ1b(4*7*W-*F"b!</^=m3gs$bTa1*M'75DdBM)\okRC[oW-P2*XTNcT]sU7N+U-TG>pCX(88/e[=QIe*MW2pQ5$7%@hWTdB**bf6S4]!97OjC7Q_rHbne=RR>8D(\KJQN(MWCm?F>FOALP+%7au6BI'TS*`Ql/<n1M0JjP'F]qVesD)pH?fED)K1'<u&Z%U@':jo$ja=&LM+\Ge3=peMb).pce,r=&ceKQbZVq!F?:E8(S=ASa/T.kT%U%IU:H'S$W?'"%Wc-*!q6?D)Ih43*Z7F;[/A,<PEVp%*40:cUNr[1/o7f1FY6a_M=oS3I;[-Da("SZ_Y=`]4N4I@@0fZGoSS*#Md._*RQk<+1kBe?T7B`<Xj0ZaB9&O.FQHtBf514skQ3CB%Ds510`?-`\!9j(i?kKRi@7Sp+BYc>Lie3>kfKZek_\i-eFPI`%"WdDKdZHombWu!"FE&!O<+.$R2:Z`_jL>*G.'\;iQm+W5KZ;AC%Gr7->DoZg4&B9'F2b\8`>e7d+&P!gQG.DQ0oQ9-"f3A3bA(nkf?/*cWOc*`@#.cj/?TWK%<YmBdhlUa#1L.KLL`19:Ms8:L2fi\(%JulW[_q[1qY^fL<PIC*SX@7l-')-LR':(ZEk6A18?qm>ZG(qCi<g+hSa20R:NcR%96mm0%$P76":jP9rg7A_TL6\<r0SiYpO2EMG%#JhIF%gDbMRBslXLLBIa_'"HQ7LQ`\58u0unq80Dc3-tI'&^]-iXFP@]GIIC=\Q1f3U,mb9PPM2/5a%hbd'N,N0JMd*I-q!m6dp=%2b!6t<3[h^^P<aYHd1$Bf3Z>Ijm%aG>cti42A[(3UPf>8VD"l5kTq7>hJbL[YA$<#l]N19hb/8LY'*)C4):EE+n1XEp+@o-32)Nk%oW\eXd-R@'6gJ\_*tf5?.7=7!-&kIj]VH0'H_qI'lNO-?U4c0gj%2',AQ$hn</3WFlEJ<WAp%4V&A+3_rRKq@:XAKZq<cZ&QhSJ6%;/o\rq34T;7?^f=L397JXOW.*Sk?nHGck#(;kV8!`LX&L']h%8@DcKCJt;aHCO6FnD1?b42VD*cf4BXXn8;VeRs`Gk]]A^O-'>AM%T1U<:HXoeWSaJ^-mU,asgb+G2gb+H]8alF%STO`npIU^6qg['B8+E2knb=@krg:kVfjE?*ISHg._d#VI&^oq@4-YW:Wfhf+me8gi%LJ:5;LM:]VEEY=j\PH5n5A)Wcr%7#j7K-S0*&7H:l.qrihlL+Dp0Y#3.DL&'hn%n?Rr%@R2fHC1g#gO/56$%$s%VlopIXefgo(;S%pJ(Uq];a]eV"X'?2`9@&eQMjo4!ilH$J.AZb_>LBIaCCn>1^*Sc4$1rRl1XgR318AmDk"H`dViln;-tJNSU0WcB(M^L%&i6H)+NR%>M*Wbp"Rr8k=L.H-M2b!)O&=+pYk2H_d+48BfPQ'?.d`=g%H2ig3ucan^/HH_!im\T4?dj^(igO[T+GGGJCGOs%^J<eS+USQIVOM%d4_lVi\!u?#bLbQ]W*JEh.Z\=J5fL>p4k7^l!qO%[2[PMLUK\_fc$H"1jbs7[l-"@rDaihj$&RiR#@K699/likNfMF/m7bqa58C?%FpAj/%\h6-hrl>3J)l[&GRc8GQP=/TpI(.&8%>3_?K,9fA9?E;3SK(@Ht;K;W$b#rSf[X37Z&VG;tScf;-p_ZH_O3Y.\fLG62A\:%jlOP?.oE1QTul[cpcFKQHoBU;:Abt!TJ!hi5G$NQHUlgpf_9N=<"r9AlnA_@ZGQe!3]GgM_Y+)mrGB?m>PRf8='4AMI,7S6n(MH%%$i@[#\&<'65h^q8q460h\_6ZlG'Q@II>r+:!M'j"q^>Z4#_ntbkFIU?(`W;d?Ti8j!9]q;6BAaJgm]F*42'IY[\G2*hUXX)iuc-,%qC&J(mQ^^$2_Vr@o(2`#ro>FK4[+>lig4##o,/V*jPh*ePJ#j;&d4*0,WVt^//8kX1/pbLf_[h>OB!P1).siJUJ3!$9<[6-K5u=A%bu<r./Pdrtr!L=X(G>ESC8C1$=9BVe:]#35<o^(sD;Y3FHF;K+MeglAPm>^oJfaAHdsp!0s!-k"ETloIMRW9RoFAmOoNL;1=c[dq%O(#_e1>ge?<Hi0%MFQ<bH&GHZ.ILqp$iA5l]GhU0:Wg<OU<^oo"\EQgqe1<aq];$u(+fdE<9@'I+gdH70X7tDY-tgD5GQHG<GL.I%c-,j.;W^ndI[NouYEsRJ4`]!2ccq1c?Sdlem<ZEF82r-kp=r6-5IZ%gAR=5@IiVgDs7Ug$b5STFb3)K;hs'\.;WU>L]../@[<OiT%f&G$#L)-Ce.VC?iFhoP]90HV-Sb;c!gUF(N,k!8JYG9*EI/C*\>'cfU4DZlF]Y@;'@m8Xu(UeD@dIn@L4f\&JWl#5^\ENFtc741T%m-rR&hRa\5>reO!,p?aWI*taUXKnno/aRg_j3okOjE=6/'AHO\FA3<Jn%5^A,Grc<^U+o/q:55B`k,;ili/AJHqm0nX79WNE5!t_%5#u`SSSEQKE4Ae_>.d"Adc/SIV8[d]ME,D@m6fe/=c&c3D+a_;ds"^LCLFC$HW&kLDu7^.n`_&Ij5'7=kjR8As/rrJd]Xu_D84ZW%T7-7Se+5NHfBp[=F.p.u#>r%(.]UT1N&l5s,'[%)S*TH_fngBa^_%<$hRVKmO;R$phO8&heh@OO_)doO6hn:\/(-^Elt?&^ZJVcA%s1uHupA+;m00f?nWNZ*[?[qe<cgO*qnk0r<ci;AlErYsYk?i`1e][.M?iU,+56C(D`oB;Y_*@tZ?gdnX6@1^,~>%AI9_PrivateDataEnd