%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 07820.eps
%%Creator: Adobe Illustrator(R) 23.0
%%For: Onno van Braam
%%CreationDate: 04/07/2019
%%BoundingBox: 0 0 811 576
%%HiResBoundingBox: 0 0 810.9982 575.6578
%%CropBox: 0 0 810.9982 575.6578
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.0.4%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 23.0.4 x589 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: font ArialMT
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: ArialMT
%%DocumentNeededFonts: ArialMT
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                    
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/"
            xmlns:xmpRights="http://ns.adobe.com/xap/1.0/rights/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <dc:format>application/postscript</dc:format>
         <dc:rights>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Copyright 2009 - 2012, Onno van Braam, EVOlution Graphics</rdf:li>
            </rdf:Alt>
         </dc:rights>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Onno van Braam</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Westland Lysander (1936)_S</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 23.0 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2019-07-04T23:42:17+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-07-04T23:42:17+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-07-04T23:42:17+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>184</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAuAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8Al1x+U/5428UT6X5ngW4Q&#xA;LyMk89VayrZ2rRsVYVlsm5TllarjpU88VVNR/LX8+rjWn1NPMqerFc3j2g+tyLGlvJbyxwgQiDhz&#xA;Z5/YIFFNxXFUZaeQ/wA930i3ttW8xRXc8jwtfLHdNGtYp5fiRxbBypi9Isnw8mr0GKpr5l0T82ze&#xA;z2Wg3P1KG+1G5kj1GOcScbaWMTrzSWGRYWSW2WIGj7SN8OKpBY+Rv+clS7/XfNVsIvSmMPpTGomS&#xA;0mWzDcrZvh+tNG03xHkAeu2KoiL8v/z4XzBcXf8AiaOPT7yWU3MKTtyJMCRLNH+4ogZ1qsY2jp1a&#xA;uKsg8yeSfOeqXeopZalc28kNyp0y6N3JCrWb6O1qFLRrJ+9S+LyVKbcuVDtirC7n8mvzYmsoYhqs&#xA;cLenKLtIdQuQkkctz6sNsqzQzhFtwFIPxAiqgAnnir2DyNY61ZaRPBqzM0v126a35uzt6BmbgeTs&#xA;7cXNXQMxIUgdqYqyHFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUi1e7W4ujaLcQRQ29DOJJkjLSEVCFHjlBUKQx2608DiqV6&#xA;NcrYwQXa3VqInZmvLdZ4qASuWf4Uhi+OJj3PQEfJVmOKuxV2KuxV2KuxV2KuxV2KsZ873EyJpaRM&#xA;VVL6G6uAP2obdg5T5lqU+WKsmxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsGsPMCW/5j+bILkzyxW1lp&#xA;rRxwxy3BVQszsFiiV3qxk2Cqa0OKp+/mzTTcNZ20c89+FR/q7QSwUEjIqlnmWNRvKtRXlv0xV5X5&#xA;tu71vzHto3juNQt5tO+tXdlDbpOwkScwkBSPUREApxDgcuu5YlV1/wCa72zs9OgttMhg1vVYbY6Z&#xA;D+/VTLO6R8w0F5I0cScq1PE/jiqqvm7zxYyW8d/5htrRJY7R/Ve2UwF7i8aCSMNPK0gKRRF93PIc&#xA;tl44qn+kebPNs94qQ6tY6ra/WZVuHjsmYpbxigk9aO6SJKuygcxvua/CcVZWfM067fV4HA6v9bgW&#xA;vvwDPT5VOKqc3nHkhWw066vJhszQorRp/lNV1cjwotT7YqgrS6f6tG4NykUg9QTTLNArGT4yavdx&#xA;qCxNaD7sVXWCXbx3SoZJII5HbmJCVKyfvGJIvaU5My/R88VTzy/difTxGXDyWrG3dgVavEAoSVeQ&#xA;VMbKT8XXFVmoeV9E1C5+tXcDtP8AzpNNH2A6Ruo6KMVQ3+B/LY6QzA9j9ZuT+uQjFVv+CdK/37P/&#xA;AMEn/NGKu/wTpX+/Z/8Agk/5oxVseS9MU1SadWHQ/umof9V42U/SMVSLWPKmv2F42oafctqGmsAb&#xA;vTI7awS7qAFMsEjwGNzxH90wSvZq7MqjtH0zTdXtDdaXrt4FVjFN6MdnbTRyL9qKZVtY5EYd0b29&#xA;sVY95/03zxoEcGtaRrGo6jpNv/x1dPLw+sIwamaN1h6Afa2PHrSlaKpLcXNl5hiW80jV7/UoHeAS&#xA;x3YeZov3bFl4WtvKUZGmWrsKL8RD0OKs20DSm1S2lmTzFqvqRSvFLEJYfgK04jeJuqcW6nriqMj0&#xA;KGW5e1TzPfy3EYrLbevauwHQ84zCdt96jFUn1O3reSaToN1Nqerx0Fx+509bW05dGuphaGh7iJau&#xA;fAD4sVTTTPIs0dsF1PVHu7lyGuHgtrS2jdgoWoVYmkX7PZ8VRf8AgnSv9+z/APBJ/wA0Yq7/AATp&#xA;X+/Z/wDgk/5oxV3+B9EbaUzyr/L6rR7/AOtF6bfjirj5C8sGtYJzXYj65d0/5O4qnFhp9pYWqWtq&#xA;hSBPsqWZyPpcsfxxVEYq7FVK6a4W1ma2VXuQjGBHPFWcA8QxHQE4q8V8rP5wu/PXnM+aLKytbufR&#xA;o1uYXmWO14VK25lkiknkQFTLUg1CgHY9VWX29pZza8IpYLV0WC1CxxOZogOVkKRholHDf4W51I/Z&#xA;GKpB5u1jRfLf5uLJLpRvXutBjt7Cyt4kPq3c164RSDsvL0wC9DQYqivK/kyxXTxfaxc2F/q1+sDX&#xA;MpuFijWKNldYY0jiBVQo4t8XxHc12xVkMeheW4rpJobbTogEdGVL115FipBqE7cT9+Kor9HaUd00&#xA;6OVezwzXcqH5MkTL+OKrorWGGQPDaXEYHSNLnU1j3/4rEfD8MVU7250sssd9CCy7qk9xfVAPcBov&#xA;bFUP/jF9P02yt7e2hlDQwQ2k73dtEJJXiWiLFJIshatRw6mmKrLLU9YWrS+Upbm8MjyiUCCI/Gxf&#xA;7UzU+Gv82Ksm0lr2cveXdm2nyTIitaSPHI6sherM0TOhqrL0PbFUxxV2KuxV2KuxV2Ksc8z6BI5b&#xA;WNFWS38xRqEjuLb0wZkBoI7lJWjjmjHgx5L+wVOKpND+YHmqCWHTdW8qva6zOh+qoLy3FrcyKK8Y&#xA;p2NAxpX0z8YG9GG+KsMvtMvvLh03VfK1vFc6jrs8Nrf6Nd0a1uJ5rcy+uIOSiOQSRSqXVuKqCKHc&#xA;4qoeYfLvms6le3Wta20mjyx+vqSaW8enxLGH4QBpLmRzLzb1FDScieI4g9cVTbyj5Y1GN4ItH8t3&#xA;fl/Q7wAXuqvPCdVnjYg0PJ1e1iPVuC8zSoCtir1bTNL07S7KOy0+3S2tYvsRRigqepPcsTuWO5PX&#xA;FUVirsVdirsVdirsVdirsVdirz6x0M3v5l+ci07wJNY6dExRY3LLJHMvSZZIyBwYFWVga+2Kpppv&#xA;kx9Nmlvr/W7i6nfikYjgtoUVIzGY0WKOJqsPRUbdabKMVVZ/J+mXDx61cWgfX4pVmS/KoblUWSqr&#xA;8I9MssPwgUP8cVTTTdOWKyjjtNRuWgQcE5mN2HD4SpLxlgVIoQehxVo6BU1/SV9/yO/5txVr/DVm&#xA;2811fTN4m9uYxTw4xPGv4Yq3/hfQqUNrUeBeQj7uWKq8Og6HAnCDTrWJK14pDGor40AxVAecvKGn&#xA;+afLsuiXLGCNmikhmiA5RPC4dSnh9niadicVTXTrMWOn2tkJXmFrFHCJpTykf01C8nbuxpUnFURi&#xA;rsVdirsVdirsVdirsVSLV7WLzFby6S8SNpk6D6y8gqXQt8JjHavH4XBBH2h+zyVec6p5bsf+Vr+X&#xA;fLujSSWlnpNtPqE6j/SFV7hZElPG49VAXUrvSgLA0rirPbryJpJ1CDWIkM+tWh5w3N07yqzUCiqE&#xA;8FoBRSqjjU0pWuKp5Y34uVo6elMK8kO4NDxPE96NsfA/QSqisVdirsVdirsVdirsVdirsVdiq0RR&#xA;CVpgiiV1VHkAHIqpJUE9aAsafM4qkPnV7610wataRtdDTC9xcWCMUaaHgQ4VgGoy9fsmq8l6tUKs&#xA;b8sfmBYeYdcgsvLumopSFp765DGKONRRfSkX0l5vyYUp069K4qz20tnh9VpJPUlnf1HIXioIRUAV&#xA;asQKIOpO/wB2Kq+KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KqF/C89jcwx/blidFrsKspAxVJfI/mX&#xA;T/M2ky61p8csVndTn0VnVVf93GkZ2VnX7SHocVVrPypY2vmvUPModnvb+CK34tTjGkdOQSn8/FCa&#xA;+GKp3irFbDzBZy+cpvLKRyLqOnLLezzkL6bW9wwYIpryrymSoIp8OKsqxV2KuxV2KuxV2KuxV2Ku&#xA;xVpgSpAJUkUDClR7itRiqX2emahDbrHPq1zdSgtWdo7ZGILEqCEhVdloNhiqv9Suf+W+f/gYP+qW&#xA;KrU06VOXC8mXkSzcVtxVj1JpF1xVd9Suf+W+f/gYP+qWKqV1BeQWs0yXVzM8SM6wosHJyoJCrWLq&#xA;emKsL8p+etb13VbWwm0rU9OSeF5ZrmVF4QssUMgRi9rECWMxUUPYdywVVnP1K5/5b5/+Bg/6pYq7&#xA;6lc/8t8//Awf9UsVd9Suf+W+f/gYP+qWKu+pXP8Ay3z/APAwf9UsVW2FleW8109xqE16k7q0EUqQ&#xA;osChQOKGKONm5H4iXJ9qDFWpNNla/ku0v7mMOix/VlMZhXiSeSq6MQxrua4qv+pXP/LfP/wMH/VL&#xA;FXfUrn/lvn/4GD/qlirvqVz/AMt8/wDwMH/VLFXfUrn/AJb5/wDgYP8AqlirvqVz/wAt8/8AwMH/&#xA;AFSxV31K5/5b5/8AgYP+qWKrY9OljQJHeTIg6Kq24Arv0EWKsY86eZdb8uy2UdnYahq4vDR5YBCI&#xA;4aSRp+8ZbeQjaUsNt+J96KonyTruoeZtIbUJodS0grII1t72KON3HpRyGRA8EbGMtIVUlRWnQHYK&#xA;p8NOlEjSC8mEjAKz8bfkVUkqCfS6DkafPFV31K5/5b5/+Bg/6pYq76lc/wDLfP8A8DB/1SxV31K5&#xA;/wCW+f8A4GD/AKpYq76lc/8ALfP/AMDB/wBUsVd9Suf+W+f/AIGD/qlirvqVz/y3z/8AAwf9UsVd&#xA;plg1jai3a6nvDyZvXuWV5PiNeNVVBReg2xVFYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYqkPmS786wMn+HtPsryKgMjXNzJHLyJIKrEI+HECh5GWvbj3xV575uP51eZtCuNNtt&#xA;Hs7SJplV7m2vP3jCJjzXi5jqvNaN8Y+kYqm+m6z+dFvDaWFxoOnvNHbJWeS9LvIY1VZGYinxcmq3&#xA;z2J64qzjQZvMMtly122tbW7rslnM8yFSK/Fzji4sOlAWHviqY4q7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUHp2s6TqZuBp95Ddm0laC5ELh/TlX7SNTo&#xA;Rirza4sBeWmraXdaNaPZXbS2k8T3EatLHbXZmiViLyNh+9ubhuVFY0+LrTFU70lrq481RTXFjbRi&#xA;W5ku2uoZI2keZIJrSMsqXExANqkf7NKnxGKsufWdKTVY9Ie7iXVJYjcR2RcCVogSpcJ1pUH7j4Yq&#xA;jMVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVSTU9V1aO89CxSAgMEb1+dSW&#xA;aFQQV7fv/Dtiqguq+ZGZxws/gdUb+96vM0A/4ZK/LFW11jXAzrJFE3BlSsCc93maAV9SaH9pD0rt&#xA;iraa3qroriBgHWFxWGPpcNxT/j78euKtxa1qknohYTynRHjUwx1pIruv/H1TpG2KtR6/fq/KaGsL&#xA;RQyRfuZAW9dmUbwtdU6CgKitcVWHzZMtOdtbjkFZK3YiJVzRTxuI4H+I7A8aHscVeW+UtI/M7y1c&#xA;Xl5pbae1vqkyNcG5SeS2UlyvISRrGeKlzU8sVTOTzJ5k1iHT7GwlhttU1O3jlllimmhjim+sXU0o&#xA;/d8pOLJCVA5DrvXaiqpa+c/Mr6BA+nfU/wBOLq72zpfSSToUg0x2d6p6cp5yRFY69SQDviqB0zRf&#xA;PUf5h2vm/XRatKodGgBe0TiYXiCxmZB05j7TGuKvTIPM9xM44W0LISEBjne4PMjlx/0eGZR8O+7V&#xA;9qb4q6DXNSuGLQxconkCQEQkcuUImp++mgboTuUFcVbTWdUd4USIkzqjR/uY/syK7qTW68ImxVqD&#xA;W9Vm9P04GIlZUUmGMbtF6w/4+/5MVUv07rjW5uUjgWHssqssn+8/1jdUkkX7O32uuKrptV8zRNcI&#xA;Y7ItbpI7by0IiSNyAflKMVTLSL69uPVjvFjE8RNTDy4UEskQHxb/AO6q19/bdVMcVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdiqX6lpjTypdW5VbqPgtHrwdElWXiaV47ps1DTwOKpHKusWss7SIUjeWK&#xA;RA0TSqQLx5W/ewk8FVXBq6Vp40OKrbbUZXe5IgE4E8HJ7aRJVWt/K3xcjG1SDUUB2xVUt9UsBbwC&#xA;SX0T6GmUE4aGtJ2rx9QLX6MVRVga3GmEdPQtf+TFzirrf/eaD/jBpn/J84q63/3mg/4waZ/yfOKq&#xA;FrYWMt1p5ktonMlvaiQsiksPQuOtRv0GKpJrENhYS6PqpEAu4o7aOOe9ungQLLb3XJQ7CXw2Xj8q&#xA;YqreR9O06TSLSX0Y2W7vHlnRXMkEjSWzOWoaI+/RuPSnYAYqm+h2lrCLRoYUjZp4+TIoUn/ceDvQ&#xA;Yqq6T/d2X/GeL/unDFXaT/d2X/GeL/unDFVttLFFLpskrrHGsFrydiAB+4uepOKofSdStilmIedw&#xA;fXip6Ss6k/o8CnqAemD822xVAPqFwdMWFYUjlcLxhlkBmPLTgg4xRCUtuQBvudsVTNLXWbq7vG4c&#xA;op45YkldPq8f7yOFeXBzJNUek3YA/jiqfWVklqj785ZXaSV+lWYliACTRQSaCuKojFXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYqh7nTrG5YPPAjyCnGUijrxPJeLj4hQ7ihxVLpvLf2TZ3s9twW&#xA;JI42ImjCwv6iij1Y/Ee7e3TFUtttA1PTri3kht7d/QEUSTWyhGZY45kLSxM8Kkn1QdnNN/pVWwnV&#xA;VhiUkgrFYqR9RudjDKWcfa/ZGKuiOqrBEpJBWKwUj6jc7GGUs4+3+yMVbtRq0c1izkgQxQJIfqVx&#xA;sUinVh9vehkH34qxjXPMUtveQaa7Brq0tbZ2QmTTuMqw3JCvK4nJHBX+xGQTSpX9pVE+R9almgSz&#xA;ik4yWl2WZPq01yeH1UKXM0TBG+N+PY9yB0Cqfad+lYktg5KmOVHb/Qrg0AsxETs/8+349MVdp41W&#xA;FLYOSpjlRm/0K4NAtmIidn/n2/HpirrBdZjS2UKWkSWNin1SVdhZiInk8qJs23XFW7XyzqTTWlxS&#xA;Cykt4IB65UXFz6sayKwJaqhSJP5m6Yqmll5atLZFWS4uLniwkX1JSoDCP0jQR8NigpxNR4d8VTK1&#xA;s7S0iEVrBHbxClI4lVF2FBsoA6Yqq4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXk/5iW9zb+Y5tRkktrbTZeMMl3dQmSJHisrg8ZH9WIJzNwgQH7Te4oVU9/LGxuk+&#xA;t3VyqqsqIbVlT0w6O7gyceT1VvSXia7jfpirO8VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirH/MnwaJ5kj687CWevu9u8dP+SNfpxVNot9UuSOgh&#xA;gBPvylNPuIxVFYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FUl15ITa6wlw3CGbTmUsTT4VEocgn+X1B9+KphZf703/8AxnX/AJMRYqisVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVS99btWnSC1Vrq&#xA;WQ8VaOnpiocgmRqKR+7YHjUinTFWNeZrq9vtOuEdY19bTfVijSpKmeaMcS5py+z/ACjFU1sNVuzc&#xA;M0UaXEN3KXQ1McnEmYDryVjwtgB9n38cVTOz1myujGgLQzSorpBMODEMCw4/stspPwk4qjcVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVQertKLE+kAzNJCp&#xA;VmKqVaZFcEgNsVJrtiqQ2Nrcm40wm7ljJgtTwQRFVrBc7KTHWg7VxVKtdtbpNIgkF7JxWCx5tIsR&#xA;UBhMo3VUpVioFf10xVGeX7O79HRne7mjlltrWaVFWIBZJYbmRwoZGIAZjQEk4qvFtIq2TSXDzItt&#xA;bMVlMaKvGC5bmGSIsGSnJad8VZZatM1tE044zlFMqjoHI+IffiqpirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVadEdGR1DIwIZSKgg7EEHFUsGgrFNHLa3UsXo&#xA;8RDC3GSJQiuoU8h6hX9637fy2FMVS3WfLOrXeiXVhDd27PNbw28fqQuo/cMWUlhI/j/LiqYnStQN&#xA;5HcC6hRYwgWNLdhQIsq7VlIG03h2xVdbaBbwtC0s810YFjSISlAB6QYKaRrGGNJD1xVM8VdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirH/8AlYfkD/qZtK/6Trb/AJrxV3/Kw/IH/UzaV/0nW3/NeKpxYajp+o2kd5p9&#xA;zFeWctfSubd1ljbixVuLoSpowIPviqIxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ks&#xA;fuPNZtp7dZrUGGcpUxyhpUjkmWBZGjKr8PqOoPFifY5HLOMZcN2erfpsByxJ5d3nQv7gyDJNCUDz&#xA;d5cOqPpf1+L65F6glQsAEaIwBkZj8Iat3GAK7k06g4qmUd3ayzy28c0bzwU9aJWBdOQqvJQarXtX&#xA;FUBB5m0SeN2iulZo7g2kkQ/vFkW6Nlun2gvrqVDUp3xVGTajp8ELTTXMUUKoJGkd1VQjGisSTShP&#xA;Q4qtOq6WszwNeQCaNDLJEZE5LGAGLla1CgEGuKrE1rSnkKC7iDBgi8nUcyyBxwqfiqp7e/hiq3Tt&#xA;e0XUYbWWxvobhL2L17UI68pI+7Kv2tjsdtjscVVX1bS0jlke8gWOB/SndpECpJWnByT8LVPQ4q2d&#xA;T00SPEbuH1I6eonqLyXk3AchXarfD88VeN6R/wA412lhFaRzyaBqTWtstoZLvQnZpAiookfhfp8f&#xA;FDv3LEmpxVCaD/zjAdIvbW5GpaJeraJMgguvL6yRyCWWSQerS9DPw9bgN/sqo7Yq9Y8heVP8KeWI&#xA;ND9eK49Ge7n9SCD6rCPrd3LdcI4ec3BI/W4KOZ2GKsgxVTuluHtpUtpFiuGRhDK681VyPhYrVeQB&#xA;7VGKsDh8o/m9BZiFfPsFzcBWH1m40iGpYzq6uVjljHwwgx8R1ryrXFVMeVPzqNrwbz7ZC45H98ui&#xA;x8eBDChQz7sCVKmoHWobFUVb+WfzXGqSXFz50tpLB2l4WUelxxlI2Evpj1DKzMys8e/gvTcnFVO/&#xA;8p/m1cl1g89xWcRhCI0WkwNIJhEF9UmR3WhkHMoB7VpQKqhz5R/OkvCx/MC1oImjmVdGhAZzy4yL&#xA;WVqEVXrUbdMVZ/Yx3cdnDHeTLcXSIFmnRPTV2AoWCVbjXwriqvirsVdirsVdirsVdirsVdirsVYh&#xA;r/lB9SLIkDerKqwrcm6ljjt0V3ImSFCVeaP1S0dV2anxDMbSYiJmeTflXW6J/G/wbjqJxhwQ2Bvo&#xA;L35782X5ktLDNT/LiHU9b1O/u5rZ7a9truC3tjaBnikvYLaB5XkaQhyBaGgCL9siuKu0f8t7aw1q&#xA;6v5LgyJMbsxtE93Bcj67crcuHlS54EBlp8Ma17+6qFT8s7uK79eG/tEMN9c6laSCyb6w0txdrdCO&#xA;6n9ctNGvHiacS1EP7G6qjeflfqV5LZS3WqwSrpaQxWEAt5olMdus8cfrvFco7NwuOqcaMoND0xVL&#xA;Y/ybuJbbV9KeaztNNuW4QTpatJcsDosWmkrK9w7LFzL/ALtqtxHHlRqhVks/5a6VNrN/qR9EC5jt&#xA;4rOH6uv+ii3MRHpsG6EwLsAO3hiqhpvkDU7DU9OvbfULSL6hCtswjtJQZooY5Y4VkVrlowR65Yui&#xA;K3UVo2yqhD+Wt5BBZRJcaZL+jY1trUz6cZPVi9J4jJdD1x6s1JNmHEbvt+8PFVZa/k7o8GnpaNLH&#xA;cOsF/btdTWyNK4voo4gztUVZFiFf5vbFX//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:DocumentID>xmp.did:b182a4c1-48cc-45d6-b00f-19c4f66329e0</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:b182a4c1-48cc-45d6-b00f-19c4f66329e0</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:79AE110971C1DE11AAC7AC14CF027332</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:5588207c-4c1c-8c4f-b8f9-6a661c037000</stRef:instanceID>
            <stRef:documentID>xmp.did:40555E81F2DFE3118323C52644444C45</stRef:documentID>
            <stRef:originalDocumentID>uuid:79AE110971C1DE11AAC7AC14CF027332</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F6CA1011EC72DF11ABD7ADA872BA7E6D</stEvt:instanceID>
                  <stEvt:when>2010-06-08T12:55:06+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b182a4c1-48cc-45d6-b00f-19c4f66329e0</stEvt:instanceID>
                  <stEvt:when>2019-07-04T23:42:17+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <pdf:GTS_PDFXVersion>PDF/X-1:2001</pdf:GTS_PDFXVersion>
         <pdf:Trapped>False</pdf:Trapped>
         <pdf:GTS_PDFXConformance>PDF/X-1a:2001</pdf:GTS_PDFXConformance>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
         <pdfx:GTS_PDFXConformance>PDF/X-1a:2001</pdfx:GTS_PDFXConformance>
         <pdfx:GTS_PDFXVersion>PDF/X-1:2001</pdfx:GTS_PDFXVersion>
         <xmpRights:WebStatement>http://www.the-blueprints.com</xmpRights:WebStatement>
         <xmpRights:Marked>True</xmpRights:Marked>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>296.999942</stDim:w>
            <stDim:h>209.999934</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>ArialMT</stFnt:fontName>
                  <stFnt:fontFamily>Arial</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.01.2x</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Arial.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Process Cyan</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 877 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>40.000001</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>AutoCAD Color</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 8222 C</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>LAB</xmpG:mode>
                           <xmpG:L>52.549000</xmpG:L>
                           <xmpG:A>-15</xmpG:A>
                           <xmpG:B>-21</xmpG:B>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -575.658 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 575.658 li
810.998 575.658 li
810.998 0 li
cp
clp
111.452 103.255 mo
114.165 101.864 118.711 101.267 125.093 101.455 cv
127.793 101.7 130.413 101.993 132.949 102.309 cv
145.515 103.862 156.234 106.236 165.083 109.415 cv
165.2 108.772 165.55 108.445 166.124 108.422 cv
172.787 109.17 li
172.833 109.123 li
172.95 109.005 173.089 108.947 173.253 108.947 cv
173.417 108.947 173.558 109.005 173.662 109.123 cv
173.721 109.17 173.756 109.229 173.78 109.287 cv
183.084 110.328 li
183.096 110.198 183.155 110.082 183.248 109.988 cv
183.365 109.872 183.505 109.813 183.668 109.813 cv
183.833 109.813 183.972 109.872 184.078 109.988 cv
184.195 110.094 184.253 110.234 184.253 110.396 cv
184.253 110.456 li
196.819 111.87 li
197.24 112.244 li
197.322 112.15 197.426 112.092 197.555 112.057 cv
197.719 112.021 197.871 112.057 198 112.139 cv
198.14 112.22 198.221 112.349 198.257 112.513 cv
198.292 112.665 198.257 112.816 198.175 112.957 cv
198.128 113.027 li
198.221 113.096 li
201.788 113.507 205.317 113.927 208.812 114.36 cv
219.275 115.645 229.397 117.024 239.181 118.498 cv
240.573 118.521 241.893 118.416 243.143 118.181 cv
247.037 117.468 250.215 115.529 252.682 112.36 cv
252.881 112.103 li
257.112 105.089 li
260.993 98.6846 li
265.458 91.2847 li
269.561 84.5049 li
271.466 81.3486 li
273.804 78.3091 277.265 76.6851 281.857 76.4634 cv
282.292 76.439 282.724 76.4277 283.167 76.439 cv
287.867 77.293 291.712 79.981 294.692 84.5049 cv
294.986 84.9609 295.278 85.4297 295.558 85.9082 cv
296.599 87.6733 297.605 89.4614 298.585 91.2847 cv
299.884 93.6934 301.135 96.1592 302.338 98.6846 cv
303.344 100.777 304.314 102.916 305.249 105.089 cv
306.266 107.463 307.258 109.894 308.206 112.36 cv
308.942 114.278 309.644 116.217 310.334 118.193 cv
311.117 120.403 311.852 122.659 312.567 124.95 cv
312.953 126.154 313.315 127.358 313.677 128.585 cv
315.594 135.12 315.981 139.246 314.846 140.988 cv
313.875 142.214 311.818 143.068 308.65 143.547 cv
297.02 145.71 285.435 147.651 273.898 149.38 cv
274.716 151.298 li
275.009 152.011 274.799 152.524 274.085 152.829 cv
273.326 153.145 li
273.337 153.157 273.337 153.181 273.348 153.191 cv
273.583 153.671 273.84 154.115 274.121 154.524 cv
274.879 153.951 275.756 153.659 276.762 153.659 cv
277.99 153.659 279.03 154.091 279.894 154.945 cv
280.749 155.809 281.181 156.851 281.181 158.077 cv
281.181 159.304 280.749 160.346 279.894 161.198 cv
279.03 162.063 277.99 162.497 276.762 162.497 cv
275.535 162.497 274.494 162.063 273.641 161.198 cv
272.776 160.346 272.343 159.304 272.343 158.077 cv
272.343 157.213 272.553 156.441 272.986 155.763 cv
272.635 155.284 272.321 154.771 272.029 154.196 cv
271.947 154.045 li
271.432 153.063 li
271.373 152.97 271.314 152.864 271.268 152.747 cv
270.075 149.954 li
264.945 150.702 259.812 151.403 254.681 152.069 cv
239.309 154.068 224.02 155.682 208.812 156.908 cv
207.329 157.026 205.855 157.143 204.382 157.248 cv
202.897 157.352 201.401 157.47 199.905 157.575 cv
196.761 157.797 193.628 158.007 190.483 158.195 cv
185.129 158.498 li
185.072 158.498 185.013 158.498 184.955 158.51 cv
171.804 159.2 158.782 159.585 145.889 159.644 cv
127.174 159.679 li
121.972 159.679 li
121.341 166.586 li
121.423 168.657 122.569 170.292 124.754 171.509 cv
125.07 171.672 li
131.744 175.366 li
134.773 177.119 136.093 179.259 135.719 181.795 cv
135.427 185.068 li
134.994 186.365 133.604 187.417 131.242 188.236 cv
127.689 189.464 124.323 190.457 121.143 191.217 cv
118.886 191.731 li
118.886 191.895 li
118.875 195.027 117.752 197.693 115.532 199.89 cv
113.299 202.099 110.622 203.198 107.49 203.187 cv
104.357 203.175 101.692 202.053 99.4946 199.82 cv
97.2847 197.599 96.1978 194.922 96.2095 191.79 cv
96.2095 191.416 li
95.6958 191.229 95.1919 191.019 94.6899 190.796 cv
94.4561 190.621 94.2339 190.445 94.023 190.271 cv
93.6382 189.931 93.2871 189.591 92.9712 189.241 cv
92.4458 188.621 92.0366 187.978 91.7446 187.313 cv
91.2066 186.085 91.0537 184.753 91.2876 183.314 cv
91.3936 182.648 91.5454 182.006 91.7446 181.374 cv
91.8843 180.918 92.0483 180.474 92.2466 180.042 cv
93.9185 176.243 97.46 173.041 102.873 170.444 cv
104.976 168.96 106.344 167.044 106.963 164.717 cv
107.512 159.655 li
97.7993 159.644 li
90.7036 159.492 li
90.5278 160.1 90.084 160.392 89.395 160.357 cv
88.1201 160.333 li
85.6773 162.392 82.9536 163.42 79.9497 163.431 cv
79.2603 163.49 78.8042 163.35 78.5933 162.987 cv
78.5122 162.836 78.4761 162.683 78.5005 162.507 cv
78.5122 162.378 78.5474 162.263 78.5825 162.146 cv
78.7222 161.854 78.9448 161.619 79.2485 161.444 cv
80.1953 161.105 80.8032 160.638 81.0952 160.065 cv
79.938 159.983 78.8276 159.901 77.7754 159.809 cv
77.7876 159.866 77.7983 159.913 77.7876 159.959 cv
77.7754 160.029 77.751 160.088 77.7051 160.147 cv
77.6939 160.17 77.6699 160.193 77.647 160.205 cv
77.5064 160.309 77.2847 160.379 76.981 160.439 cv
76.478 160.532 75.8814 160.532 75.1919 160.45 cv
74.9233 160.416 74.6665 160.369 74.4204 160.309 cv
74.0581 160.217 73.7427 160.1 73.4614 159.971 cv
72.9946 159.749 72.7725 159.527 72.8071 159.304 cv
72.8306 159.247 li
72.2461 159.165 71.6846 159.072 71.148 158.979 cv
70.5278 158.86 69.9316 158.732 69.3823 158.604 cv
69.1607 158.521 68.939 158.427 68.728 158.323 cv
65.8872 156.944 64.6714 154.115 65.0566 149.836 cv
65.0566 145.394 li
62.2632 145.394 li
62.3447 145.874 62.4151 146.377 62.4859 146.892 cv
62.4859 146.914 62.4859 146.938 62.4976 146.949 cv
63.023 150.923 63.3272 155.903 63.4331 161.876 cv
63.0933 173.647 62.311 179.259 61.083 178.71 cv
60.0425 178.393 59.376 171.38 59.0962 157.669 cv
58.9902 152.584 59.6099 148.48 60.9546 145.372 cv
60.2998 145.266 59.7969 144.846 59.4585 144.109 cv
58.4302 144.109 li
58.523 145.512 li
52.6792 145.254 49.6738 143.747 49.5112 141 cv
49.4995 140.918 49.4995 140.848 49.4995 140.766 cv
49.4995 140.672 49.4995 140.579 49.5112 140.485 cv
49.6626 137.739 52.6665 136.23 58.523 135.973 cv
58.4302 137.375 li
59.4585 137.375 li
59.7969 136.64 60.2998 136.22 60.9546 136.113 cv
59.6099 133.004 58.9902 128.901 59.0962 123.816 cv
59.1314 122.461 59.1543 121.175 59.19 119.958 cv
59.2476 117.773 59.3296 115.81 59.4111 114.043 cv
59.5874 110.467 59.8208 107.744 60.0889 105.862 cv
60.3696 103.921 60.6978 102.893 61.083 102.775 cv
61.6441 102.531 62.1118 103.558 62.4859 105.862 cv
62.6494 106.879 62.8023 108.164 62.9302 109.696 cv
63.1519 112.279 63.3159 115.575 63.4331 119.608 cv
63.3272 125.582 63.023 130.56 62.4976 134.536 cv
62.4859 134.547 62.4859 134.57 62.4859 134.593 cv
62.4151 135.108 62.3447 135.611 62.2632 136.089 cv
65.0566 136.089 li
65.0566 131.647 li
64.6362 127.053 66.0747 124.133 69.3823 122.881 cv
69.9316 122.753 70.5278 122.635 71.148 122.519 cv
71.6738 122.413 72.2349 122.32 72.8306 122.239 cv
72.8071 122.181 li
72.7725 121.958 72.9946 121.736 73.4614 121.514 cv
73.7427 121.384 74.0581 121.268 74.4204 121.175 cv
74.6665 121.116 74.9233 121.069 75.1919 121.034 cv
75.8814 120.952 76.478 120.952 76.981 121.046 cv
77.2847 121.104 77.5064 121.175 77.647 121.28 cv
77.6699 121.292 77.6939 121.314 77.7051 121.338 cv
77.751 121.396 77.7754 121.455 77.7876 121.525 cv
77.7983 121.572 77.7876 121.619 77.7754 121.676 cv
79.6694 121.501 81.749 121.374 84.0059 121.28 cv
84.0884 121.28 84.1694 121.28 84.2515 121.268 cv
85.8765 121.209 87.5825 121.164 89.395 121.127 cv
89.9434 121.104 90.3296 121.28 90.5523 121.654 cv
97.7993 118.124 li
100.067 117.013 li
108.904 106.307 li
108.939 105.874 109.115 105.381 109.418 104.845 cv
109.909 104.225 110.587 103.7 111.452 103.255 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
ef
60.9546 136.113 mo
60.2998 136.22 59.7969 136.64 59.4585 137.375 cv
58.4302 137.375 li
58.523 135.973 li
52.6665 136.23 49.6626 137.739 49.5112 140.485 cv
49.4995 140.579 49.4995 140.672 49.4995 140.766 cv
49.4995 140.848 49.4995 140.918 49.5112 141 cv
49.6738 143.747 52.6792 145.254 58.523 145.512 cv
58.4302 144.109 li
59.4585 144.109 li
59.7969 144.846 60.2998 145.266 60.9546 145.372 cv
59.6099 148.48 58.9902 152.584 59.0962 157.669 cv
59.376 171.38 60.0425 178.393 61.083 178.71 cv
62.311 179.259 63.0933 173.647 63.4331 161.876 cv
63.3272 155.903 63.023 150.923 62.4976 146.949 cv
62.4859 146.938 62.4859 146.914 62.4859 146.892 cv
62.4151 146.377 62.3447 145.874 62.2632 145.394 cv
65.0566 145.394 li
65.0566 136.089 li
62.2632 136.089 li
62.3447 135.611 62.4151 135.108 62.4859 134.593 cv
62.4859 134.57 62.4859 134.547 62.4976 134.536 cv
63.023 130.56 63.3272 125.582 63.4331 119.608 cv
63.3159 115.575 63.1519 112.279 62.9302 109.696 cv
62.8023 108.164 62.6494 106.879 62.4859 105.862 cv
62.1118 103.558 61.6441 102.531 61.083 102.775 cv
60.6978 102.893 60.3696 103.921 60.0889 105.862 cv
59.8208 107.744 59.5874 110.467 59.4111 114.043 cv
59.3296 115.81 59.2476 117.773 59.19 119.958 cv
59.1543 121.175 59.1314 122.461 59.0962 123.816 cv
58.9902 128.901 59.6099 133.004 60.9546 136.113 cv
cp
.619532 .538659 .52932 .256565 cmyk
ef
74.4204 121.175 mo
74.0581 121.268 73.7427 121.384 73.4614 121.514 cv
72.9946 121.736 72.7725 121.958 72.8071 122.181 cv
72.8306 122.239 li
73.3335 122.157 73.8716 122.086 74.4204 122.028 cv
75.438 121.899 76.5366 121.782 77.7051 121.676 cv
77.7754 121.676 li
77.7876 121.619 77.7983 121.572 77.7876 121.525 cv
77.7754 121.455 77.751 121.396 77.7051 121.338 cv
77.6939 121.314 77.6699 121.292 77.647 121.28 cv
77.5064 121.175 77.2847 121.104 76.981 121.046 cv
76.478 120.952 75.8814 120.952 75.1919 121.034 cv
74.9233 121.069 74.6665 121.116 74.4204 121.175 cv
cp
ef
75.2036 128.445 mo
74.9233 128.469 74.6665 128.504 74.4204 128.563 cv
74.0698 128.644 73.7544 128.772 73.4741 128.925 cv
72.9946 129.182 72.7725 129.463 72.7964 129.778 cv
72.8184 130.093 73.0884 130.338 73.5903 130.526 cv
73.8477 130.608 74.1284 130.678 74.4204 130.713 cv
74.7251 130.749 75.0523 130.749 75.3906 130.713 cv
76.0806 130.654 76.6655 130.502 77.1323 130.246 cv
77.4009 130.093 77.5996 129.93 77.7051 129.765 cv
77.7876 129.638 77.8213 129.509 77.811 129.38 cv
77.7983 129.275 77.7632 129.182 77.7051 129.088 cv
77.5767 128.913 77.354 128.761 77.0161 128.644 cv
76.5015 128.457 75.8941 128.387 75.2036 128.445 cv
cp
ef
74.4204 138.826 mo
74.0933 138.896 73.7896 139.013 73.521 139.176 cv
73.0293 139.468 72.7837 139.831 72.7837 140.251 cv
72.7837 140.427 72.8306 140.589 72.9126 140.742 cv
73.0293 140.964 73.228 141.152 73.521 141.327 cv
73.7896 141.49 74.0933 141.608 74.4204 141.689 cv
74.6899 141.748 74.9819 141.771 75.2974 141.771 cv
75.9868 141.771 76.5835 141.619 77.0737 141.327 cv
77.3667 141.152 77.5645 140.964 77.6821 140.742 cv
77.6939 140.73 77.6939 140.708 77.7051 140.695 cv
77.7754 140.556 77.811 140.403 77.811 140.251 cv
77.811 140.099 77.7754 139.947 77.7051 139.808 cv
77.5884 139.574 77.3784 139.363 77.0737 139.176 cv
76.5835 138.884 75.9868 138.732 75.2974 138.732 cv
74.9819 138.732 74.6899 138.768 74.4204 138.826 cv
cp
ef
74.4204 150.783 mo
74.1284 150.818 73.8477 150.877 73.5903 150.959 cv
73.0884 151.145 72.8184 151.392 72.7964 151.707 cv
72.7725 152.022 72.9946 152.303 73.4741 152.56 cv
73.7544 152.713 74.0698 152.84 74.4204 152.922 cv
74.6665 152.981 74.9233 153.016 75.2036 153.039 cv
75.8941 153.099 76.5015 153.028 77.0161 152.84 cv
77.354 152.724 77.5767 152.572 77.7051 152.396 cv
77.7632 152.303 77.7983 152.209 77.811 152.104 cv
77.8213 151.976 77.7876 151.847 77.7051 151.719 cv
77.5996 151.555 77.4009 151.392 77.1323 151.239 cv
76.6655 150.982 76.0806 150.831 75.3906 150.772 cv
75.0523 150.737 74.7251 150.749 74.4204 150.783 cv
cp
ef
77.7051 159.807 mo
76.5366 159.703 75.438 159.596 74.4204 159.469 cv
73.8716 159.398 73.3335 159.328 72.8306 159.247 cv
72.8071 159.304 li
72.7725 159.527 72.9946 159.749 73.4614 159.971 cv
73.7427 160.1 74.0581 160.217 74.4204 160.309 cv
74.6665 160.369 74.9233 160.416 75.1919 160.45 cv
75.8814 160.532 76.478 160.532 76.981 160.439 cv
77.2847 160.379 77.5064 160.309 77.647 160.205 cv
77.6699 160.193 77.6939 160.17 77.7051 160.147 cv
77.751 160.088 77.7754 160.029 77.7876 159.959 cv
77.7983 159.913 77.7876 159.866 77.7754 159.807 cv
77.7051 159.807 li
cp
ef
84.0059 160.205 mo
83.0005 160.17 82.0308 160.123 81.0952 160.065 cv
80.8032 160.638 80.1953 161.105 79.2485 161.444 cv
78.9448 161.619 78.7222 161.854 78.5825 162.146 cv
78.5474 162.263 78.5122 162.378 78.5005 162.507 cv
78.4761 162.683 78.5122 162.836 78.5933 162.987 cv
78.8042 163.35 79.2603 163.49 79.9497 163.431 cv
82.9536 163.42 85.6773 162.392 88.1201 160.333 cv
86.7769 160.298 85.4907 160.263 84.2515 160.217 cv
84.1694 160.205 84.0884 160.205 84.0059 160.205 cv
cp
ef
102.066 192.818 mo
100.196 192.572 98.4419 192.175 96.8174 191.638 cv
96.6187 191.567 96.4087 191.497 96.2095 191.416 cv
96.2095 191.79 li
96.1978 194.922 97.2847 197.599 99.4946 199.82 cv
101.692 202.053 104.357 203.175 107.49 203.187 cv
110.622 203.198 113.299 202.099 115.532 199.89 cv
117.752 197.693 118.875 195.027 118.886 191.895 cv
118.886 191.731 li
118.839 191.743 118.793 191.743 118.758 191.754 cv
116.771 192.164 114.854 192.491 113.018 192.724 cv
112.843 193.905 112.316 194.934 111.417 195.811 cv
110.317 196.886 108.998 197.413 107.466 197.389 cv
105.935 197.377 104.625 196.816 103.562 195.705 cv
102.755 194.875 102.252 193.905 102.066 192.818 cv
cp
ef
113.018 192.724 mo
108.998 193.215 105.35 193.25 102.066 192.818 cv
102.252 193.905 102.755 194.875 103.562 195.705 cv
104.625 196.816 105.935 197.377 107.466 197.389 cv
108.998 197.413 110.317 196.886 111.417 195.811 cv
112.316 194.934 112.843 193.905 113.018 192.724 cv
cp
.0704051 .0445258 .0503853 0 cmyk
ef
117.25 110.467 mo
116.993 117.387 li
120.266 117.387 li
120.266 110.444 li
119.53 110.374 118.805 110.304 118.068 110.221 cv
117.413 110.152 li
117.25 110.467 li
cp
121.435 110.561 mo
121.435 117.387 li
127.174 117.387 li
127.174 111.063 li
125.257 110.899 123.34 110.736 121.435 110.561 cv
121.435 110.561 li
cp
127.174 118.556 mo
116.946 118.556 li
116.818 121.889 li
127.174 121.889 li
127.174 118.556 li
127.174 118.556 li
cp
127.174 123.056 mo
116.783 123.056 li
116.595 127.99 li
127.174 127.79 li
127.174 123.056 li
127.174 123.056 li
cp
128.343 111.157 mo
128.343 118.906 li
138.232 118.906 li
138.232 111.847 li
136.467 111.741 134.702 111.625 132.949 111.496 cv
131.406 111.39 129.875 111.273 128.343 111.157 cv
128.343 111.157 li
cp
128.343 120.075 mo
128.343 127.113 li
137.905 127.077 li
138.232 126.727 li
138.232 120.075 li
128.343 120.075 li
128.343 120.075 li
cp
139.401 111.905 mo
141.902 112.046 144.415 112.173 146.941 112.279 cv
146.941 117.106 li
139.401 125.43 li
139.401 111.905 li
139.401 111.905 li
cp
146.941 121.688 mo
142.078 127.077 li
146.941 127.077 li
146.941 121.688 li
146.941 121.688 li
cp
154.2 113.623 mo
154.819 113.681 li
154.784 113.705 li
154.784 127.077 li
148.11 127.077 li
148.11 120.392 li
154.2 113.623 li
154.2 113.623 li
cp
148.11 112.326 mo
148.11 115.81 li
150.459 113.214 li
150.202 112.887 150.121 112.618 150.214 112.396 cv
148.11 112.326 li
148.11 112.326 li
cp
156.128 113.799 mo
156.128 127.077 li
161.798 127.077 li
161.798 112.652 li
160.162 112.63 li
160.15 112.63 li
159.788 113.437 158.456 113.834 156.128 113.799 cv
156.128 113.799 li
cp
163.083 115.318 mo
168.589 127.077 li
163.083 127.077 li
163.083 115.318 li
163.083 115.318 li
cp
164.019 114.208 mo
168.601 124.004 li
168.695 123.957 168.799 123.945 168.905 123.957 cv
172.669 124.377 li
172.669 113.903 li
163.879 113.903 li
164.019 114.208 li
164.019 114.208 li
cp
172.787 109.17 mo
166.124 108.422 li
165.55 108.445 165.2 108.772 165.083 109.415 cv
165.223 110.619 li
165.48 112.688 li
164.755 112.688 164.031 112.688 163.306 112.676 cv
163.353 112.792 li
163.435 112.759 163.516 112.734 163.61 112.734 cv
172.669 112.734 li
172.669 109.532 li
172.669 109.392 172.705 109.275 172.787 109.17 cv
172.787 109.17 li
cp
183.084 110.327 mo
173.78 109.287 li
173.814 109.357 173.838 109.439 173.838 109.532 cv
173.838 112.734 li
183.084 112.734 li
183.084 110.396 li
183.084 110.327 li
183.084 110.327 li
cp
196.819 111.87 mo
184.253 110.456 li
184.253 112.734 li
196.912 112.734 li
197.193 112.314 li
197.206 112.279 197.228 112.255 197.24 112.244 cv
196.819 111.87 li
196.819 111.87 li
cp
184.253 113.903 mo
184.242 125.664 li
188.32 126.108 li
196.165 113.903 li
184.253 113.903 li
184.253 113.903 li
cp
173.838 113.903 mo
173.838 124.506 li
183.073 125.534 li
183.084 113.903 li
173.838 113.903 li
173.838 113.903 li
cp
108.904 106.307 mo
100.067 117.013 li
109.301 128.129 li
111.792 128.083 li
112.457 110.467 li
112.048 108.959 li
111.032 108.596 110.155 108.152 109.418 107.65 cv
109.044 107.288 108.869 106.832 108.904 106.307 cv
108.904 106.307 li
cp
ef
118.537 108.013 mo
116.28 107.159 114.012 107.124 111.756 107.896 cv
112.048 108.959 li
112.457 110.467 li
111.792 128.083 li
111.207 143.722 li
110.868 152.782 li
110.821 154.208 li
112.446 155.588 115.567 155.973 120.172 155.365 cv
120.254 154.839 120.348 154.326 120.453 153.846 cv
120.991 151.379 121.915 149.439 123.223 148.002 cv
127.174 143.618 li
129.747 140.754 li
136.584 133.167 li
142.078 127.077 li
146.941 121.688 li
148.11 120.392 li
154.2 113.623 li
154.819 113.681 li
156.128 113.799 li
158.456 113.834 159.788 113.437 160.15 112.63 cv
160.185 111.917 159.588 111.531 158.349 111.46 cv
151.967 111.46 li
150.986 111.437 150.4 111.754 150.214 112.396 cv
150.121 112.618 150.202 112.887 150.459 113.214 cv
148.11 115.81 li
146.941 117.106 li
139.401 125.43 li
138.232 126.727 li
137.905 127.077 li
132.318 133.261 li
127.174 138.942 li
120.768 146.015 li
118.629 146.212 117.04 145.582 115.988 144.145 cv
116.595 127.99 li
116.783 123.056 li
116.818 121.889 li
116.946 118.556 li
116.993 117.387 li
117.25 110.467 li
117.413 110.152 li
118.537 108.013 li
cp
.619532 .538659 .52932 .256565 cmyk
ef
270.075 149.954 mo
271.268 152.747 li
271.314 152.864 271.373 152.97 271.432 153.063 cv
271.536 153.215 271.665 153.331 271.806 153.413 cv
271.771 153.577 271.794 153.741 271.876 153.894 cv
271.947 154.045 li
272.029 154.196 li
272.321 154.771 272.635 155.284 272.986 155.763 cv
273.688 156.687 274.505 157.435 275.43 157.996 cv
275.898 158.253 li
276.096 158.358 276.306 158.37 276.517 158.3 cv
276.738 158.229 276.891 158.089 276.995 157.891 cv
277.101 157.691 277.113 157.481 277.043 157.271 cv
276.984 157.048 276.843 156.896 276.645 156.792 cv
276.633 156.78 276.61 156.78 276.599 156.768 cv
275.628 156.254 274.81 155.506 274.121 154.524 cv
273.84 154.115 273.583 153.671 273.348 153.191 cv
273.337 153.181 273.337 153.157 273.326 153.145 cv
274.085 152.829 li
274.799 152.524 275.009 152.011 274.716 151.298 cv
273.898 149.38 li
272.624 149.58 271.35 149.767 270.075 149.954 cv
cp
ef
272.986 155.763 mo
272.553 156.441 272.343 157.213 272.343 158.077 cv
272.343 159.304 272.776 160.346 273.641 161.198 cv
274.494 162.063 275.535 162.497 276.762 162.497 cv
277.99 162.497 279.03 162.063 279.894 161.198 cv
280.749 160.346 281.181 159.304 281.181 158.077 cv
281.181 156.851 280.749 155.809 279.894 154.945 cv
279.03 154.091 277.99 153.659 276.762 153.659 cv
275.756 153.659 274.879 153.951 274.121 154.524 cv
274.81 155.506 275.628 156.254 276.599 156.768 cv
276.657 156.757 276.704 156.757 276.75 156.757 cv
277.113 156.757 277.428 156.884 277.686 157.154 cv
277.943 157.422 278.072 157.739 278.072 158.102 cv
278.072 158.464 277.943 158.779 277.674 159.036 cv
277.417 159.282 277.101 159.41 276.738 159.41 cv
276.376 159.41 276.061 159.282 275.804 159.024 cv
275.558 158.767 275.43 158.452 275.43 158.089 cv
275.43 157.996 li
274.505 157.435 273.688 156.687 272.986 155.763 cv
cp
ef
276.517 158.3 mo
276.306 158.37 276.096 158.358 275.898 158.253 cv
275.43 157.996 li
275.43 158.089 li
275.43 158.452 275.558 158.767 275.804 159.024 cv
276.061 159.282 276.376 159.41 276.738 159.41 cv
277.101 159.41 277.417 159.282 277.674 159.036 cv
277.943 158.779 278.072 158.464 278.072 158.102 cv
278.072 157.739 277.943 157.422 277.686 157.154 cv
277.428 156.884 277.113 156.757 276.75 156.757 cv
276.704 156.757 276.657 156.757 276.599 156.768 cv
276.61 156.78 276.633 156.78 276.645 156.792 cv
276.843 156.896 276.984 157.048 277.043 157.271 cv
277.113 157.481 277.101 157.691 276.995 157.891 cv
276.891 158.089 276.738 158.229 276.517 158.3 cv
cp
.0704051 .0445258 .0503853 0 cmyk
ef
535.979 278.722 mo
536.133 271.626 li
535.524 271.451 535.232 271.007 535.268 270.318 cv
535.303 268.506 535.35 266.799 535.408 265.175 cv
535.419 265.093 535.419 265.011 535.419 264.928 cv
535.513 262.672 535.641 260.593 535.816 258.698 cv
535.759 258.71 535.712 258.723 535.665 258.71 cv
535.595 258.698 535.536 258.675 535.478 258.628 cv
535.454 258.617 535.431 258.594 535.419 258.57 cv
535.314 258.429 535.244 258.208 535.186 257.904 cv
535.092 257.401 535.092 256.805 535.174 256.115 cv
535.209 255.847 535.255 255.59 535.314 255.344 cv
535.408 254.981 535.524 254.666 535.653 254.385 cv
535.875 253.918 536.097 253.696 536.319 253.731 cv
536.378 253.753 li
536.46 253.158 536.554 252.596 536.659 252.07 cv
536.775 251.451 536.892 250.855 537.021 250.305 cv
538.272 246.998 541.193 245.559 545.788 245.981 cv
550.229 245.981 li
550.229 243.187 li
549.751 243.268 549.248 243.339 548.732 243.409 cv
548.71 243.409 548.687 243.409 548.675 243.421 cv
544.701 243.947 539.722 244.251 533.747 244.355 cv
521.977 244.017 516.365 243.233 516.915 242.006 cv
517.23 240.966 524.244 240.3 537.955 240.019 cv
543.041 239.914 547.144 240.533 550.254 241.877 cv
550.358 241.222 550.779 240.721 551.516 240.381 cv
551.516 239.354 li
550.113 239.446 li
550.37 233.59 551.878 230.586 554.625 230.434 cv
554.718 230.422 554.812 230.422 554.905 230.422 cv
554.986 230.422 555.058 230.422 555.139 230.434 cv
557.887 230.598 559.395 233.602 559.65 239.446 cv
558.249 239.354 li
558.249 240.381 li
558.985 240.721 559.406 241.222 559.511 241.877 cv
562.621 240.533 566.723 239.914 571.808 240.019 cv
585.519 240.3 592.533 240.966 592.849 242.006 cv
593.398 243.233 587.787 244.017 576.017 244.355 cv
570.043 244.251 565.063 243.947 561.089 243.421 cv
561.077 243.409 561.054 243.409 561.03 243.409 cv
560.516 243.339 560.013 243.268 559.534 243.187 cv
559.534 245.981 li
563.977 245.981 li
568.57 245.559 571.493 246.998 572.742 250.305 cv
572.872 250.855 573 251.451 573.117 252.07 cv
573.211 252.608 573.305 253.17 573.387 253.753 cv
573.444 253.731 li
573.667 253.696 573.889 253.918 574.111 254.385 cv
574.239 254.666 574.355 254.981 574.45 255.344 cv
574.508 255.59 574.556 255.847 574.59 256.115 cv
574.672 256.805 574.672 257.401 574.578 257.904 cv
574.519 258.208 574.45 258.429 574.345 258.57 cv
574.333 258.594 574.31 258.617 574.286 258.628 cv
574.227 258.675 574.169 258.698 574.1 258.71 cv
574.052 258.723 574.006 258.71 573.947 258.698 cv
574.123 260.593 574.251 262.672 574.345 264.928 cv
574.345 265.011 574.345 265.093 574.355 265.175 cv
574.415 266.799 574.462 268.506 574.496 270.318 cv
574.531 271.007 574.239 271.451 573.631 271.626 cv
573.783 278.722 li
574.006 289.885 li
576.775 288.798 580.68 288.284 585.718 288.318 cv
588.488 288.178 590.675 287.875 592.264 287.395 cv
592.264 279.668 li
592.393 278.746 592.614 277.974 592.954 277.331 cv
593.152 276.957 593.375 276.629 593.643 276.35 cv
594.076 275.894 594.614 275.566 595.245 275.367 cv
595.584 275.262 595.959 275.192 596.355 275.157 cv
597.559 275.297 598.506 275.695 599.172 276.35 cv
599.978 277.133 600.411 278.266 600.447 279.774 cv
600.447 289.254 li
600.762 291.569 601.405 292.877 602.375 293.17 cv
627.157 293.17 li
643.008 290.412 li
766.026 290.412 li
766.225 290.423 766.411 290.434 766.598 290.458 cv
770.046 290.82 771.8 292.984 771.87 296.969 cv
771.754 302.089 770 306.647 766.598 310.657 cv
764.529 313.1 761.841 315.333 758.532 317.356 cv
758.416 317.424 li
757.761 317.718 757.083 317.999 756.382 318.29 cv
754.57 319.027 752.606 319.787 750.467 320.545 cv
749.088 321.038 747.638 321.528 746.118 322.031 cv
744.892 322.439 743.604 322.849 742.285 323.259 cv
741.35 323.55 li
739.141 324.228 736.802 324.917 734.336 325.608 cv
731.822 326.322 729.169 327.034 726.387 327.758 cv
724.529 328.238 722.623 328.728 720.647 329.22 cv
717.971 329.979 li
709.998 332.248 li
701.863 334.574 li
693.166 337.051 li
668.852 343.984 li
660.903 346.25 li
651.657 348.88 li
642.481 348.88 li
634.229 348.88 li
625.977 348.88 li
617.15 348.88 li
608.442 348.88 li
600.085 348.88 li
591.809 348.88 li
583.918 348.88 li
575.21 348.88 li
571.118 348.88 li
570.698 355.848 570.242 362.838 569.739 369.839 cv
569.201 377.31 568.616 384.791 567.998 392.307 cv
567.331 400.395 566.606 408.508 565.846 416.656 cv
565.39 421.342 li
564.771 427.738 564.128 434.154 563.438 440.583 cv
575.665 445.154 li
584.047 448.275 li
592.592 451.466 li
594.38 452.132 li
596.672 453.044 598.693 454.083 600.435 455.242 cv
605.87 458.854 608.677 463.705 608.863 469.772 cv
608.875 470.158 608.887 470.554 608.875 470.953 cv
608.677 477.334 605.858 482.291 600.435 485.821 cv
598.892 486.827 597.139 487.714 595.186 488.487 cv
592.592 489.083 li
589.915 489.656 587.062 490.192 584.047 490.684 cv
581.382 491.117 578.588 491.501 575.665 491.852 cv
572.942 492.192 570.09 492.484 567.133 492.752 cv
563.567 493.069 559.838 493.337 555.945 493.559 cv
555.431 496.668 li
555.232 497.031 555.034 497.218 554.858 497.23 cv
554.672 497.241 554.496 497.054 554.332 496.668 cv
553.818 493.559 li
549.926 493.337 546.196 493.069 542.631 492.752 cv
539.674 492.484 536.822 492.192 534.099 491.852 cv
531.177 491.501 528.382 491.117 525.718 490.684 cv
522.701 490.192 519.849 489.656 517.172 489.083 cv
514.577 488.487 li
512.626 487.714 510.872 486.827 509.329 485.821 cv
503.905 482.291 501.088 477.334 500.89 470.953 cv
500.877 470.554 500.89 470.158 500.901 469.772 cv
501.088 463.705 503.894 458.854 509.329 455.242 cv
511.07 454.083 513.093 453.044 515.384 452.132 cv
517.172 451.466 li
525.718 448.275 li
534.099 445.154 li
546.326 440.583 li
545.636 434.154 544.993 427.738 544.374 421.342 cv
544.221 419.777 544.081 418.209 543.93 416.656 cv
543.157 408.508 542.433 400.395 541.767 392.307 cv
541.147 384.791 540.563 377.31 540.036 369.839 cv
539.534 362.838 539.066 355.848 538.646 348.88 cv
534.554 348.88 li
525.846 348.88 li
517.955 348.88 li
509.68 348.88 li
501.321 348.88 li
492.612 348.88 li
483.788 348.88 li
475.535 348.88 li
467.283 348.88 li
458.106 348.88 li
448.86 346.25 li
440.911 343.984 li
416.598 337.051 li
407.901 334.574 li
399.765 332.248 li
391.793 329.979 li
389.117 329.22 li
387.141 328.728 385.236 328.238 383.377 327.758 cv
380.595 327.034 377.941 326.322 375.428 325.608 cv
372.962 324.917 370.625 324.228 368.415 323.55 cv
367.48 323.259 li
364.523 322.334 361.799 321.434 359.297 320.545 cv
356.329 319.482 353.675 318.443 351.349 317.424 cv
351.232 317.356 li
347.923 315.333 345.234 313.1 343.167 310.657 cv
339.764 306.647 338.011 302.089 337.894 296.969 cv
337.964 292.984 339.718 290.82 343.167 290.458 cv
343.353 290.434 343.54 290.423 343.738 290.412 cv
466.757 290.412 li
482.607 293.17 li
507.389 293.17 li
508.358 292.877 509.002 291.569 509.317 289.254 cv
509.317 279.774 li
509.352 278.266 509.785 277.133 510.592 276.35 cv
511.258 275.695 512.205 275.297 513.408 275.157 cv
513.654 275.181 513.899 275.216 514.133 275.262 cv
514.939 275.437 515.595 275.799 516.119 276.35 cv
516.845 277.109 517.302 278.208 517.5 279.668 cv
517.5 287.395 li
519.09 287.875 521.275 288.178 524.046 288.318 cv
529.084 288.284 532.988 288.798 535.759 289.885 cv
535.979 278.722 li
cp
0 0 0 0 cmyk
ef
551.516 240.381 mo
550.779 240.721 550.358 241.222 550.254 241.877 cv
547.144 240.533 543.041 239.914 537.955 240.019 cv
524.244 240.3 517.23 240.966 516.915 242.006 cv
516.365 243.233 521.977 244.017 533.747 244.355 cv
539.722 244.251 544.701 243.947 548.675 243.421 cv
548.687 243.409 548.71 243.409 548.732 243.409 cv
549.248 243.339 549.751 243.268 550.229 243.187 cv
550.229 245.981 li
559.534 245.981 li
559.534 243.187 li
560.013 243.268 560.516 243.339 561.03 243.409 cv
561.054 243.409 561.077 243.409 561.089 243.421 cv
565.063 243.947 570.043 244.251 576.017 244.355 cv
587.787 244.017 593.398 243.233 592.849 242.006 cv
592.533 240.966 585.519 240.3 571.808 240.019 cv
566.723 239.914 562.621 240.533 559.511 241.877 cv
559.406 241.222 558.985 240.721 558.249 240.381 cv
558.249 239.354 li
559.65 239.446 li
559.395 233.602 557.887 230.598 555.139 230.434 cv
555.058 230.422 554.986 230.422 554.905 230.422 cv
554.812 230.422 554.718 230.422 554.625 230.434 cv
551.878 230.586 550.37 233.59 550.113 239.446 cv
551.516 239.354 li
551.516 240.381 li
cp
.619532 .538659 .52932 .256565 cmyk
ef
535.314 255.344 mo
535.255 255.59 535.209 255.847 535.174 256.115 cv
535.092 256.805 535.092 257.401 535.186 257.904 cv
535.244 258.208 535.314 258.429 535.419 258.57 cv
535.431 258.594 535.454 258.617 535.478 258.628 cv
535.536 258.675 535.595 258.698 535.665 258.71 cv
535.712 258.723 535.759 258.71 535.816 258.698 cv
535.816 258.628 li
535.921 257.459 536.039 256.361 536.167 255.344 cv
536.226 254.795 536.297 254.256 536.378 253.753 cv
536.319 253.731 li
536.097 253.696 535.875 253.918 535.653 254.385 cv
535.524 254.666 535.408 254.981 535.314 255.344 cv
cp
ef
543.064 254.396 mo
542.912 254.677 542.783 254.993 542.702 255.344 cv
542.644 255.59 542.607 255.847 542.585 256.127 cv
542.526 256.816 542.597 257.424 542.783 257.938 cv
542.9 258.278 543.052 258.5 543.228 258.628 cv
543.321 258.686 543.414 258.723 543.52 258.733 cv
543.649 258.745 543.776 258.71 543.906 258.628 cv
544.07 258.523 544.232 258.325 544.385 258.056 cv
544.642 257.589 544.795 257.003 544.853 256.314 cv
544.888 255.976 544.888 255.647 544.853 255.344 cv
544.817 255.051 544.747 254.771 544.665 254.513 cv
544.479 254.012 544.232 253.742 543.917 253.719 cv
543.602 253.696 543.321 253.918 543.064 254.396 cv
cp
ef
553.316 254.443 mo
553.152 254.713 553.034 255.017 552.965 255.344 cv
552.906 255.613 552.872 255.905 552.872 256.22 cv
552.872 256.91 553.022 257.507 553.316 257.997 cv
553.503 258.302 553.713 258.512 553.947 258.628 cv
554.087 258.698 554.239 258.733 554.392 258.733 cv
554.543 258.733 554.695 258.698 554.836 258.628 cv
554.847 258.617 554.87 258.617 554.882 258.605 cv
554.66 258.488 554.473 258.289 554.298 257.997 cv
554.005 257.507 553.854 256.91 553.854 256.22 cv
553.854 255.905 553.888 255.613 553.947 255.344 cv
554.018 255.017 554.134 254.713 554.298 254.443 cv
554.473 254.151 554.66 253.953 554.882 253.835 cv
554.729 253.753 554.566 253.707 554.392 253.707 cv
553.97 253.707 553.607 253.953 553.316 254.443 cv
cp
ef
554.298 254.443 mo
554.134 254.713 554.018 255.017 553.947 255.344 cv
553.888 255.613 553.854 255.905 553.854 256.22 cv
553.854 256.91 554.005 257.507 554.298 257.997 cv
554.473 258.289 554.66 258.488 554.882 258.605 cv
555.104 258.488 555.291 258.289 555.467 257.997 cv
555.759 257.507 555.911 256.91 555.911 256.22 cv
555.911 255.905 555.887 255.613 555.829 255.344 cv
555.747 255.017 555.631 254.713 555.467 254.443 cv
555.291 254.151 555.104 253.953 554.882 253.835 cv
554.66 253.953 554.473 254.151 554.298 254.443 cv
cp
ef
555.467 254.443 mo
555.631 254.713 555.747 255.017 555.829 255.344 cv
555.887 255.613 555.911 255.905 555.911 256.22 cv
555.911 256.91 555.759 257.507 555.467 257.997 cv
555.291 258.289 555.104 258.488 554.882 258.605 cv
554.894 258.617 554.916 258.617 554.929 258.628 cv
555.069 258.698 555.221 258.733 555.373 258.733 cv
555.524 258.733 555.677 258.698 555.829 258.628 cv
556.051 258.512 556.262 258.302 556.448 257.997 cv
556.74 257.507 556.893 256.91 556.893 256.22 cv
556.893 255.905 556.869 255.613 556.811 255.344 cv
556.729 255.017 556.611 254.713 556.448 254.443 cv
556.155 253.953 555.794 253.707 555.373 253.707 cv
555.198 253.707 555.034 253.753 554.882 253.835 cv
555.104 253.953 555.291 254.151 555.467 254.443 cv
cp
ef
564.923 255.344 mo
564.889 255.647 564.877 255.976 564.911 256.314 cv
564.97 257.003 565.121 257.589 565.379 258.056 cv
565.531 258.325 565.694 258.523 565.858 258.628 cv
565.986 258.71 566.114 258.745 566.244 258.733 cv
566.349 258.723 566.442 258.686 566.536 258.628 cv
566.712 258.5 566.863 258.278 566.98 257.938 cv
567.167 257.424 567.237 256.816 567.179 256.127 cv
567.155 255.847 567.121 255.59 567.062 255.344 cv
566.98 254.993 566.852 254.677 566.699 254.396 cv
566.442 253.918 566.162 253.696 565.846 253.719 cv
565.531 253.742 565.285 254.012 565.099 254.513 cv
565.017 254.771 564.958 255.051 564.923 255.344 cv
cp
ef
596.355 275.157 mo
595.959 275.192 595.584 275.262 595.245 275.367 cv
594.614 275.566 594.076 275.894 593.643 276.35 cv
593.375 276.629 593.152 276.957 592.954 277.331 cv
592.614 277.974 592.393 278.746 592.264 279.668 cv
592.264 287.395 li
590.675 287.875 588.488 288.178 585.718 288.318 cv
580.68 288.284 576.775 288.798 574.006 289.885 cv
574.263 302.38 li
576.297 302.031 li
575.501 301.598 575.14 300.487 575.198 298.723 cv
575.198 295.671 li
575.42 293.907 576.297 293.064 577.828 293.17 cv
581.756 293.17 li
602.375 293.17 li
601.405 292.877 600.762 291.569 600.447 289.254 cv
600.447 279.774 li
600.411 278.266 599.978 277.133 599.172 276.35 cv
598.506 275.695 597.559 275.297 596.355 275.157 cv
cp
573.608 255.344 mo
573.737 256.361 573.842 257.459 573.947 258.628 cv
573.947 258.698 li
574.006 258.71 574.052 258.723 574.1 258.71 cv
574.169 258.698 574.227 258.675 574.286 258.628 cv
574.31 258.617 574.333 258.594 574.345 258.57 cv
574.45 258.429 574.519 258.208 574.578 257.904 cv
574.672 257.401 574.672 256.805 574.59 256.115 cv
574.556 255.847 574.508 255.59 574.45 255.344 cv
574.355 254.981 574.239 254.666 574.111 254.385 cv
573.889 253.918 573.667 253.696 573.444 253.731 cv
573.387 253.753 li
573.468 254.256 573.538 254.795 573.608 255.344 cv
573.608 255.344 li
cp
ef
509.317 279.774 mo
509.317 289.254 li
509.002 291.569 508.358 292.877 507.389 293.17 cv
528.008 293.17 li
531.936 293.17 li
533.467 293.064 534.344 293.907 534.565 295.671 cv
534.565 298.723 li
534.625 300.487 534.263 301.598 533.467 302.031 cv
535.501 302.38 li
535.759 289.885 li
532.988 288.798 529.084 288.284 524.046 288.318 cv
521.275 288.178 519.09 287.875 517.5 287.395 cv
517.5 279.668 li
517.302 278.208 516.845 277.109 516.119 276.35 cv
515.595 275.799 514.939 275.437 514.133 275.262 cv
513.899 275.216 513.654 275.181 513.408 275.157 cv
512.205 275.297 511.258 275.695 510.592 276.35 cv
509.785 277.133 509.352 278.266 509.317 279.774 cv
cp
ef
552.685 283.34 mo
552.685 288.892 li
552.685 289.359 552.918 289.593 553.385 289.593 cv
556.378 289.593 li
556.846 289.593 557.08 289.359 557.08 288.892 cv
557.08 283.34 li
557.08 282.872 556.846 282.639 556.378 282.639 cv
553.385 282.639 li
552.918 282.639 552.685 282.872 552.685 283.34 cv
cp
558.015 283.632 mo
558.015 289.395 li
558.051 289.792 558.167 290.143 558.365 290.458 cv
559.814 292.071 li
560.295 292.574 560.926 292.866 561.696 292.924 cv
566.863 292.924 li
566.841 292.386 566.805 291.849 566.77 291.323 cv
564.455 287.337 561.884 284.602 559.056 283.095 cv
558.471 282.919 558.131 283.06 558.026 283.527 cv
558.026 283.562 558.026 283.597 558.015 283.632 cv
558.015 283.632 li
cp
557.255 290.47 mo
558.892 292.339 li
559.172 293.006 558.855 293.298 557.956 293.216 cv
551.808 293.216 li
550.907 293.298 550.592 293.006 550.872 292.339 cv
552.51 290.47 li
557.255 290.47 li
557.255 290.47 li
cp
546.781 308.6 mo
548.534 310.751 li
548.534 295.041 li
548.534 294.573 548.301 294.339 547.833 294.339 cv
546.781 294.339 li
544.806 294.339 li
542.83 294.339 li
542.771 295.566 542.748 296.793 542.748 298.021 cv
542.748 303.631 li
544.806 306.168 li
546.781 308.6 li
546.781 308.6 li
cp
564.958 306.168 mo
567.016 303.631 li
567.016 298.021 li
567.016 296.793 566.992 295.566 566.934 294.339 cv
564.958 294.339 li
562.983 294.339 li
561.931 294.339 li
561.464 294.339 561.229 294.573 561.229 295.041 cv
561.229 310.751 li
562.983 308.6 li
564.958 306.168 li
564.958 306.168 li
cp
558.062 327.023 mo
560.938 327.023 li
560.938 319.892 li
558.295 319.892 li
548.827 319.892 li
548.827 327.023 li
558.062 327.023 li
558.062 327.023 li
cp
558.342 318.372 mo
560.938 318.372 li
560.938 312.516 li
560.938 311.113 li
560.621 310.366 560.423 309.231 560.353 307.723 cv
560.353 294.737 li
560.353 294.42 560.201 294.269 559.885 294.269 cv
549.879 294.269 li
549.563 294.269 549.411 294.42 549.411 294.737 cv
549.411 307.723 li
549.341 309.231 549.143 310.366 548.827 311.113 cv
548.827 318.372 li
558.342 318.372 li
558.342 318.372 li
cp
557.805 334.854 mo
560.938 334.854 li
560.938 328.542 li
558.003 328.542 li
548.827 328.542 li
548.827 334.854 li
557.805 334.854 li
557.805 334.854 li
cp
550.709 283.095 mo
547.88 284.602 545.308 287.337 542.993 291.323 cv
542.959 291.849 542.924 292.386 542.9 292.924 cv
548.066 292.924 li
548.839 292.866 549.471 292.574 549.949 292.071 cv
551.398 290.458 li
551.597 290.143 551.714 289.792 551.749 289.395 cv
551.749 283.632 li
551.737 283.597 551.737 283.562 551.737 283.527 cv
551.632 283.06 551.293 282.919 550.709 283.095 cv
550.709 283.095 li
cp
.0704051 .0445258 .0503853 0 cmyk
ef
557.149 354.515 mo
559.873 354.515 li
560.002 345.457 li
559.288 344.954 558.634 344.568 558.038 344.288 cv
557.5 344.052 li
556.647 343.738 555.782 343.622 554.894 343.69 cv
553.806 343.597 552.742 343.796 551.726 344.288 cv
551.129 344.568 550.476 344.954 549.762 345.457 cv
549.891 354.515 li
557.149 354.515 li
cp
561.159 346.309 mo
561.042 354.515 li
566.652 354.515 li
566.793 351.487 li
564.677 349.302 562.795 347.572 561.159 346.309 cv
561.159 346.309 li
cp
561.03 355.684 mo
560.901 364.673 li
566.185 364.673 li
566.595 355.684 li
561.03 355.684 li
561.03 355.684 li
cp
549.902 355.684 mo
550.031 364.673 li
556.822 364.673 li
559.732 364.673 li
559.862 355.684 li
557.114 355.684 li
549.902 355.684 li
549.902 355.684 li
cp
543.169 355.684 mo
543.578 364.673 li
548.862 364.673 li
548.732 355.684 li
543.169 355.684 li
543.169 355.684 li
cp
543.637 365.842 mo
543.8 369.501 li
543.813 369.607 543.836 369.723 543.871 369.839 cv
544.116 370.997 544.841 372.049 546.046 373.019 cv
546.068 373.042 li
549.026 375.743 li
548.873 365.842 li
543.637 365.842 li
543.637 365.842 li
cp
556.39 377.941 mo
557.337 377.753 558.354 377.415 559.44 376.936 cv
559.558 376.83 li
559.721 365.842 li
556.775 365.842 li
550.042 365.842 li
550.206 376.83 li
550.322 376.936 li
551.983 377.672 553.491 378.069 554.858 378.117 cv
554.87 378.117 li
555.35 378.105 555.863 378.045 556.39 377.941 cv
556.39 377.941 li
cp
560.89 365.842 mo
560.739 375.743 li
563.696 373.042 li
563.72 373.019 li
564.923 372.049 565.647 370.997 565.905 369.839 cv
565.928 369.735 565.952 369.618 565.964 369.501 cv
566.127 365.842 li
560.89 365.842 li
560.89 365.842 li
cp
548.604 346.309 mo
546.969 347.572 545.086 349.302 542.97 351.487 cv
543.111 354.515 li
548.722 354.515 li
548.604 346.309 li
548.604 346.309 li
cp
ef
571.867 145.581 mo
571.293 148.352 570.16 150.877 568.453 153.18 cv
571.095 155.19 li
571.177 155.085 571.282 154.992 571.398 154.91 cv
572.193 154.36 li
572.486 154.161 572.813 154.091 573.164 154.161 cv
573.257 154.186 li
586.36 145.067 li
582.234 145.243 577.395 145.418 571.867 145.581 cv
cp
576.262 136.64 mo
574.905 136.97 573.35 137.381 571.971 137.691 cv
572.02 137.977 li
572.115 138.555 572.178 139.142 572.218 139.737 cv
572.252 139.76 572.275 139.783 572.31 139.794 cv
572.334 139.819 li
572.977 140.251 573.305 140.766 573.305 141.374 cv
573.305 141.431 573.305 141.501 573.293 141.561 cv
580.423 141.584 586.326 141.677 591.013 141.83 cv
634.51 111.542 li
634.521 111.507 634.521 111.472 634.521 111.437 cv
634.556 111.226 634.638 111.04 634.755 110.875 cv
565.191 110.327 li
561.054 110.292 li
564.759 123.418 li
565.472 126.059 li
566.18 125.944 566.725 126.086 567.133 126.493 cv
567.565 126.925 567.693 127.521 567.541 128.281 cv
567.554 128.293 li
567.541 128.316 567.541 128.339 567.541 128.363 cv
568.523 129.5 569.352 130.702 570.024 131.968 cv
570.416 132.747 li
573.693 131.37 577.115 130.034 580.493 128.842 cv
583.287 127.918 585.87 127.218 588.244 126.727 cv
591.165 126.107 593.771 125.815 596.052 125.849 cv
596.099 125.861 596.145 125.861 596.191 125.874 cv
596.834 125.896 597.268 126.166 597.466 126.681 cv
597.501 126.762 597.524 126.843 597.548 126.925 cv
597.699 127.463 597.513 127.93 597.01 128.316 cv
596.904 128.41 li
594.672 130.046 591.785 131.566 588.244 132.98 cv
586.478 133.669 584.56 134.349 582.469 134.991 cv
580.399 135.586 578.331 136.137 576.262 136.64 cv
576.262 136.64 li
cp
565.285 126.095 mo
565.297 126.084 565.31 126.084 565.321 126.084 cv
565.309 126.082 565.291 126.082 565.271 126.083 cv
565.276 126.087 565.28 126.091 565.285 126.095 cv
565.285 126.095 li
cp
565.321 126.084 mo
565.341 126.081 565.351 126.082 565.344 126.084 cv
565.332 126.072 565.332 126.072 565.321 126.084 cv
565.321 126.084 li
cp
518.096 145.067 mo
531.2 154.186 li
531.293 154.161 li
531.645 154.091 531.971 154.161 532.264 154.36 cv
533.059 154.91 li
533.175 154.992 533.28 155.085 533.361 155.19 cv
535.969 153.215 li
534.239 150.912 533.094 148.364 532.521 145.581 cv
527.015 145.418 522.198 145.243 518.096 145.067 cv
518.096 145.067 li
cp
523.438 110.455 mo
526.173 112.185 529.143 114.534 532.334 117.503 cv
532.988 118.146 li
535.196 120.298 537.336 122.507 539.404 124.763 cv
539.698 123.418 li
543.403 110.292 li
539.265 110.327 li
523.438 110.455 li
523.438 110.455 li
cp
517.732 110.502 mo
469.703 110.875 li
469.819 111.04 469.901 111.226 469.936 111.437 cv
469.936 111.472 469.936 111.507 469.947 111.542 cv
513.443 141.83 li
518.131 141.677 524.046 141.584 531.211 141.561 cv
531.2 141.501 531.2 141.431 531.2 141.374 cv
531.2 140.766 531.526 140.251 532.17 139.83 cv
532.274 138.241 532.544 136.721 532.988 135.283 cv
533.679 133.015 534.788 130.922 536.319 129.006 cv
535.196 128.152 534.086 127.288 532.988 126.411 cv
531.305 125.067 529.646 123.688 527.997 122.285 cv
523.191 117.971 519.767 114.043 517.732 110.502 cv
517.732 110.502 li
cp
545.099 106.832 mo
546.163 105.79 547.458 104.891 549.201 104.271 cv
550.662 82.9028 li
550.803 79.2915 551.329 77.3164 552.229 76.9771 cv
553.129 77.3164 553.654 79.2915 553.795 82.9028 cv
555.256 104.271 li
556.775 104.763 558.051 105.604 559.066 106.784 cv
565.191 106.492 li
640.471 102.926 li
758.065 102.926 li
759.56 102.986 760.893 103.055 762.051 103.138 cv
766.435 103.441 768.469 103.956 768.141 104.681 cv
768.433 105.324 766.411 105.873 762.051 106.329 cv
761.688 106.364 li
640.471 110.923 li
638.144 110.911 li
638.144 110.969 638.133 111.04 638.121 111.121 cv
638.062 111.46 637.887 111.741 637.595 111.951 cv
636.531 112.7 li
636.239 112.898 635.924 112.98 635.573 112.922 cv
635.444 112.887 li
593.726 141.934 li
595.56 142.017 597.162 142.098 598.518 142.203 cv
602.177 142.472 604.106 142.823 604.327 143.268 cv
604.339 143.279 604.351 143.29 604.351 143.303 cv
604.387 143.676 602.434 144.027 598.518 144.366 cv
596.191 144.564 593.152 144.751 589.424 144.927 cv
574.192 155.529 li
574.192 155.576 574.192 155.623 574.182 155.67 cv
574.111 156.009 573.924 156.289 573.631 156.487 cv
573.199 156.792 li
592.194 171.239 li
595.198 173.694 597.221 176.418 598.261 179.421 cv
598.343 179.667 598.413 179.924 598.495 180.169 cv
598.565 180.392 598.623 180.602 598.67 180.825 cv
598.974 182.052 599.09 183.303 599.032 184.577 cv
598.998 185.384 598.974 186.202 598.974 187.019 cv
598.974 192.046 li
598.974 193.297 598.472 194.058 597.454 194.303 cv
597.454 200.054 li
597.454 200.941 597.139 201.702 596.519 202.321 cv
595.889 202.952 595.128 203.267 594.239 203.267 cv
593.351 203.267 592.592 202.952 591.972 202.321 cv
591.341 201.702 591.024 200.941 591.024 200.054 cv
591.024 194.36 li
589.775 194.209 589.155 193.438 589.155 192.046 cv
589.155 185.15 li
589.411 177.4 587.074 171.472 582.152 167.382 cv
567.272 156.09 li
567.121 156.265 li
566.688 156.698 566.092 156.826 565.332 156.675 cv
565.321 156.687 li
565.285 156.675 565.239 156.675 565.203 156.663 cv
561.942 159.48 558.167 161.046 553.877 161.362 cv
553.829 161.432 li
553.806 161.456 li
553.374 162.099 552.86 162.426 552.252 162.426 cv
551.645 162.426 551.129 162.099 550.697 161.456 cv
550.697 161.444 550.697 161.444 550.685 161.444 cv
550.639 161.374 li
550.265 161.338 li
549.81 164.881 549.259 168.421 548.604 171.964 cv
547.261 178.381 545.53 183.373 543.414 186.927 cv
543.38 186.962 543.355 187.008 543.332 187.043 cv
542.982 187.592 542.538 187.826 541.988 187.745 cv
541.906 187.733 541.813 187.71 541.731 187.686 cv
541.193 187.557 540.878 187.171 540.796 186.529 cv
540.773 186.388 li
540.317 182.274 540.819 177.013 542.28 170.597 cv
543.157 167.102 544.139 163.642 545.239 160.24 cv
543.064 159.457 541.054 158.264 539.218 156.675 cv
539.195 156.687 539.172 156.687 539.16 156.687 cv
539.148 156.675 li
538.389 156.826 537.792 156.698 537.36 156.265 cv
537.302 156.207 537.243 156.136 537.208 156.079 cv
522.303 167.382 li
517.384 171.472 515.046 177.4 515.302 185.15 cv
515.302 192.046 li
515.302 193.438 514.684 194.209 513.433 194.36 cv
513.433 200.054 li
513.433 200.941 513.116 201.702 512.485 202.321 cv
511.865 202.952 511.105 203.267 510.218 203.267 cv
509.329 203.267 508.568 202.952 507.938 202.321 cv
507.317 201.702 507.003 200.941 507.003 200.054 cv
507.003 194.303 li
505.985 194.058 505.483 193.297 505.483 192.046 cv
505.483 187.019 li
505.483 186.202 505.46 185.384 505.424 184.577 cv
505.365 183.303 505.483 182.052 505.786 180.825 cv
505.834 180.602 505.892 180.392 505.962 180.169 cv
506.044 179.924 506.114 179.667 506.196 179.421 cv
507.236 176.418 509.259 173.694 512.264 171.239 cv
531.259 156.792 li
530.825 156.487 li
530.533 156.289 530.346 156.008 530.276 155.67 cv
530.264 155.623 530.264 155.576 530.264 155.529 cv
515.032 144.927 li
505.027 144.447 500.047 143.898 500.105 143.303 cv
500.105 143.29 500.118 143.279 500.129 143.268 cv
500.433 142.659 503.964 142.214 510.731 141.934 cv
469.013 112.887 li
468.884 112.922 li
468.533 112.98 468.218 112.898 467.926 112.7 cv
466.862 111.951 li
466.568 111.741 466.395 111.46 466.336 111.121 cv
466.324 111.04 466.313 110.969 466.313 110.911 cv
463.986 110.923 li
342.769 106.364 li
342.406 106.329 li
338.046 105.873 336.023 105.324 336.315 104.681 cv
335.989 103.956 338.022 103.441 342.406 103.138 cv
343.564 103.055 344.896 102.986 346.392 102.926 cv
463.986 102.926 li
539.265 106.492 li
545.099 106.832 li
545.099 106.832 li
cp
0 0 0 0 cmyk
ef
543.403 110.292 mo
539.698 123.418 li
542.573 119.818 545.602 117.516 548.791 116.511 cv
548.791 109.952 li
548.651 108.854 548.302 108.352 547.739 108.433 cv
544.244 108.433 li
543.93 109.005 543.649 109.625 543.403 110.292 cv
cp
.0704051 .0445258 .0503853 0 cmyk
ef
550.065 108.76 mo
550.065 116.182 li
550.065 116.499 550.218 116.65 550.534 116.65 cv
553.923 116.65 li
554.239 116.65 554.392 116.499 554.392 116.182 cv
554.392 108.76 li
554.392 108.445 554.239 108.292 553.923 108.292 cv
550.534 108.292 li
550.218 108.292 550.065 108.445 550.065 108.76 cv
cp
ef
555.665 109.952 mo
555.665 116.511 li
558.855 117.516 561.884 119.818 564.759 123.418 cv
561.054 110.292 li
560.809 109.625 560.528 109.005 560.213 108.433 cv
556.718 108.433 li
556.155 108.352 555.805 108.854 555.665 109.952 cv
cp
ef
547.3 105.146 mo
546.587 105.589 545.95 106.136 545.39 106.784 cv
545.355 106.832 li
559.102 106.832 li
559.066 106.785 li
558.051 105.604 556.775 104.763 555.256 104.271 cv
554.485 104.026 553.654 103.862 552.767 103.792 cv
552.24 103.758 li
552.229 103.758 li
551.703 103.792 li
550.803 103.862 549.973 104.026 549.201 104.271 cv
548.499 104.521 547.87 104.815 547.3 105.146 cv
cp
ef
552.252 120.321 mo
551.645 120.321 551.129 120.648 550.697 121.291 cv
550.697 121.301 550.697 121.302 550.688 121.303 cv
551.191 121.268 551.693 121.257 552.193 121.257 cv
552.742 121.257 553.292 121.279 553.829 121.314 cv
553.806 121.291 li
553.374 120.648 552.86 120.321 552.252 120.321 cv
cp
.619532 .538659 .52932 .256565 cmyk
ef
531.125 141.374 mo
531.128 141.981 531.458 142.496 532.104 142.923 cv
532.113 142.923 532.115 142.923 532.115 142.932 cv
532.077 142.43 532.063 141.928 532.061 141.427 cv
532.058 140.879 532.077 140.329 532.109 139.792 cv
532.086 139.815 li
531.445 140.25 531.121 140.766 531.125 141.374 cv
cp
ef
537.353 156.402 mo
537.787 156.827 538.385 156.954 539.143 156.797 cv
539.149 156.789 539.15 156.789 539.157 156.794 cv
538.772 156.468 538.407 156.125 538.049 155.774 cv
537.657 155.39 537.28 154.99 536.921 154.589 cv
536.921 154.622 li
536.78 155.383 536.918 155.976 537.353 156.402 cv
cp
ef
552.416 162.551 mo
553.023 162.542 553.534 162.206 553.955 161.557 cv
553.955 161.546 553.955 161.545 553.964 161.544 cv
553.462 161.588 552.961 161.606 552.46 161.614 cv
551.911 161.623 551.361 161.609 550.824 161.583 cv
550.848 161.605 li
551.289 162.241 551.808 162.561 552.416 162.551 cv
cp
ef
567.251 156.307 mo
567.675 155.873 567.802 155.275 567.643 154.518 cv
567.636 154.51 567.635 154.509 567.642 154.502 cv
567.315 154.887 566.972 155.253 566.622 155.611 cv
566.238 156.004 565.839 156.381 565.438 156.741 cv
565.472 156.741 li
566.232 156.881 566.825 156.743 567.251 156.307 cv
cp
ef
573.384 141.293 mo
573.375 140.686 573.041 140.175 572.393 139.752 cv
572.382 139.752 572.381 139.753 572.38 139.744 cv
572.423 140.246 572.44 140.748 572.447 141.248 cv
572.455 141.797 572.44 142.347 572.413 142.884 cv
572.435 142.86 li
573.072 142.42 573.393 141.902 573.384 141.293 cv
cp
ef
567.143 126.429 mo
566.709 126.004 566.111 125.877 565.353 126.035 cv
565.347 126.042 565.346 126.044 565.339 126.038 cv
565.723 126.364 566.089 126.707 566.447 127.057 cv
566.84 127.441 567.218 127.84 567.576 128.241 cv
567.576 128.208 li
567.717 127.447 567.579 126.854 567.143 126.429 cv
cp
ef
549.785 147.791 mo
549.049 149.579 548.336 151.379 547.67 153.191 cv
547.038 154.885 546.431 156.604 545.857 158.323 cv
545.647 158.966 545.438 159.596 545.239 160.24 cv
544.139 163.642 543.157 167.102 542.28 170.597 cv
540.819 177.013 540.317 182.274 540.773 186.388 cv
540.796 186.529 li
540.878 187.171 541.193 187.557 541.731 187.686 cv
541.813 187.71 541.906 187.733 541.988 187.745 cv
542.538 187.826 542.982 187.592 543.332 187.043 cv
543.355 187.008 543.38 186.962 543.414 186.927 cv
545.53 183.373 547.261 178.381 548.604 171.964 cv
549.259 168.421 549.81 164.881 550.265 161.338 cv
550.498 159.339 li
550.697 157.54 550.885 155.739 551.036 153.939 cv
551.259 151.321 551.423 148.702 551.527 146.096 cv
551.749 146.12 551.972 146.131 552.193 146.131 cv
553.515 146.131 554.648 145.663 555.595 144.729 cv
556.53 143.781 556.998 142.647 556.998 141.327 cv
556.998 140.929 556.95 140.543 556.869 140.181 cv
558.962 139.9 li
560.867 139.643 562.761 139.363 564.665 139.047 cv
566.454 138.743 568.231 138.404 570.008 138.042 cv
571.96 137.633 li
571.971 137.691 li
573.35 137.381 574.905 136.97 576.262 136.64 cv
578.331 136.137 580.399 135.586 582.469 134.991 cv
584.56 134.349 586.478 133.669 588.244 132.98 cv
591.785 131.566 594.672 130.046 596.904 128.41 cv
597.01 128.316 li
597.513 127.93 597.699 127.463 597.548 126.925 cv
597.524 126.843 597.501 126.762 597.466 126.681 cv
597.268 126.166 596.834 125.896 596.191 125.874 cv
596.145 125.861 596.099 125.861 596.052 125.849 cv
593.771 125.815 591.165 126.107 588.244 126.727 cv
585.87 127.218 583.287 127.918 580.493 128.842 cv
577.115 130.034 573.693 131.37 570.416 132.747 cv
570.382 132.761 570.348 132.775 570.313 132.79 cv
569.729 133.032 569.144 133.276 568.57 133.529 cv
566.898 134.255 565.25 135.002 563.614 135.774 cv
556.535 139.231 li
556.307 138.759 555.994 138.325 555.595 137.925 cv
554.929 137.259 554.157 136.837 553.292 136.64 cv
552.94 136.558 552.578 136.522 552.193 136.522 cv
551.808 136.522 551.445 136.558 551.095 136.64 cv
550.599 136.747 550.139 136.934 549.711 137.198 cv
548.492 135.512 li
545.538 131.489 535.838 121.194 532.338 117.644 cv
527.617 113.059 523.385 109.894 519.633 108.145 cv
519.501 108.09 li
518.91 107.826 518.416 107.895 518.026 108.288 cv
517.964 108.345 517.896 108.413 517.843 108.477 cv
517.488 108.904 517.456 109.405 517.743 109.989 cv
517.762 110.028 517.788 110.073 517.8 110.12 cv
519.735 113.775 523.099 117.849 527.882 122.334 cv
535.418 129.072 540.672 132.323 548.919 137.805 cv
548.88 137.837 548.84 137.877 548.791 137.925 cv
547.846 138.872 547.377 140.005 547.377 141.327 cv
547.377 142.647 547.846 143.781 548.791 144.729 cv
549.329 145.266 549.926 145.651 550.592 145.874 cv
549.785 147.791 li
cp
ef
507.003 194.303 mo
507.003 200.054 li
507.003 200.941 507.317 201.702 507.938 202.321 cv
508.568 202.952 509.329 203.267 510.218 203.267 cv
511.105 203.267 511.865 202.952 512.485 202.321 cv
513.116 201.702 513.433 200.941 513.433 200.054 cv
513.433 194.36 li
513.279 194.373 513.128 194.385 512.964 194.385 cv
507.82 194.385 li
507.518 194.385 507.249 194.36 507.003 194.303 cv
cp
ef
591.024 194.36 mo
591.024 200.054 li
591.024 200.941 591.341 201.702 591.972 202.321 cv
592.592 202.952 593.351 203.267 594.239 203.267 cv
595.128 203.267 595.889 202.952 596.519 202.321 cv
597.139 201.702 597.454 200.941 597.454 200.054 cv
597.454 194.303 li
597.208 194.36 596.94 194.385 596.636 194.385 cv
591.493 194.385 li
591.329 194.385 591.177 194.373 591.024 194.36 cv
cp
ef
469.013 112.887 mo
510.731 141.934 li
512.848 143.407 li
515.032 144.927 li
530.264 155.529 li
530.264 155.576 530.264 155.623 530.276 155.67 cv
530.346 156.008 530.533 156.289 530.825 156.487 cv
531.259 156.792 li
531.621 157.037 li
531.912 157.236 532.229 157.305 532.578 157.236 cv
532.917 157.166 533.198 156.99 533.396 156.698 cv
533.597 156.406 533.665 156.079 533.597 155.728 cv
533.561 155.529 533.479 155.342 533.361 155.19 cv
533.28 155.085 533.175 154.992 533.059 154.91 cv
532.264 154.36 li
531.971 154.161 531.645 154.091 531.293 154.161 cv
531.2 154.186 li
518.096 145.067 li
515.757 143.442 li
513.443 141.83 li
469.947 111.542 li
469.936 111.507 469.936 111.472 469.936 111.437 cv
469.901 111.226 469.819 111.04 469.703 110.875 cv
469.621 110.771 469.515 110.689 469.409 110.607 cv
468.346 109.859 li
468.054 109.648 467.727 109.579 467.389 109.637 cv
467.037 109.695 466.757 109.871 466.558 110.163 cv
466.382 110.385 466.301 110.643 466.313 110.911 cv
466.313 110.969 466.324 111.04 466.336 111.121 cv
466.395 111.46 466.568 111.741 466.862 111.951 cv
467.926 112.7 li
468.218 112.898 468.533 112.98 468.884 112.922 cv
469.013 112.887 li
cp
ef
586.36 145.067 mo
573.257 154.186 li
573.164 154.161 li
572.813 154.091 572.486 154.161 572.193 154.36 cv
571.398 154.91 li
571.282 154.992 571.177 155.085 571.095 155.19 cv
570.978 155.342 570.896 155.529 570.86 155.728 cv
570.791 156.079 570.86 156.406 571.06 156.698 cv
571.259 156.99 571.539 157.166 571.878 157.236 cv
572.229 157.305 572.544 157.236 572.837 157.037 cv
573.199 156.792 li
573.631 156.487 li
573.924 156.289 574.111 156.009 574.182 155.67 cv
574.192 155.623 574.192 155.576 574.192 155.529 cv
589.424 144.927 li
591.609 143.407 li
593.726 141.934 li
635.444 112.887 li
635.573 112.922 li
635.924 112.98 636.239 112.898 636.531 112.7 cv
637.595 111.951 li
637.887 111.741 638.062 111.46 638.121 111.121 cv
638.133 111.04 638.144 110.969 638.144 110.911 cv
638.157 110.643 638.075 110.385 637.899 110.163 cv
637.7 109.871 637.42 109.695 637.069 109.637 cv
636.73 109.579 636.403 109.648 636.111 109.859 cv
635.047 110.607 li
634.942 110.689 634.836 110.771 634.755 110.875 cv
634.638 111.04 634.556 111.226 634.521 111.437 cv
634.521 111.472 634.521 111.507 634.51 111.542 cv
591.013 141.83 li
588.686 143.442 li
586.36 145.067 li
cp
ef
.5 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
536.962 154.441 mo
536.95 154.441 536.95 154.441 536.95 154.454 cv
536.939 154.465 536.939 154.465 536.95 154.477 cv
536.822 155.143 536.903 155.669 537.208 156.079 cv
535.969 153.214 mo
536.284 153.624 536.611 154.033 536.962 154.441 cv
518.096 145.067 mo
531.2 154.185 li
531.234 154.172 531.259 154.172 531.293 154.161 cv
531.645 154.09 531.971 154.161 532.264 154.36 cv
533.059 154.91 li
533.175 154.992 533.28 155.084 533.361 155.19 cv
536.319 129.006 mo
534.788 130.922 533.679 133.015 532.988 135.283 cv
532.544 136.721 532.274 138.241 532.17 139.83 cv
542.351 133.389 mo
541.521 134.394 540.867 135.482 540.411 136.639 cv
539.838 138.077 539.545 139.643 539.545 141.327 cv
539.545 144.822 540.785 147.814 543.251 150.28 cv
544.572 151.601 546.046 152.572 547.67 153.191 cv
537.933 130.209 mo
536.378 132.162 535.29 134.301 534.694 136.639 cv
534.483 137.458 534.332 138.298 534.239 139.175 cv
534.157 139.888 534.121 140.601 534.121 141.338 cv
534.121 142.098 534.168 142.834 534.25 143.559 cv
534.332 144.272 534.449 144.961 534.602 145.639 cv
535.186 148.165 536.319 150.467 537.991 152.537 cv
538.423 153.074 538.902 153.6 539.418 154.115 cv
539.955 154.652 540.516 155.155 541.089 155.61 cv
542.573 156.792 544.162 157.691 545.857 158.323 cv
532.17 139.83 mo
532.134 140.321 532.111 140.824 532.111 141.338 cv
532.111 141.408 532.111 141.478 532.111 141.548 cv
532.123 142.016 532.134 142.472 532.17 142.927 cv
532.17 142.927 mo
532.182 143.161 532.205 143.395 532.229 143.629 cv
531.211 141.56 mo
531.27 142.085 531.585 142.542 532.17 142.927 cv
532.17 139.83 mo
531.526 140.25 531.2 140.765 531.2 141.374 cv
531.2 141.431 531.2 141.501 531.211 141.56 cv
512.848 143.407 mo
510.731 141.934 li
515.757 143.442 mo
518.096 145.067 li
515.032 144.926 mo
512.848 143.407 li
513.443 141.83 mo
515.757 143.442 li
523.438 110.455 mo
539.265 110.327 li
536.319 129.006 mo
536.857 129.415 537.395 129.813 537.933 130.209 cv
538.704 128.129 mo
538.902 128.316 539.09 128.503 539.277 128.69 cv
540.737 130.105 542.094 131.308 543.345 132.302 cv
545.273 133.833 546.933 134.874 548.347 135.4 cv
539.967 125.382 mo
539.78 125.171 539.592 124.961 539.404 124.762 cv
539.698 123.418 mo
539.404 124.762 li
517.732 110.501 mo
519.767 114.043 523.191 117.971 527.997 122.285 cv
529.646 123.687 531.305 125.067 532.988 126.411 cv
534.086 127.288 535.196 128.152 536.319 129.006 cv
539.404 124.762 mo
537.336 122.506 535.196 120.297 532.988 118.146 cv
532.766 117.924 532.556 117.713 532.334 117.503 cv
529.143 114.534 526.173 112.185 523.438 110.455 cv
519.522 108.328 mo
539.265 108.432 li
539.265 106.492 mo
539.265 108.432 li
519.522 108.328 mo
519.486 108.316 519.452 108.292 519.417 108.281 cv
519.381 108.269 519.335 108.257 519.276 108.234 cv
518.773 108.035 518.353 108.059 517.99 108.316 cv
517.99 108.316 mo
517.932 108.363 517.862 108.42 517.804 108.479 cv
517.757 108.538 517.698 108.596 517.641 108.666 cv
517.302 109.099 517.277 109.601 517.57 110.174 cv
517.593 110.209 517.616 110.256 517.628 110.315 cv
517.664 110.374 517.698 110.443 517.732 110.501 cv
564.759 123.418 mo
561.884 119.818 558.855 117.515 555.665 116.51 cv
555.665 109.952 li
555.805 108.854 556.155 108.351 556.718 108.432 cv
560.213 108.432 li
560.213 108.432 mo
559.885 107.836 559.511 107.31 559.102 106.832 cv
543.1 106.679 mo
550.662 82.9028 li
552.229 103.757 mo
552.229 76.977 li
559.066 106.784 mo
565.191 106.492 li
550.662 82.9028 mo
549.201 104.271 li
565.191 106.492 mo
565.191 108.432 li
565.191 108.432 mo
560.213 108.432 li
545.355 106.832 mo
559.102 106.832 li
559.066 106.784 mo
559.078 106.796 559.09 106.82 559.102 106.832 cv
559.102 106.832 mo
559.359 106.832 li
555.256 104.271 mo
556.775 104.762 558.051 105.604 559.066 106.785 cv
552.229 103.757 mo
552.054 103.768 551.878 103.78 551.703 103.791 cv
550.803 103.862 549.973 104.026 549.201 104.271 cv
555.256 104.271 mo
554.485 104.026 553.654 103.862 552.767 103.792 cv
552.592 103.78 552.416 103.768 552.24 103.757 cv
552.229 103.757 li
553.923 108.292 mo
554.239 108.292 554.392 108.445 554.392 108.76 cv
554.392 116.182 li
554.392 116.499 554.239 116.65 553.923 116.65 cv
550.534 116.65 li
550.218 116.65 550.065 116.499 550.065 116.182 cv
550.065 108.76 li
550.065 108.445 550.218 108.292 550.534 108.292 cv
553.923 108.292 li
553.923 108.292 li
cp
545.355 106.832 mo
545.099 106.832 li
545.39 106.784 mo
545.379 106.796 545.366 106.82 545.355 106.832 cv
545.355 106.832 mo
544.945 107.31 544.572 107.836 544.244 108.432 cv
545.39 106.784 mo
543.1 106.679 li
539.698 123.418 mo
542.573 119.818 545.602 117.515 548.791 116.51 cv
548.791 109.952 li
548.651 108.854 548.302 108.351 547.739 108.432 cv
544.244 108.432 li
549.201 104.271 mo
547.682 104.762 546.408 105.604 545.39 106.785 cv
552.229 76.977 mo
553.129 77.3159 553.654 79.2915 553.795 82.9028 cv
555.256 104.271 li
552.229 76.977 mo
551.329 77.3159 550.803 79.2915 550.662 82.9028 cv
762.051 104.727 mo
640.471 108.023 li
726.387 327.758 mo
729.169 327.034 731.822 326.322 734.336 325.608 cv
726.387 318.29 mo
734.336 316.419 li
726.387 294.234 mo
734.336 293.917 li
734.336 316.419 mo
734.336 293.917 li
750.467 312.632 mo
750.467 293.288 li
742.285 314.561 mo
742.285 293.602 li
758.532 317.356 mo
758.532 292.97 li
766.598 290.458 mo
770.046 290.82 771.8 292.984 771.87 296.969 cv
771.754 302.089 770 306.647 766.598 310.657 cv
766.598 310.657 mo
766.598 292.644 li
750.467 312.632 mo
742.285 314.561 li
750.467 320.545 mo
750.467 312.632 li
742.285 314.561 mo
742.285 323.259 li
734.336 316.419 mo
734.336 325.608 li
766.598 310.657 mo
764.529 313.1 761.841 315.333 758.533 317.356 cv
758.532 317.356 mo
758.498 317.378 758.45 317.402 758.416 317.424 cv
757.761 317.718 757.083 317.999 756.382 318.29 cv
754.57 319.027 752.606 319.787 750.467 320.545 cv
750.467 320.545 mo
749.088 321.038 747.638 321.528 746.118 322.031 cv
744.892 322.439 743.604 322.849 742.285 323.259 cv
742.285 323.259 mo
742.285 323.55 li
734.336 325.608 mo
736.802 324.917 739.141 324.228 741.35 323.55 cv
741.665 323.446 741.969 323.351 742.285 323.259 cv
742.285 314.561 mo
734.336 316.419 li
742.285 293.602 mo
750.467 293.288 li
750.467 293.288 mo
758.532 292.97 li
766.598 292.644 mo
766.598 290.458 li
758.532 292.97 mo
766.598 292.644 li
734.336 293.917 mo
742.285 293.602 li
660.425 339.658 mo
651.657 339.658 li
651.657 297.167 mo
668.853 296.49 li
651.657 348.88 mo
660.903 346.25 li
668.853 331.803 mo
668.853 341.4 li
677.269 338.887 mo
668.853 341.4 li
642.481 348.88 mo
642.481 339.658 li
634.229 348.88 mo
634.229 339.658 li
625.977 339.658 mo
625.977 348.88 li
617.15 348.88 mo
617.15 339.658 li
608.442 348.88 mo
608.442 339.658 li
668.853 343.984 mo
693.166 337.051 li
660.903 333.673 mo
660.903 346.25 li
651.657 348.88 mo
651.657 339.658 li
600.085 339.658 mo
600.085 348.88 li
591.809 348.88 mo
591.809 339.658 li
583.918 339.658 mo
583.918 348.88 li
660.903 346.25 mo
668.853 343.984 li
668.853 341.4 mo
668.853 343.984 li
608.442 348.88 mo
617.15 348.88 li
591.809 348.88 mo
600.085 348.88 li
583.918 348.88 mo
591.809 348.88 li
600.085 348.88 mo
608.442 348.88 li
634.229 348.88 mo
642.481 348.88 li
617.15 348.88 mo
625.977 348.88 li
625.977 348.88 mo
634.229 348.88 li
642.481 348.88 mo
651.657 348.88 li
608.442 302.462 mo
617.139 301.211 li
617.15 339.658 mo
608.442 339.658 li
642.481 297.554 mo
642.481 290.61 li
581.756 293.17 mo
581.756 297.355 li
603.988 297.203 mo
627.157 293.17 li
602.375 293.17 mo
627.157 293.17 li
617.139 301.211 mo
617.15 339.658 li
625.977 339.658 mo
625.977 299.938 li
634.229 339.658 mo
634.229 298.747 li
642.481 297.554 mo
642.481 339.658 li
651.657 339.658 mo
651.657 297.167 li
642.481 339.658 mo
634.229 339.658 li
634.229 298.746 mo
642.481 297.554 li
642.481 339.658 mo
651.657 339.658 li
617.15 339.658 mo
625.977 339.658 li
634.229 339.658 mo
625.977 339.658 li
617.139 301.211 mo
625.977 299.938 li
625.977 299.938 mo
634.229 298.747 li
651.657 297.167 mo
642.481 297.554 li
651.657 296.969 mo
651.657 297.167 li
608.442 339.658 mo
608.442 302.462 li
591.797 304.859 mo
600.085 303.667 li
600.085 339.658 mo
591.809 339.658 li
603.988 297.203 mo
583.029 300.849 li
583.918 339.658 mo
583.918 305.994 li
591.809 339.658 mo
591.797 304.859 li
600.085 339.658 mo
600.085 303.667 li
608.442 339.658 mo
600.085 339.658 li
591.809 339.658 mo
583.918 339.658 li
583.918 305.994 mo
591.797 304.859 li
581.756 297.355 mo
581.885 297.285 582.036 297.238 582.211 297.203 cv
603.988 297.203 li
583.029 300.849 mo
581.662 300.815 580.96 300.265 580.938 299.19 cv
580.926 298.254 581.194 297.647 581.756 297.355 cv
600.085 303.667 mo
608.442 302.462 li
593.644 276.349 mo
599.172 276.349 li
581.756 293.17 mo
602.375 293.17 li
599.172 276.349 mo
599.979 277.132 600.411 278.266 600.447 279.774 cv
600.447 289.254 li
600.762 291.569 601.405 292.877 602.375 293.17 cv
574.006 289.885 mo
576.775 288.798 580.68 288.284 585.718 288.318 cv
588.488 288.178 590.675 287.875 592.264 287.395 cv
592.264 287.395 mo
593.913 286.905 594.93 286.238 595.303 285.385 cv
592.264 287.395 mo
592.264 279.668 li
592.394 278.746 592.614 277.974 592.954 277.331 cv
593.152 276.957 593.375 276.629 593.644 276.349 cv
593.644 276.349 mo
594.076 275.893 594.614 275.566 595.245 275.367 cv
595.584 275.262 595.959 275.192 596.355 275.157 cv
597.559 275.297 598.506 275.695 599.172 276.349 cv
627.157 293.17 mo
643.008 290.412 li
766.026 290.412 li
766.225 290.423 766.411 290.434 766.598 290.458 cv
685.218 295.847 mo
693.166 295.531 li
685.218 336.514 mo
693.166 334.141 li
693.166 326.099 mo
685.218 327.969 li
709.998 322.136 mo
717.971 320.265 li
709.998 332.248 mo
717.971 329.979 li
709.998 294.877 mo
709.998 322.136 li
693.166 295.531 mo
693.166 326.099 li
701.863 324.052 mo
701.863 295.285 li
717.971 320.265 mo
717.971 294.701 li
726.387 318.29 mo
726.387 294.234 li
726.387 294.234 mo
709.998 294.877 li
717.971 320.265 mo
717.971 329.979 li
726.387 318.29 mo
717.971 320.265 li
717.971 329.979 mo
720.647 329.22 li
722.623 328.728 724.529 328.238 726.387 327.758 cv
726.387 327.758 mo
726.387 318.29 li
693.166 334.141 mo
693.166 326.099 li
709.998 332.248 mo
709.998 322.136 li
701.863 324.052 mo
701.863 334.574 li
693.166 326.099 mo
701.863 324.052 li
693.166 337.051 mo
701.863 334.574 li
701.863 334.574 mo
709.998 332.248 li
693.166 337.051 mo
693.166 334.141 li
709.998 322.136 mo
701.863 324.052 li
693.166 295.531 mo
709.998 294.877 li
709.998 294.877 mo
709.998 294.806 li
685.218 327.969 mo
685.218 295.847 li
668.853 296.49 mo
677.269 296.151 li
677.269 329.828 mo
668.853 331.803 li
677.269 329.828 mo
677.269 296.151 li
668.853 331.803 mo
668.853 296.49 li
660.903 333.673 mo
660.903 296.958 li
685.218 327.969 mo
685.218 336.514 li
685.218 336.514 mo
677.269 338.887 li
685.218 327.969 mo
677.269 329.828 li
677.269 338.887 mo
677.269 329.828 li
668.853 331.803 mo
660.903 333.673 li
677.269 296.151 mo
685.218 295.847 li
573.199 156.792 mo
592.194 171.239 li
595.198 173.694 597.221 176.417 598.261 179.421 cv
598.343 179.667 598.413 179.924 598.495 180.169 cv
598.565 180.391 598.623 180.602 598.67 180.825 cv
598.974 182.052 599.09 183.303 599.032 184.577 cv
598.998 185.383 598.974 186.202 598.974 187.019 cv
598.974 192.046 li
598.974 193.297 598.472 194.057 597.454 194.302 cv
591.024 194.36 mo
591.177 194.373 591.329 194.384 591.493 194.384 cv
596.636 194.384 li
596.94 194.384 597.208 194.36 597.454 194.302 cv
597.454 194.302 mo
597.454 200.053 li
597.454 200.941 597.139 201.702 596.52 202.321 cv
595.889 202.952 595.128 203.267 594.239 203.267 cv
593.351 203.267 592.592 202.952 591.972 202.321 cv
591.341 201.702 591.024 200.941 591.024 200.053 cv
591.024 194.36 li
591.024 194.36 mo
589.775 194.208 589.155 193.437 589.155 192.046 cv
589.155 185.15 li
589.411 177.4 587.074 171.472 582.152 167.381 cv
567.272 156.09 li
640.471 108.023 mo
640.471 110.922 li
634.755 110.875 mo
634.638 111.04 634.556 111.226 634.521 111.437 cv
634.521 111.472 634.521 111.507 634.51 111.542 cv
591.013 141.83 li
640.471 110.922 mo
638.145 110.911 li
638.145 110.911 mo
638.157 110.642 638.075 110.385 637.899 110.163 cv
637.7 109.871 637.42 109.695 637.069 109.636 cv
636.73 109.579 636.403 109.648 636.111 109.859 cv
635.047 110.607 li
634.942 110.689 634.836 110.771 634.755 110.875 cv
638.145 110.911 mo
638.145 110.969 638.133 111.04 638.121 111.121 cv
638.063 111.46 637.887 111.741 637.595 111.951 cv
636.531 112.7 li
636.239 112.898 635.924 112.98 635.573 112.921 cv
635.538 112.91 635.491 112.898 635.444 112.886 cv
593.726 141.934 li
604.327 143.267 mo
591.609 143.407 li
604.327 143.267 mo
604.339 143.279 604.351 143.29 604.351 143.302 cv
604.387 143.675 602.434 144.027 598.518 144.366 cv
596.191 144.564 593.152 144.751 589.424 144.926 cv
593.726 141.934 mo
595.561 142.016 597.162 142.098 598.518 142.203 cv
602.177 142.472 604.106 142.823 604.327 143.267 cv
588.687 143.442 mo
586.36 145.067 li
589.424 144.926 mo
591.609 143.407 li
591.609 143.407 mo
593.726 141.934 li
591.013 141.83 mo
588.687 143.442 li
571.96 137.632 mo
573.398 137.317 574.824 136.99 576.262 136.639 cv
578.331 136.136 580.399 135.586 582.469 134.991 cv
584.561 134.348 586.479 133.669 588.244 132.98 cv
591.785 131.566 594.672 130.046 596.904 128.41 cv
596.94 128.374 596.975 128.351 597.01 128.316 cv
597.513 127.93 597.699 127.462 597.548 126.925 cv
597.524 126.843 597.501 126.761 597.466 126.68 cv
597.268 126.166 596.834 125.896 596.191 125.874 cv
596.146 125.861 596.099 125.861 596.052 125.849 cv
593.771 125.815 591.165 126.107 588.244 126.726 cv
585.87 127.217 583.287 127.918 580.493 128.842 cv
577.08 130.046 573.725 131.355 570.416 132.747 cv
640.471 108.023 mo
640.471 102.926 li
762.051 103.137 mo
766.435 103.441 768.469 103.956 768.141 104.68 cv
768.433 105.324 766.411 105.873 762.051 106.329 cv
640.471 102.926 mo
758.065 102.926 li
759.561 102.986 760.894 103.055 762.051 103.137 cv
762.051 106.329 mo
761.935 106.34 761.817 106.352 761.688 106.364 cv
640.471 110.922 li
762.051 106.329 mo
762.051 104.727 li
762.051 103.137 mo
762.051 104.727 li
.749721 .679194 .670497 .901457 cmyk
@
542.9 292.924 mo
542.924 292.386 542.959 291.849 542.993 291.323 cv
542.83 294.339 mo
542.83 294.21 542.83 294.071 542.843 293.93 cv
542.854 293.59 542.877 293.264 542.9 292.924 cv
542.9 292.924 mo
548.066 292.924 li
548.839 292.866 549.471 292.574 549.949 292.071 cv
551.398 290.458 li
551.597 290.143 551.714 289.792 551.749 289.395 cv
551.749 283.631 li
551.737 283.596 551.737 283.561 551.737 283.527 cv
551.632 283.059 551.293 282.918 550.709 283.094 cv
547.88 284.602 545.308 287.337 542.993 291.323 cv
546.139 271.72 mo
540.994 271.72 li
545.32 278.722 mo
545.191 279.108 545.063 279.517 544.945 279.938 cv
544.923 279.997 544.899 280.066 544.888 280.136 cv
544.128 282.778 543.531 286.004 543.123 289.827 cv
543.075 290.33 543.029 290.82 542.993 291.323 cv
547.424 271.72 mo
546.139 271.72 li
553.97 271.72 mo
555.794 271.72 li
547.424 264.928 mo
553.97 264.928 li
553.97 264.928 mo
555.794 264.928 li
546.139 264.928 mo
540.994 264.928 li
547.424 264.928 mo
546.139 264.928 li
543.917 253.718 mo
543.602 253.696 543.321 253.917 543.064 254.396 cv
542.912 254.677 542.783 254.993 542.702 255.343 cv
542.644 255.589 542.607 255.846 542.585 256.126 cv
542.526 256.816 542.597 257.424 542.783 257.938 cv
542.9 258.278 543.052 258.5 543.228 258.628 cv
543.321 258.686 543.414 258.722 543.52 258.733 cv
543.649 258.745 543.776 258.71 543.906 258.628 cv
544.07 258.523 544.232 258.325 544.385 258.055 cv
544.642 257.588 544.795 257.003 544.853 256.314 cv
544.888 255.975 544.888 255.647 544.853 255.343 cv
544.817 255.051 544.747 254.771 544.665 254.513 cv
544.479 254.011 544.232 253.742 543.917 253.718 cv
543.917 253.718 li
cp
554.882 253.835 mo
555.104 253.953 555.291 254.151 555.467 254.443 cv
555.631 254.712 555.747 255.016 555.829 255.343 cv
555.887 255.613 555.911 255.905 555.911 256.22 cv
555.911 256.91 555.759 257.506 555.467 257.997 cv
555.291 258.289 555.104 258.488 554.882 258.605 cv
554.882 258.605 mo
554.894 258.617 554.916 258.617 554.929 258.628 cv
555.069 258.698 555.221 258.733 555.373 258.733 cv
555.524 258.733 555.677 258.698 555.829 258.628 cv
556.051 258.511 556.262 258.301 556.448 257.997 cv
556.74 257.506 556.893 256.91 556.893 256.22 cv
556.893 255.905 556.869 255.613 556.811 255.343 cv
556.729 255.016 556.611 254.712 556.448 254.443 cv
556.155 253.953 555.794 253.707 555.373 253.707 cv
555.198 253.707 555.034 253.753 554.882 253.835 cv
554.882 253.835 mo
554.66 253.953 554.473 254.151 554.298 254.443 cv
554.134 254.712 554.018 255.016 553.947 255.343 cv
553.888 255.613 553.854 255.905 553.854 256.22 cv
553.854 256.91 554.005 257.506 554.298 257.997 cv
554.473 258.289 554.66 258.488 554.882 258.605 cv
554.882 258.605 mo
554.87 258.617 554.847 258.617 554.836 258.628 cv
554.695 258.698 554.543 258.733 554.392 258.733 cv
554.239 258.733 554.087 258.698 553.947 258.628 cv
553.713 258.511 553.503 258.301 553.316 257.997 cv
553.022 257.506 552.872 256.91 552.872 256.22 cv
552.872 255.905 552.906 255.613 552.965 255.343 cv
553.034 255.016 553.152 254.712 553.316 254.443 cv
553.607 253.953 553.97 253.707 554.392 253.707 cv
554.566 253.707 554.729 253.753 554.882 253.835 cv
568.769 264.928 mo
569.587 264.928 li
573.947 258.698 mo
574.123 260.592 574.251 262.672 574.345 264.928 cv
569.587 264.928 mo
572.742 264.928 li
574.345 264.928 mo
574.345 265.01 574.345 265.092 574.355 265.174 cv
574.415 266.798 574.462 268.505 574.496 270.318 cv
574.531 271.007 574.239 271.451 573.631 271.626 cv
572.742 264.928 mo
574.345 264.928 li
562.339 264.928 mo
563.626 264.928 li
563.626 264.928 mo
568.769 264.928 li
567.063 255.343 mo
567.121 255.589 567.155 255.846 567.179 256.126 cv
567.237 256.816 567.167 257.424 566.98 257.938 cv
566.863 258.278 566.712 258.5 566.536 258.628 cv
566.442 258.686 566.349 258.722 566.244 258.733 cv
566.114 258.745 565.986 258.71 565.858 258.628 cv
565.694 258.523 565.531 258.325 565.379 258.055 cv
565.121 257.588 564.97 257.003 564.911 256.314 cv
564.877 255.975 564.889 255.647 564.923 255.343 cv
564.958 255.051 565.017 254.771 565.099 254.513 cv
565.285 254.011 565.531 253.742 565.846 253.718 cv
566.162 253.696 566.442 253.917 566.699 254.396 cv
566.853 254.677 566.98 254.993 567.063 255.343 cv
567.063 255.343 li
cp
573.947 258.698 mo
573.947 258.675 573.947 258.651 573.947 258.628 cv
573.842 257.459 573.737 256.361 573.608 255.343 cv
573.538 254.794 573.468 254.256 573.387 253.753 cv
573.387 253.753 mo
573.409 253.742 573.433 253.731 573.444 253.731 cv
573.667 253.696 573.889 253.917 574.111 254.385 cv
574.239 254.666 574.355 254.981 574.45 255.343 cv
574.508 255.589 574.556 255.846 574.59 256.115 cv
574.672 256.804 574.672 257.401 574.578 257.904 cv
574.52 258.208 574.45 258.429 574.345 258.57 cv
574.333 258.593 574.31 258.617 574.286 258.628 cv
574.228 258.675 574.169 258.698 574.1 258.71 cv
574.052 258.722 574.006 258.71 573.947 258.698 cv
343.166 292.644 mo
351.231 292.97 li
351.231 317.356 mo
347.923 315.333 345.234 313.1 343.166 310.657 cv
343.166 310.657 mo
343.166 292.644 li
343.166 310.657 mo
339.764 306.647 338.011 302.089 337.894 296.969 cv
337.964 292.984 339.718 290.82 343.166 290.458 cv
343.166 292.644 mo
343.166 290.458 li
343.166 290.458 mo
343.353 290.434 343.54 290.423 343.738 290.412 cv
466.757 290.412 li
482.607 293.17 li
383.377 318.29 mo
391.793 320.265 li
383.377 294.234 mo
399.765 294.877 li
359.297 312.632 mo
359.297 293.288 li
351.231 317.356 mo
351.231 292.97 li
375.428 316.419 mo
375.428 293.917 li
367.479 314.561 mo
367.479 293.602 li
375.428 293.917 mo
383.377 294.234 li
399.765 322.136 mo
399.765 294.877 li
407.9 324.052 mo
407.9 295.285 li
391.793 320.265 mo
391.793 294.701 li
424.547 327.969 mo
424.547 295.847 li
416.598 326.099 mo
416.598 295.531 li
416.598 337.051 mo
407.9 334.574 li
407.9 324.052 mo
416.598 326.099 li
399.765 294.877 mo
416.598 295.531 li
416.598 326.099 mo
424.547 327.969 li
416.598 334.141 mo
424.547 336.514 li
416.598 334.141 mo
416.598 326.099 li
424.547 336.514 mo
424.547 327.969 li
416.598 337.051 mo
416.598 334.141 li
391.793 329.979 mo
391.793 320.265 li
399.765 332.248 mo
399.765 322.136 li
407.9 334.574 mo
407.9 324.052 li
391.793 320.265 mo
399.765 322.136 li
399.765 332.248 mo
391.793 329.979 li
407.9 334.574 mo
399.765 332.248 li
391.793 329.979 mo
389.116 329.22 li
387.141 328.728 385.235 328.238 383.377 327.758 cv
399.765 322.136 mo
407.9 324.052 li
399.765 294.877 mo
399.765 294.806 li
416.598 295.531 mo
424.547 295.847 li
383.377 318.29 mo
383.377 294.234 li
367.479 314.561 mo
375.428 316.419 li
359.297 320.545 mo
359.297 312.632 li
375.428 325.608 mo
375.428 316.419 li
367.479 323.259 mo
367.479 314.561 li
375.428 316.419 mo
383.377 318.29 li
383.377 327.758 mo
380.595 327.034 377.941 326.322 375.428 325.608 cv
383.377 327.758 mo
383.377 318.29 li
367.479 323.259 mo
364.522 322.334 361.799 321.434 359.297 320.545 cv
359.297 320.545 mo
356.328 319.482 353.675 318.443 351.349 317.424 cv
351.313 317.402 351.267 317.378 351.231 317.356 cv
367.479 323.55 mo
367.479 323.259 li
375.428 325.608 mo
372.962 324.917 370.624 324.228 368.415 323.55 cv
368.1 323.446 367.795 323.351 367.479 323.259 cv
359.297 312.632 mo
367.479 314.561 li
367.479 293.602 mo
375.428 293.917 li
359.297 293.288 mo
367.479 293.602 li
351.231 292.97 mo
359.297 293.288 li
342.406 106.329 mo
338.046 105.873 336.023 105.324 336.315 104.68 cv
335.988 103.956 338.022 103.441 342.406 103.137 cv
342.406 103.137 mo
342.406 104.727 li
342.406 104.727 mo
342.406 106.329 li
463.986 102.926 mo
346.392 102.926 li
344.896 102.986 343.563 103.055 342.406 103.137 cv
463.986 110.922 mo
342.769 106.364 li
342.64 106.352 342.523 106.34 342.406 106.329 cv
550.498 159.339 mo
550.697 157.54 550.885 155.739 551.036 153.939 cv
547.67 153.191 mo
547.038 154.885 546.431 156.604 545.857 158.323 cv
469.703 110.875 mo
517.732 110.501 li
463.986 108.023 mo
517.99 108.316 li
510.731 141.934 mo
503.964 142.214 500.433 142.659 500.129 143.267 cv
500.129 143.267 mo
512.848 143.407 li
539.265 106.492 mo
463.986 102.926 li
539.218 156.674 mo
541.054 158.264 543.064 159.457 545.239 160.24 cv
548.675 243.42 mo
545.25 242.216 540.737 241.784 535.15 242.123 cv
558.249 240.38 mo
558.985 240.72 559.406 241.222 559.511 241.877 cv
559.534 245.981 mo
550.229 245.981 li
561.089 243.42 mo
564.515 242.216 569.026 241.784 574.613 242.123 cv
559.511 241.877 mo
562.621 240.533 566.723 239.914 571.808 240.019 cv
585.52 240.299 592.533 240.965 592.849 242.006 cv
593.398 243.233 587.787 244.017 576.017 244.355 cv
570.043 244.25 565.063 243.947 561.089 243.42 cv
559.534 243.186 mo
559.534 245.981 li
561.089 243.42 mo
561.077 243.409 561.054 243.409 561.03 243.409 cv
560.516 243.339 560.013 243.268 559.534 243.186 cv
559.534 245.981 mo
563.977 245.981 li
568.57 245.559 571.493 246.998 572.742 250.305 cv
572.872 250.855 573 251.451 573.117 252.07 cv
573.211 252.608 573.305 253.169 573.387 253.753 cv
559.511 241.877 mo
559.534 242.029 559.546 242.193 559.534 242.369 cv
559.534 243.186 li
536.378 253.753 mo
536.46 253.158 536.554 252.596 536.659 252.07 cv
536.775 251.451 536.892 250.855 537.021 250.305 cv
538.272 246.998 541.193 245.559 545.788 245.981 cv
550.229 245.981 li
551.516 240.38 mo
558.249 240.38 li
551.516 239.353 mo
558.249 239.353 li
550.254 241.877 mo
550.229 242.029 550.218 242.193 550.229 242.369 cv
550.229 243.186 li
550.229 243.186 mo
550.229 245.981 li
551.516 240.38 mo
550.779 240.72 550.358 241.222 550.254 241.877 cv
551.516 239.353 mo
551.516 240.38 li
558.249 239.353 mo
558.249 240.38 li
550.229 243.186 mo
549.751 243.268 549.248 243.339 548.732 243.409 cv
548.71 243.409 548.687 243.409 548.675 243.42 cv
551.516 239.353 mo
550.113 239.446 li
550.37 233.589 551.878 230.585 554.625 230.433 cv
554.718 230.421 554.812 230.421 554.905 230.421 cv
554.986 230.421 555.058 230.421 555.139 230.433 cv
557.887 230.597 559.395 233.601 559.65 239.446 cv
558.249 239.353 li
550.254 241.877 mo
547.144 240.533 543.041 239.914 537.955 240.019 cv
524.244 240.299 517.23 240.965 516.915 242.006 cv
516.365 243.233 521.977 244.017 533.747 244.355 cv
539.722 244.25 544.701 243.947 548.675 243.42 cv
513.433 194.36 mo
513.433 200.053 li
513.433 200.941 513.116 201.702 512.485 202.321 cv
511.865 202.952 511.105 203.267 510.218 203.267 cv
509.329 203.267 508.568 202.952 507.938 202.321 cv
507.317 201.702 507.003 200.941 507.003 200.053 cv
507.003 194.302 li
513.433 194.36 mo
513.279 194.373 513.128 194.384 512.964 194.384 cv
507.82 194.384 li
507.518 194.384 507.249 194.36 507.003 194.302 cv
531.259 156.792 mo
512.264 171.239 li
509.259 173.694 507.236 176.417 506.196 179.421 cv
506.114 179.667 506.044 179.924 505.962 180.169 cv
505.892 180.391 505.834 180.602 505.786 180.825 cv
505.483 182.052 505.365 183.303 505.424 184.577 cv
505.46 185.383 505.483 186.202 505.483 187.019 cv
505.483 192.046 li
505.483 193.297 505.985 194.057 507.003 194.302 cv
513.433 194.36 mo
514.684 194.208 515.302 193.437 515.302 192.046 cv
515.302 185.15 li
515.046 177.4 517.384 171.472 522.303 167.381 cv
537.208 156.079 li
531.259 156.792 mo
530.825 156.487 li
530.533 156.289 530.346 156.007 530.276 155.669 cv
530.264 155.623 530.264 155.576 530.264 155.529 cv
515.032 144.926 li
533.361 155.19 mo
533.479 155.341 533.561 155.529 533.597 155.727 cv
533.665 156.079 533.597 156.406 533.396 156.698 cv
533.198 156.99 532.917 157.166 532.578 157.236 cv
532.229 157.305 531.912 157.236 531.621 157.037 cv
531.259 156.792 li
537.208 156.079 mo
537.243 156.136 537.302 156.207 537.36 156.265 cv
537.792 156.698 538.389 156.826 539.148 156.674 cv
539.16 156.686 li
539.172 156.686 539.195 156.686 539.218 156.674 cv
536.962 154.441 mo
537.278 154.804 537.605 155.155 537.955 155.505 cv
537.968 155.517 537.979 155.529 537.991 155.541 cv
538.389 155.938 538.798 156.312 539.218 156.674 cv
553.877 161.362 mo
558.167 161.046 561.942 159.48 565.203 156.663 cv
545.239 160.24 mo
544.139 163.641 543.157 167.101 542.28 170.596 cv
540.819 177.013 540.317 182.274 540.773 186.388 cv
540.785 186.435 540.785 186.482 540.796 186.529 cv
540.878 187.171 541.193 187.557 541.731 187.686 cv
541.813 187.709 541.906 187.733 541.988 187.745 cv
542.538 187.826 542.982 187.592 543.332 187.042 cv
543.355 187.007 543.38 186.961 543.414 186.926 cv
545.53 183.373 547.261 178.381 548.604 171.963 cv
549.259 168.421 549.81 164.88 550.265 161.338 cv
545.857 158.323 mo
545.647 158.965 545.438 159.596 545.239 160.24 cv
550.265 161.338 mo
550.346 160.671 550.417 160.006 550.498 159.339 cv
550.265 161.338 mo
550.394 161.349 550.51 161.362 550.639 161.374 cv
550.639 161.374 mo
551.153 161.409 551.667 161.42 552.193 161.42 cv
552.767 161.42 553.327 161.396 553.877 161.362 cv
550.639 161.374 mo
550.65 161.396 550.674 161.42 550.685 161.444 cv
550.697 161.444 550.697 161.444 550.697 161.456 cv
551.129 162.098 551.645 162.425 552.252 162.425 cv
552.86 162.425 553.374 162.098 553.806 161.456 cv
553.818 161.444 553.818 161.444 553.829 161.432 cv
553.843 161.409 553.865 161.385 553.877 161.362 cv
565.203 156.663 mo
565.239 156.674 565.285 156.674 565.321 156.686 cv
565.332 156.674 li
566.092 156.826 566.688 156.698 567.121 156.265 cv
567.179 156.207 567.226 156.148 567.272 156.09 cv
565.203 156.663 mo
565.612 156.3 566.01 155.926 566.396 155.541 cv
566.419 155.517 566.442 155.494 566.466 155.482 cv
566.828 155.108 567.167 154.734 567.507 154.348 cv
589.424 144.926 mo
574.192 155.529 li
574.192 155.576 574.192 155.623 574.182 155.669 cv
574.111 156.008 573.924 156.289 573.631 156.487 cv
573.199 156.792 li
571.095 155.19 mo
570.979 155.341 570.896 155.529 570.86 155.727 cv
570.791 156.079 570.86 156.406 571.061 156.698 cv
571.259 156.99 571.539 157.166 571.878 157.236 cv
572.229 157.305 572.544 157.236 572.837 157.037 cv
573.199 156.792 li
463.986 108.023 mo
463.986 110.922 li
463.986 110.922 mo
466.313 110.911 li
500.129 143.267 mo
500.118 143.279 500.105 143.29 500.105 143.302 cv
500.047 143.898 505.027 144.447 515.032 144.926 cv
510.731 141.934 mo
469.013 112.886 li
468.965 112.898 468.919 112.91 468.884 112.921 cv
468.533 112.98 468.218 112.898 467.926 112.7 cv
466.862 111.951 li
466.568 111.741 466.395 111.46 466.336 111.121 cv
466.324 111.04 466.313 110.969 466.313 110.911 cv
466.313 110.911 mo
466.301 110.642 466.382 110.385 466.558 110.163 cv
466.757 109.871 467.037 109.695 467.389 109.636 cv
467.727 109.579 468.054 109.648 468.346 109.859 cv
469.409 110.607 li
469.515 110.689 469.621 110.771 469.703 110.875 cv
469.703 110.875 mo
469.819 111.04 469.901 111.226 469.936 111.437 cv
469.936 111.472 469.936 111.507 469.947 111.542 cv
513.443 141.83 li
463.986 102.926 mo
463.986 108.023 li
544.244 108.432 mo
543.93 109.005 543.649 109.625 543.403 110.291 cv
565.191 110.327 mo
565.191 108.432 li
560.213 108.432 mo
560.528 109.005 560.809 109.625 561.054 110.291 cv
539.265 108.432 mo
539.265 110.327 li
523.438 110.455 mo
522.07 109.589 520.772 108.876 519.522 108.328 cv
541.322 126.878 mo
540.867 126.375 540.423 125.874 539.967 125.382 cv
543.1 106.679 mo
539.265 106.492 li
537.933 130.209 mo
539.394 131.297 540.867 132.349 542.351 133.389 cv
550.685 121.302 mo
546.664 121.572 543.088 122.939 539.967 125.382 cv
539.265 108.432 mo
544.244 108.432 li
539.265 110.327 mo
543.403 110.291 li
543.403 110.291 mo
539.698 123.418 li
570.416 132.747 mo
569.681 131.192 568.723 129.731 567.541 128.363 cv
548.347 135.4 mo
547.215 133.916 546.046 132.454 544.853 131.016 cv
558.962 139.9 mo
560.867 139.643 562.761 139.363 564.665 139.047 cv
565.285 126.095 mo
562.001 123.219 558.179 121.63 553.829 121.314 cv
571.867 145.581 mo
571.995 144.938 572.089 144.295 572.158 143.629 cv
570.416 132.747 mo
569.798 133.003 569.178 133.261 568.57 133.529 cv
564.665 139.047 mo
566.454 138.743 568.231 138.404 570.008 138.041 cv
571.095 155.19 mo
568.453 153.179 li
568.453 153.179 mo
570.16 150.876 571.293 148.351 571.867 145.581 cv
586.36 145.067 mo
573.257 154.185 li
573.223 154.172 573.199 154.172 573.164 154.161 cv
572.813 154.09 572.486 154.161 572.193 154.36 cv
571.398 154.91 li
571.282 154.992 571.177 155.084 571.095 155.19 cv
567.507 154.348 mo
567.846 153.962 568.161 153.577 568.453 153.179 cv
567.272 156.09 mo
567.577 155.68 567.658 155.143 567.529 154.477 cv
567.541 154.465 567.541 154.465 567.529 154.454 cv
567.518 154.418 567.518 154.383 567.507 154.348 cv
563.614 135.774 mo
562.994 136.054 562.387 136.346 561.79 136.639 cv
560.049 137.481 558.331 138.345 556.636 139.234 cv
568.57 133.529 mo
566.898 134.254 565.25 135.002 563.614 135.774 cv
570.008 138.041 mo
570.65 137.913 571.305 137.772 571.96 137.632 cv
572.218 139.737 mo
572.17 139.023 572.089 138.323 571.96 137.632 cv
550.498 159.339 mo
551.047 159.386 551.621 159.41 552.193 159.41 cv
557.185 159.41 561.451 157.645 564.981 154.115 cv
567.447 151.648 569.061 148.831 569.798 145.639 cv
570.113 144.272 570.276 142.834 570.276 141.338 cv
570.276 140.204 570.184 139.105 570.008 138.041 cv
572.218 143.009 mo
572.252 142.53 572.264 142.04 572.275 141.548 cv
572.275 141.478 572.275 141.408 572.275 141.338 cv
572.275 140.8 572.252 140.262 572.218 139.736 cv
572.158 143.629 mo
572.182 143.43 572.205 143.22 572.218 143.009 cv
572.218 143.009 mo
572.252 142.986 572.287 142.962 572.322 142.94 cv
572.322 142.927 572.322 142.927 572.334 142.927 cv
572.918 142.542 573.234 142.085 573.293 141.56 cv
573.293 141.56 mo
573.305 141.501 573.305 141.431 573.305 141.374 cv
573.305 140.765 572.977 140.25 572.334 139.819 cv
572.322 139.807 572.322 139.807 572.311 139.794 cv
572.275 139.783 572.252 139.76 572.218 139.737 cv
570.078 135.19 mo
569.832 135.259 569.575 135.33 569.33 135.4 cv
567.903 135.809 566.606 136.217 565.426 136.639 cv
564.993 136.791 564.572 136.955 564.175 137.106 cv
561.872 138.006 560.131 138.941 558.962 139.9 cv
549.785 147.791 mo
550.054 147.147 550.322 146.516 550.592 145.874 cv
551.036 153.939 mo
551.259 151.321 551.423 148.702 551.527 146.095 cv
551.036 153.939 mo
551.423 153.974 551.808 153.986 552.193 153.986 cv
555.688 153.986 558.682 152.747 561.147 150.28 cv
563.614 147.814 564.853 144.822 564.853 141.327 cv
564.853 140.543 564.795 139.783 564.665 139.047 cv
550.592 145.874 mo
550.885 145.978 551.2 146.049 551.527 146.095 cv
549.785 147.791 mo
549.049 149.579 548.336 151.379 547.67 153.191 cv
548.313 159.772 mo
548.37 159.527 548.441 159.292 548.5 159.059 cv
548.99 157.083 549.353 155.318 549.598 153.741 cv
549.973 151.274 550.031 149.287 549.785 147.791 cv
548.944 137.785 mo
548.896 137.82 548.851 137.866 548.791 137.925 cv
547.846 138.872 547.377 140.005 547.377 141.327 cv
547.377 142.647 547.846 143.781 548.791 144.728 cv
549.329 145.265 549.926 145.651 550.592 145.874 cv
549.61 137.047 mo
549.505 136.919 549.399 136.779 549.295 136.639 cv
548.979 136.23 548.664 135.809 548.347 135.4 cv
542.351 133.389 mo
543.94 134.488 545.554 135.575 547.179 136.639 cv
547.763 137.024 548.347 137.399 548.944 137.785 cv
558.962 139.9 mo
558.271 139.994 557.582 140.087 556.869 140.18 cv
551.527 146.095 mo
551.749 146.12 551.972 146.13 552.193 146.13 cv
553.515 146.13 554.648 145.663 555.595 144.728 cv
556.53 143.781 556.998 142.647 556.998 141.327 cv
556.998 140.929 556.95 140.543 556.869 140.18 cv
556.869 140.18 mo
556.67 139.328 556.249 138.58 555.595 137.925 cv
554.929 137.258 554.157 136.837 553.292 136.639 cv
552.94 136.557 552.578 136.522 552.193 136.522 cv
551.808 136.522 551.445 136.557 551.095 136.639 cv
550.288 136.814 549.575 137.2 548.944 137.785 cv
563.614 135.774 mo
563.006 134.546 562.188 133.424 561.147 132.384 cv
558.682 129.917 555.688 128.678 552.193 128.678 cv
549.423 128.678 546.979 129.461 544.853 131.016 cv
553.829 121.314 mo
553.818 121.303 553.818 121.303 553.806 121.291 cv
553.374 120.648 552.86 120.321 552.252 120.321 cv
551.645 120.321 551.129 120.648 550.697 121.291 cv
550.697 121.302 550.697 121.302 550.685 121.302 cv
553.829 121.314 mo
553.292 121.279 552.742 121.256 552.193 121.256 cv
551.691 121.256 551.188 121.267 550.685 121.303 cv
544.853 131.016 mo
543.694 129.614 542.526 128.234 541.322 126.878 cv
561.054 110.291 mo
564.759 123.418 li
567.541 128.363 mo
567.179 127.942 566.793 127.533 566.396 127.135 cv
566.034 126.773 565.659 126.422 565.285 126.095 cv
567.541 128.363 mo
567.541 128.339 567.541 128.316 567.554 128.292 cv
567.541 128.281 li
567.693 127.521 567.565 126.925 567.133 126.493 cv
566.723 126.083 566.174 125.943 565.461 126.06 cv
568.57 133.529 mo
568.009 132.373 567.308 131.262 566.479 130.221 cv
566.021 129.649 565.52 129.087 564.981 128.549 cv
564.467 128.036 563.94 127.556 563.392 127.125 cv
560.773 125.008 557.793 123.769 554.449 123.395 cv
553.713 123.313 552.954 123.266 552.193 123.266 cv
551.469 123.266 550.756 123.301 550.065 123.383 cv
546.805 123.722 543.895 124.891 541.322 126.878 cv
565.461 126.06 mo
564.759 123.418 li
565.461 126.06 mo
565.426 126.072 565.379 126.072 565.344 126.083 cv
565.332 126.072 565.332 126.072 565.321 126.083 cv
565.31 126.083 565.297 126.083 565.285 126.095 cv
561.054 110.291 mo
565.191 110.327 li
515.757 143.442 mo
532.229 143.629 li
532.521 145.581 mo
527.015 145.417 522.198 145.243 518.096 145.067 cv
531.211 141.56 mo
524.046 141.583 518.131 141.676 513.443 141.83 cv
532.229 143.629 mo
532.298 144.295 532.392 144.938 532.521 145.581 cv
533.361 155.19 mo
535.969 153.214 li
532.521 145.581 mo
533.094 148.364 534.239 150.912 535.969 153.214 cv
@
543.871 369.839 mo
544.116 370.997 544.841 372.049 546.046 373.019 cv
546.057 373.031 546.057 373.031 546.068 373.042 cv
549.026 375.743 li
548.873 365.842 li
543.637 365.842 li
543.8 369.501 li
543.813 369.607 543.836 369.723 543.871 369.839 cv
543.871 369.839 li
cp
554.858 378.117 mo
553.491 378.069 551.983 377.672 550.322 376.936 cv
550.206 376.83 li
550.042 365.842 li
556.775 365.842 li
556.775 365.842 mo
556.822 364.673 li
556.822 364.673 mo
550.031 364.673 li
549.902 355.684 li
557.114 355.684 li
557.149 354.515 mo
557.5 344.052 li
557.114 355.684 mo
557.149 354.515 li
543.169 355.684 mo
543.578 364.673 li
548.862 364.673 li
548.732 355.684 li
543.169 355.684 li
543.169 355.684 li
cp
554.858 379.32 mo
553.327 379.262 551.621 378.805 549.762 377.964 cv
549.703 377.929 549.646 377.894 549.598 377.859 cv
549.283 377.567 li
549.259 377.554 549.235 377.532 549.225 377.52 cv
545.273 373.908 li
543.766 372.68 542.9 371.325 542.679 369.839 cv
542.667 369.757 542.655 369.675 542.644 369.595 cv
542.631 369.583 542.631 369.571 542.631 369.559 cv
541.79 351.3 li
541.778 351.219 541.79 351.137 541.824 351.067 cv
541.86 350.985 541.896 350.926 541.954 350.869 cv
541.977 350.844 542 350.821 542.023 350.798 cv
542.023 350.798 mo
542.748 348.88 li
542.97 351.487 mo
543.111 354.515 li
548.722 354.515 li
548.604 346.309 li
546.969 347.572 545.086 349.302 542.97 351.487 cv
542.97 351.487 li
cp
554.894 343.69 mo
553.806 343.597 552.742 343.796 551.726 344.288 cv
551.129 344.568 550.476 344.954 549.762 345.457 cv
549.891 354.515 li
557.149 354.515 li
542.023 350.798 mo
544.631 348.098 546.887 346.064 548.769 344.719 cv
548.804 344.685 548.851 344.661 548.896 344.637 cv
549.738 344.03 550.51 343.563 551.223 343.235 cv
552.403 342.662 553.631 342.428 554.894 342.51 cv
554.894 342.51 mo
554.496 342.535 554.099 342.592 553.689 342.685 cv
553.689 343.831 mo
553.771 343.843 553.854 343.843 553.936 343.831 cv
554.25 343.761 554.578 343.714 554.894 343.69 cv
556.074 343.831 mo
555.993 343.843 555.911 343.843 555.829 343.831 cv
555.513 343.761 555.21 343.714 554.894 343.69 cv
557.536 342.838 mo
556.67 342.569 555.794 342.453 554.894 342.51 cv
554.894 343.69 mo
555.782 343.622 556.647 343.738 557.5 344.052 cv
554.894 342.51 mo
555.279 342.545 555.677 342.603 556.074 342.685 cv
557.5 344.052 mo
557.536 342.838 li
567.016 348.88 mo
571.118 348.88 li
557.5 344.052 mo
557.676 344.124 557.862 344.206 558.038 344.288 cv
558.634 344.568 559.288 344.954 560.002 345.457 cv
559.873 354.515 li
557.149 354.515 li
566.595 355.684 mo
566.186 364.673 li
560.901 364.673 li
561.03 355.684 li
566.595 355.684 li
566.595 355.684 li
cp
567.74 350.798 mo
567.016 348.88 li
556.343 379.156 mo
557.477 378.946 558.705 378.549 560.002 377.964 cv
560.061 377.929 560.119 377.894 560.165 377.859 cv
560.481 377.567 li
560.505 377.554 560.528 377.532 560.539 377.52 cv
564.49 373.908 li
565.986 372.68 566.853 371.325 567.085 369.839 cv
567.097 369.757 567.109 369.675 567.121 369.595 cv
567.133 369.583 567.133 369.571 567.133 369.559 cv
567.974 351.3 li
567.985 351.219 567.974 351.137 567.939 351.067 cv
567.903 350.985 567.868 350.926 567.81 350.869 cv
567.787 350.844 567.764 350.821 567.74 350.798 cv
561.159 346.309 mo
561.042 354.515 li
566.652 354.515 li
566.793 351.487 li
564.677 349.302 562.795 347.572 561.159 346.309 cv
561.159 346.309 li
cp
567.74 350.798 mo
565.134 348.098 562.877 346.064 560.995 344.719 cv
560.96 344.685 560.913 344.661 560.867 344.637 cv
560.025 344.03 559.254 343.563 558.541 343.235 cv
558.201 343.083 557.875 342.943 557.536 342.838 cv
571.118 348.88 mo
575.21 348.88 li
467.283 348.88 mo
458.106 348.88 li
448.86 346.25 mo
440.911 343.984 li
440.911 343.984 mo
440.911 341.4 li
458.106 348.88 mo
448.86 346.25 li
483.788 348.88 mo
475.535 348.88 li
475.535 348.88 mo
467.283 348.88 li
501.321 348.88 mo
492.612 348.88 li
492.612 348.88 mo
483.788 348.88 li
458.106 297.167 mo
467.283 297.554 li
458.106 339.658 mo
467.283 339.658 li
467.283 297.554 mo
467.283 290.61 li
483.788 299.938 mo
475.535 298.747 li
475.535 339.658 mo
483.788 339.658 li
475.535 339.658 mo
475.535 298.747 li
483.788 339.658 mo
483.788 299.938 li
467.283 339.658 mo
467.283 297.554 li
492.612 339.658 mo
492.625 301.211 li
501.321 339.658 mo
501.321 302.462 li
492.612 339.658 mo
501.321 339.658 li
483.788 339.658 mo
492.612 339.658 li
467.283 339.658 mo
475.535 339.658 li
475.535 298.746 mo
467.283 297.554 li
501.321 302.462 mo
492.625 301.211 li
492.625 301.211 mo
483.788 299.938 li
440.911 331.803 mo
448.86 333.673 li
440.911 331.803 mo
440.911 296.49 li
448.86 333.673 mo
448.86 296.958 li
432.495 329.828 mo
432.495 296.151 li
458.106 297.167 mo
458.106 339.658 li
440.911 296.49 mo
458.106 297.167 li
449.34 339.658 mo
458.106 339.658 li
432.495 329.828 mo
440.911 331.803 li
432.495 338.887 mo
432.495 329.828 li
432.495 296.151 mo
440.911 296.49 li
458.106 296.969 mo
458.106 297.167 li
540.994 264.928 mo
540.177 264.928 li
540.994 271.72 mo
540.177 271.72 li
545.32 278.722 mo
535.979 278.722 li
535.501 302.38 mo
542.748 303.631 li
542.748 308.424 mo
534.554 307.245 li
534.554 339.658 mo
542.748 339.658 li
574.263 302.38 mo
574.006 289.885 li
535.501 302.38 mo
535.759 289.885 li
528.008 293.17 mo
528.008 297.355 li
560.938 318.372 mo
558.342 318.372 li
560.938 319.892 mo
558.295 319.892 li
560.938 327.023 mo
558.062 327.023 li
560.938 328.542 mo
558.003 328.542 li
560.938 334.854 mo
557.805 334.854 li
560.938 336.374 mo
557.746 336.374 li
560.938 312.516 mo
560.938 318.372 li
558.342 318.372 mo
558.529 312.516 li
560.938 312.516 li
548.827 318.372 mo
548.827 311.113 li
542.748 339.658 mo
542.748 308.424 li
575.21 339.658 mo
575.21 307.245 li
567.016 339.658 mo
567.016 308.424 li
560.938 328.542 mo
560.938 334.854 li
575.21 339.658 mo
567.016 339.658 li
560.938 336.374 mo
560.938 339.658 li
563.392 339.658 li
560.938 334.854 mo
560.938 336.374 li
563.392 339.658 mo
567.016 339.658 li
560.938 318.372 mo
560.938 319.892 li
560.938 327.023 mo
560.938 328.542 li
560.938 319.892 mo
560.938 327.023 li
558.342 318.372 mo
548.827 318.372 li
558.295 319.892 mo
548.827 319.892 li
558.062 327.023 mo
548.827 327.023 li
558.003 328.542 mo
548.827 328.542 li
557.746 336.374 mo
548.827 336.374 li
548.827 334.854 mo
548.827 328.542 li
557.805 334.854 mo
548.827 334.854 li
557.805 334.854 mo
558.003 328.542 li
557.746 336.374 mo
557.805 334.854 li
542.748 339.658 mo
546.372 339.658 li
548.827 336.374 mo
548.827 334.854 li
546.372 339.658 mo
548.827 339.658 li
548.827 336.374 li
548.827 319.892 mo
548.827 318.372 li
548.827 327.023 mo
548.827 319.892 li
548.827 328.542 mo
548.827 327.023 li
558.295 319.892 mo
558.342 318.372 li
558.003 328.542 mo
558.062 327.023 li
558.062 327.023 mo
558.295 319.892 li
546.781 308.6 mo
546.781 294.339 li
544.806 306.168 mo
544.806 294.339 li
542.748 303.631 mo
544.806 306.168 li
542.748 308.424 mo
542.748 303.631 li
548.534 310.751 mo
548.827 311.113 li
544.806 306.168 mo
546.781 308.6 li
546.781 308.6 mo
548.534 310.751 li
544.806 294.339 mo
546.781 294.339 li
542.83 294.339 mo
544.806 294.339 li
542.83 294.339 mo
542.771 295.566 542.748 296.793 542.748 298.021 cv
542.748 303.631 li
546.781 294.339 mo
547.833 294.339 li
548.301 294.339 548.534 294.573 548.534 295.041 cv
548.534 310.751 li
564.958 306.168 mo
564.958 294.339 li
562.983 308.6 mo
562.983 294.339 li
567.016 303.631 mo
574.263 302.38 li
567.016 308.424 mo
575.21 307.245 li
567.016 308.424 mo
567.016 303.631 li
567.016 303.631 mo
564.958 306.168 li
562.983 308.6 mo
561.229 310.751 li
560.938 311.113 mo
560.938 312.516 li
560.938 311.113 mo
561.229 310.751 li
564.958 306.168 mo
562.983 308.6 li
562.983 294.339 mo
564.958 294.339 li
561.229 310.751 mo
561.229 295.041 li
561.229 294.573 561.464 294.339 561.931 294.339 cv
562.983 294.339 li
548.827 311.113 mo
549.143 310.366 549.341 309.231 549.411 307.723 cv
549.411 294.737 li
549.411 294.42 549.563 294.269 549.879 294.269 cv
559.885 294.269 li
560.201 294.269 560.353 294.42 560.353 294.737 cv
560.353 307.723 li
560.423 309.231 560.621 310.366 560.938 311.113 cv
566.934 294.339 mo
566.992 295.566 567.016 296.793 567.016 298.021 cv
567.016 303.631 li
564.958 294.339 mo
566.934 294.339 li
574.263 302.38 mo
576.297 302.031 li
576.297 302.031 mo
575.501 301.598 575.14 300.487 575.198 298.723 cv
575.198 295.671 li
575.42 293.907 576.297 293.064 577.828 293.17 cv
581.756 293.17 li
534.554 339.658 mo
534.554 307.245 li
525.846 305.994 mo
517.968 304.859 li
517.955 339.658 mo
525.846 339.658 li
505.775 297.203 mo
526.733 300.849 li
509.68 339.658 mo
509.68 303.667 li
517.955 339.658 mo
517.968 304.859 li
525.846 339.658 mo
525.846 305.994 li
525.846 339.658 mo
534.554 339.658 li
509.68 339.658 mo
517.955 339.658 li
517.968 304.859 mo
509.68 303.667 li
526.733 300.849 mo
533.467 302.031 li
534.554 307.245 mo
525.846 305.994 li
528.008 297.355 mo
527.88 297.285 527.728 297.238 527.553 297.203 cv
505.775 297.203 li
526.733 300.849 mo
528.102 300.815 528.804 300.265 528.826 299.19 cv
528.838 298.254 528.568 297.647 528.008 297.355 cv
533.467 302.031 mo
535.501 302.38 li
540.177 271.72 mo
540.177 264.928 li
537.021 271.72 mo
537.021 264.928 li
528.008 293.17 mo
507.389 293.17 li
535.759 289.885 mo
535.979 278.722 li
533.467 302.031 mo
534.263 301.598 534.625 300.487 534.565 298.723 cv
534.565 295.671 li
534.344 293.907 533.467 293.064 531.936 293.17 cv
528.008 293.17 li
535.759 289.885 mo
532.988 288.798 529.084 288.284 524.046 288.318 cv
521.275 288.178 519.09 287.875 517.5 287.395 cv
537.021 271.72 mo
536.903 271.72 li
536.6 271.732 536.343 271.697 536.133 271.626 cv
535.979 278.722 mo
536.133 271.626 li
540.177 271.72 mo
537.021 271.72 li
516.119 276.349 mo
510.592 276.349 li
517.5 287.395 mo
515.852 286.905 514.834 286.238 514.461 285.385 cv
510.592 276.349 mo
509.785 277.132 509.352 278.266 509.317 279.774 cv
509.317 289.254 li
509.002 291.569 508.358 292.877 507.389 293.17 cv
517.5 287.395 mo
517.5 279.668 li
517.302 278.208 516.845 277.109 516.119 276.349 cv
516.119 276.349 mo
515.595 275.799 514.939 275.437 514.133 275.262 cv
513.899 275.215 513.654 275.18 513.408 275.157 cv
512.205 275.297 511.258 275.695 510.592 276.349 cv
535.419 264.928 mo
535.513 262.672 535.641 260.592 535.816 258.698 cv
536.133 271.626 mo
535.524 271.451 535.232 271.007 535.268 270.318 cv
535.303 268.505 535.35 266.798 535.408 265.174 cv
535.419 265.092 535.419 265.01 535.419 264.928 cv
537.021 264.928 mo
535.419 264.928 li
540.177 264.928 mo
537.021 264.928 li
535.816 258.698 mo
535.816 258.675 535.816 258.651 535.816 258.628 cv
535.921 257.459 536.039 256.361 536.167 255.343 cv
536.226 254.794 536.297 254.256 536.378 253.753 cv
536.378 253.753 mo
536.354 253.742 536.331 253.731 536.319 253.731 cv
536.097 253.696 535.875 253.917 535.653 254.385 cv
535.524 254.666 535.408 254.981 535.314 255.343 cv
535.255 255.589 535.209 255.846 535.174 256.115 cv
535.092 256.804 535.092 257.401 535.186 257.904 cv
535.244 258.208 535.314 258.429 535.419 258.57 cv
535.431 258.593 535.454 258.617 535.478 258.628 cv
535.536 258.675 535.595 258.698 535.665 258.71 cv
535.712 258.722 535.759 258.71 535.816 258.698 cv
572.742 264.928 mo
572.742 271.72 li
569.587 271.72 mo
569.587 264.928 li
568.769 271.72 mo
568.769 264.928 li
555.794 264.928 mo
562.339 264.928 li
555.794 271.72 mo
562.339 271.72 li
546.139 271.72 mo
546.139 264.928 li
540.994 271.72 mo
540.994 264.928 li
563.626 264.928 mo
563.626 271.72 li
562.339 264.928 mo
562.339 271.72 li
555.794 271.72 mo
555.794 264.928 li
553.97 271.72 mo
553.97 264.928 li
547.424 271.72 mo
547.424 264.928 li
545.32 278.722 mo
564.443 278.722 li
568.769 271.72 mo
569.587 271.72 li
573.783 278.722 mo
574.006 289.885 li
564.444 278.722 mo
573.783 278.722 li
566.863 292.924 mo
566.841 292.386 566.805 291.849 566.771 291.323 cv
566.934 294.339 mo
566.934 294.21 566.934 294.071 566.923 293.93 cv
566.91 293.59 566.887 293.264 566.863 292.924 cv
562.339 271.72 mo
563.626 271.72 li
566.771 291.323 mo
566.734 290.82 566.688 290.33 566.641 289.827 cv
566.232 286.004 565.647 282.767 564.889 280.136 cv
564.877 280.066 564.853 279.997 564.829 279.938 cv
564.701 279.517 564.572 279.108 564.444 278.722 cv
563.626 271.72 mo
568.769 271.72 li
569.587 271.72 mo
572.742 271.72 li
573.631 271.626 mo
573.783 278.722 li
572.742 271.72 mo
572.86 271.72 li
573.164 271.732 573.421 271.697 573.631 271.626 cv
547.424 271.72 mo
553.97 271.72 li
550.872 292.339 mo
550.592 293.006 550.907 293.298 551.808 293.216 cv
557.956 293.216 li
558.855 293.298 559.172 293.006 558.892 292.339 cv
557.255 290.47 li
552.51 290.47 li
550.872 292.339 li
550.872 292.339 li
cp
566.863 292.924 mo
561.696 292.924 li
560.926 292.866 560.295 292.574 559.814 292.071 cv
558.365 290.458 li
558.167 290.143 558.051 289.792 558.015 289.395 cv
558.015 283.631 li
558.026 283.596 558.026 283.561 558.026 283.527 cv
558.131 283.059 558.471 282.918 559.056 283.094 cv
561.884 284.602 564.455 287.337 566.771 291.323 cv
556.378 282.638 mo
553.385 282.638 li
552.918 282.638 552.685 282.872 552.685 283.339 cv
552.685 288.892 li
552.685 289.359 552.918 289.593 553.385 289.593 cv
556.378 289.593 li
556.846 289.593 557.08 289.359 557.08 288.892 cv
557.08 283.339 li
557.08 282.872 556.846 282.638 556.378 282.638 cv
556.378 282.638 li
cp
@
84.0059 155.447 mo
84.0059 154.629 li
77.6816 140.742 mo
77.6934 140.73 77.6934 140.708 77.7051 140.695 cv
77.7754 140.555 77.8106 140.403 77.8106 140.251 cv
77.8106 140.099 77.7754 139.947 77.7051 139.807 cv
77.5879 139.574 77.3779 139.363 77.0732 139.176 cv
76.583 138.883 75.9863 138.732 75.2969 138.732 cv
74.9815 138.732 74.6895 138.767 74.4199 138.826 cv
74.0928 138.895 73.7891 139.012 73.5205 139.176 cv
73.0293 139.468 72.7832 139.831 72.7832 140.251 cv
72.7832 140.427 72.8301 140.589 72.9121 140.742 cv
73.0293 140.963 73.2275 141.152 73.5205 141.327 cv
73.7891 141.49 74.0928 141.608 74.4199 141.689 cv
74.6895 141.748 74.9815 141.77 75.2969 141.77 cv
75.9863 141.77 76.583 141.619 77.0732 141.327 cv
77.3662 141.152 77.5645 140.963 77.6816 140.742 cv
77.6816 140.742 li
cp
84.0059 141.654 mo
84.0059 139.831 li
84.0059 149.486 mo
84.0059 148.2 li
84.0059 148.2 mo
84.0059 141.654 li
90.7969 139.831 mo
90.7969 141.654 li
90.7969 148.2 mo
90.7969 149.486 li
90.7969 141.654 mo
90.7969 148.2 li
110.867 152.782 mo
111.206 143.722 li
107.512 159.655 mo
97.7988 159.644 li
120.452 153.845 mo
120.348 154.326 120.254 154.839 120.172 155.365 cv
115.566 155.973 112.445 155.587 110.82 154.208 cv
110.867 152.782 li
107.512 159.655 mo
107.91 155.961 li
108.063 153.87 109.044 152.817 110.867 152.782 cv
90.5518 121.654 mo
97.7988 118.124 li
97.7988 128.352 mo
90.7969 128.48 li
111.791 128.083 mo
112.457 110.467 li
100.066 117.012 mo
108.903 106.306 li
97.7988 128.352 mo
97.7988 118.124 li
109.301 128.129 mo
100.066 117.012 li
109.301 128.129 mo
97.7988 128.352 li
111.791 128.083 mo
109.301 128.129 li
97.7988 118.124 mo
100.066 117.012 li
90.7969 122.881 mo
84.0059 122.881 li
90.7969 126.038 mo
84.0059 126.038 li
90.7969 126.855 mo
84.0059 126.855 li
90.7969 131.999 mo
84.0059 131.999 li
90.7969 133.285 mo
84.0059 133.285 li
84.0059 131.999 mo
84.0059 126.855 li
90.7969 126.855 mo
90.7969 128.48 li
90.7969 128.48 mo
90.7969 131.999 li
90.7969 131.999 mo
90.7969 133.285 li
84.0059 133.285 mo
84.0059 131.999 li
75.3906 130.712 mo
75.0518 130.749 74.7246 130.749 74.4199 130.712 cv
74.1279 130.678 73.8477 130.608 73.5899 130.526 cv
73.0879 130.338 72.8184 130.093 72.7959 129.778 cv
72.7725 129.462 72.9941 129.181 73.4736 128.924 cv
73.7539 128.772 74.0693 128.644 74.4199 128.562 cv
74.666 128.503 74.9229 128.468 75.2031 128.445 cv
75.8936 128.386 76.501 128.457 77.0156 128.644 cv
77.3535 128.76 77.5762 128.913 77.7051 129.088 cv
77.7627 129.181 77.7979 129.275 77.8106 129.38 cv
77.8213 129.509 77.7871 129.637 77.7051 129.765 cv
77.5996 129.929 77.4004 130.093 77.1318 130.246 cv
76.665 130.502 76.0801 130.654 75.3906 130.712 cv
75.3906 130.712 li
cp
77.7754 121.676 mo
79.669 121.501 81.749 121.374 84.0059 121.28 cv
84.0059 122.881 mo
84.0059 121.28 li
84.0059 126.038 mo
84.0059 122.881 li
84.0059 126.855 mo
84.0059 126.038 li
77.7754 121.676 mo
77.751 121.676 77.7285 121.676 77.7051 121.676 cv
76.5361 121.782 75.4375 121.899 74.4199 122.028 cv
73.8711 122.086 73.333 122.157 72.8301 122.239 cv
72.8301 122.239 mo
72.8184 122.214 72.8066 122.191 72.8066 122.18 cv
72.7725 121.958 72.9941 121.736 73.4609 121.513 cv
73.7422 121.384 74.0576 121.268 74.4199 121.174 cv
74.666 121.116 74.9229 121.069 75.1914 121.034 cv
75.8809 120.952 76.4775 120.952 76.9805 121.045 cv
77.2842 121.104 77.5059 121.174 77.6465 121.28 cv
77.6699 121.291 77.6934 121.314 77.7051 121.337 cv
77.751 121.396 77.7754 121.455 77.7871 121.525 cv
77.7979 121.572 77.7871 121.619 77.7754 121.676 cv
84.0059 121.28 mo
84.0879 121.28 84.169 121.28 84.251 121.268 cv
85.876 121.209 87.582 121.164 89.3945 121.127 cv
89.9434 121.104 90.3291 121.28 90.5518 121.654 cv
90.7969 122.881 mo
90.7969 126.038 li
90.7969 126.038 mo
90.7969 126.855 li
90.5518 121.654 mo
90.6094 121.758 90.669 121.864 90.7031 121.993 cv
90.7734 122.203 90.8086 122.46 90.7969 122.763 cv
90.7969 122.881 li
109.418 104.844 mo
109.909 104.224 110.587 103.7 111.451 103.255 cv
112.048 108.958 mo
112.457 110.467 li
108.903 106.306 mo
108.938 105.874 109.114 105.381 109.418 104.844 cv
108.903 106.306 mo
108.868 106.832 109.044 107.288 109.418 107.65 cv
110.154 108.152 111.031 108.596 112.048 108.958 cv
139.4 125.429 mo
139.4 111.905 li
146.94 112.278 mo
146.94 117.106 li
146.94 117.106 mo
148.109 115.809 li
129.827 104.645 mo
130.868 104.75 131.908 104.857 132.948 104.985 cv
144.346 106.282 155.111 108.152 165.223 110.619 cv
111.451 103.255 mo
114.164 101.864 118.711 101.267 125.093 101.455 cv
127.793 101.7 130.412 101.993 132.948 102.308 cv
145.515 103.862 156.233 106.236 165.083 109.415 cv
127.174 138.942 mo
132.317 133.261 li
127.174 133.367 mo
128.893 133.331 130.599 133.296 132.317 133.261 cv
116.992 117.386 mo
117.25 110.467 li
138.231 111.847 mo
138.231 118.906 li
128.343 118.906 li
128.343 111.157 li
139.4 125.429 mo
146.94 117.106 li
132.317 133.261 mo
137.904 127.077 li
136.584 133.166 mo
142.077 127.077 li
136.584 133.166 mo
140.512 133.086 144.439 133.016 148.355 132.957 cv
166.707 132.7 mo
166.707 129.416 li
166.707 128.632 166.321 128.247 165.538 128.247 cv
149.523 128.247 li
148.74 128.247 148.355 128.632 148.355 129.416 cv
148.355 132.957 li
138.231 126.727 mo
139.4 125.429 li
137.904 127.077 mo
138.231 126.727 li
146.94 127.077 mo
142.077 127.077 li
142.077 127.077 mo
146.94 121.688 li
146.94 121.688 mo
146.94 127.077 li
148.109 127.077 mo
148.109 120.391 li
146.94 121.688 mo
148.109 120.391 li
148.109 127.077 mo
146.94 127.077 li
127.174 111.063 mo
127.174 117.386 li
121.435 117.386 li
121.435 110.56 li
127.174 127.79 mo
127.174 133.367 li
116.595 127.99 mo
116.782 123.056 li
127.174 127.79 mo
116.595 127.99 li
127.174 133.367 mo
127.174 138.942 li
116.945 118.555 mo
116.992 117.386 li
116.782 123.056 mo
116.817 121.888 li
116.817 121.888 mo
116.945 118.555 li
120.266 110.444 mo
120.266 117.386 li
116.992 117.386 li
137.904 127.077 mo
128.343 127.113 li
128.343 120.075 li
138.231 120.075 li
138.231 126.727 li
116.945 118.555 mo
127.174 118.555 li
127.174 121.888 li
116.817 121.888 li
116.782 123.056 mo
127.174 123.056 li
127.174 127.79 li
121.435 110.56 mo
123.34 110.736 125.257 110.899 127.174 111.063 cv
127.174 111.063 mo
127.56 111.098 127.957 111.123 128.343 111.157 cv
112.048 108.958 mo
111.756 107.895 li
114.012 107.124 116.279 107.159 118.536 108.012 cv
117.413 110.152 li
117.413 110.152 mo
117.25 110.467 li
120.266 110.444 mo
120.651 110.478 121.049 110.526 121.435 110.56 cv
117.413 110.152 mo
117.635 110.174 117.846 110.198 118.067 110.221 cv
118.805 110.303 119.529 110.374 120.266 110.444 cv
139.4 111.905 mo
141.902 112.045 144.415 112.173 146.94 112.279 cv
150.459 113.214 mo
150.201 112.886 150.12 112.618 150.214 112.396 cv
148.109 115.809 mo
150.459 113.214 li
148.109 115.809 mo
148.109 112.326 li
148.109 112.326 mo
148.811 112.348 149.512 112.372 150.214 112.396 cv
146.94 112.278 mo
147.326 112.29 147.724 112.314 148.109 112.326 cv
138.231 111.847 mo
138.618 111.858 139.016 111.881 139.4 111.905 cv
128.343 111.157 mo
129.874 111.273 131.405 111.39 132.948 111.496 cv
134.701 111.625 136.467 111.741 138.231 111.847 cv
509.329 485.821 mo
503.905 482.291 501.088 477.334 500.89 470.953 cv
500.877 470.554 500.89 470.158 500.901 469.772 cv
534.099 445.154 mo
546.326 440.583 li
534.099 463.915 mo
542.631 463.915 li
542.631 492.752 mo
539.674 492.484 536.822 492.192 534.099 491.852 cv
542.631 492.752 mo
542.631 463.915 li
534.099 491.852 mo
534.099 463.915 li
560.235 468.346 mo
556.46 490.45 li
556.46 490.45 mo
557.431 483.588 558.015 475.767 558.213 467.001 cv
553.303 490.45 mo
552.334 483.588 551.749 475.767 551.55 467.001 cv
553.303 490.45 mo
549.528 468.346 li
567.133 492.752 mo
567.133 463.915 li
575.665 491.852 mo
575.665 463.915 li
525.718 490.684 mo
525.718 463.915 li
517.172 489.083 mo
517.172 463.915 li
509.329 485.821 mo
509.329 469.772 li
567.133 492.752 mo
563.567 493.069 559.838 493.337 555.945 493.559 cv
553.303 490.45 mo
553.818 493.559 li
556.46 490.45 mo
555.945 493.559 li
553.818 493.559 mo
549.926 493.337 546.196 493.069 542.631 492.752 cv
554.858 497.23 mo
554.672 497.241 554.496 497.054 554.332 496.668 cv
553.818 493.559 li
555.945 493.559 mo
555.431 496.668 li
555.232 497.031 555.034 497.218 554.858 497.23 cv
575.665 491.852 mo
572.942 492.192 570.09 492.484 567.133 492.752 cv
525.718 490.684 mo
522.701 490.192 519.849 489.656 517.172 489.083 cv
517.172 489.083 mo
516.295 488.883 515.431 488.685 514.577 488.487 cv
512.626 487.714 510.872 486.827 509.329 485.821 cv
534.099 491.852 mo
531.177 491.501 528.382 491.117 525.718 490.684 cv
534.099 463.915 mo
534.099 445.154 li
517.172 451.466 mo
525.718 448.275 li
517.172 463.915 mo
525.718 463.915 li
525.718 463.915 mo
525.718 448.275 li
517.172 463.915 mo
517.172 451.466 li
509.329 463.915 mo
509.329 455.242 li
525.718 463.915 mo
534.099 463.915 li
509.329 469.772 mo
509.329 463.915 li
509.329 463.915 mo
517.172 463.915 li
509.329 455.242 mo
511.07 454.083 513.093 453.044 515.384 452.132 cv
517.172 451.466 li
525.718 448.275 mo
534.099 445.154 li
575.665 463.915 mo
575.665 445.154 li
567.133 463.915 mo
567.133 443.108 li
558.213 467.001 mo
560.235 468.346 li
542.631 463.915 mo
542.631 443.108 li
567.133 463.915 mo
575.665 463.915 li
560.235 468.346 mo
560.457 467.095 li
560.587 466.031 560.703 464.979 560.832 463.915 cv
560.832 463.915 mo
567.133 463.915 li
551.55 467.001 mo
549.528 468.346 li
549.528 468.346 mo
549.307 467.095 li
549.177 466.031 549.061 464.979 548.932 463.915 cv
542.631 463.915 mo
548.932 463.915 li
554.858 427.281 mo
555.935 433.944 556.752 440.397 557.313 446.626 cv
557.921 453.429 558.225 459.976 558.237 466.264 cv
558.225 466.51 558.225 466.755 558.213 467.001 cv
551.55 467.001 mo
551.539 466.755 551.539 466.51 551.527 466.264 cv
551.539 459.976 551.843 453.429 552.438 446.626 cv
552.988 440.397 553.795 433.944 554.858 427.281 cv
554.554 464.991 mo
551.55 467.001 li
555.21 464.991 mo
558.213 467.001 li
548.932 463.915 mo
548.254 458.141 547.6 452.377 546.979 446.626 cv
546.757 444.605 546.535 442.593 546.326 440.583 cv
563.438 440.583 mo
563.216 442.593 563.006 444.605 562.783 446.626 cv
562.164 452.377 561.51 458.141 560.832 463.915 cv
575.665 445.154 mo
563.438 440.583 li
342.406 104.727 mo
463.986 108.023 li
424.547 295.847 mo
432.495 296.151 li
424.547 336.514 mo
432.495 338.887 li
424.547 327.969 mo
432.495 329.828 li
440.911 343.984 mo
416.598 337.051 li
440.911 341.4 mo
440.911 331.803 li
432.495 338.887 mo
440.911 341.4 li
448.86 346.25 mo
448.86 333.673 li
509.68 303.667 mo
501.321 302.462 li
501.321 339.658 mo
509.68 339.658 li
482.607 293.17 mo
507.389 293.17 li
482.607 293.17 mo
505.775 297.203 li
509.68 348.88 mo
501.321 348.88 li
557.536 342.838 mo
557.746 336.374 li
542.748 348.88 mo
542.748 339.658 li
546.372 339.658 mo
542.748 348.88 li
534.554 348.88 mo
534.554 339.658 li
525.846 348.88 mo
525.846 339.658 li
517.955 348.88 mo
517.955 339.658 li
509.68 348.88 mo
509.68 339.658 li
501.321 348.88 mo
501.321 339.658 li
492.612 348.88 mo
492.612 339.658 li
483.788 348.88 mo
483.788 339.658 li
475.535 348.88 mo
475.535 339.658 li
467.283 348.88 mo
467.283 339.658 li
458.106 339.658 mo
458.106 348.88 li
575.21 348.88 mo
575.21 339.658 li
567.016 348.88 mo
563.392 339.658 li
567.016 339.658 mo
567.016 348.88 li
542.748 348.88 mo
538.646 348.88 li
554.858 424.639 mo
556.343 379.156 li
554.858 379.32 mo
554.858 424.639 li
554.858 424.639 mo
554.858 427.281 li
525.846 348.88 mo
517.955 348.88 li
546.326 440.583 mo
545.636 434.154 544.993 427.738 544.374 421.342 cv
544.221 419.777 544.081 418.209 543.93 416.656 cv
543.157 408.508 542.433 400.395 541.767 392.307 cv
541.147 384.791 540.563 377.31 540.036 369.839 cv
539.534 362.838 539.066 355.848 538.646 348.88 cv
517.955 348.88 mo
509.68 348.88 li
534.554 348.88 mo
525.846 348.88 li
538.646 348.88 mo
534.554 348.88 li
563.438 440.583 mo
564.128 434.154 564.771 427.738 565.39 421.342 cv
565.543 419.777 565.694 418.209 565.846 416.656 cv
566.606 408.508 567.331 400.395 567.998 392.307 cv
568.616 384.791 569.201 377.31 569.739 369.839 cv
570.242 362.838 570.698 355.848 571.118 348.88 cv
557.114 355.684 mo
559.862 355.684 li
559.732 364.673 li
556.822 364.673 li
556.822 364.673 mo
557.114 355.684 li
556.775 365.842 mo
559.721 365.842 li
559.558 376.83 li
559.44 376.936 li
558.354 377.415 557.337 377.753 556.39 377.941 cv
563.696 373.042 mo
560.739 375.743 li
560.89 365.842 li
566.127 365.842 li
565.964 369.501 li
565.952 369.618 565.928 369.735 565.905 369.839 cv
565.647 370.997 564.923 372.049 563.72 373.019 cv
563.708 373.032 563.708 373.032 563.696 373.042 cv
563.696 373.042 li
cp
556.39 377.941 mo
556.775 365.842 li
553.689 379.274 mo
554.075 379.308 554.461 379.332 554.858 379.32 cv
554.858 378.117 mo
554.449 378.127 554.063 378.105 553.689 378.057 cv
554.87 378.117 mo
555.279 378.127 555.688 378.117 556.074 378.057 cv
554.858 378.117 mo
554.87 378.117 li
554.858 379.32 mo
554.87 379.32 li
556.39 377.941 mo
555.863 378.045 555.35 378.105 554.87 378.117 cv
556.343 379.156 mo
556.39 377.941 li
554.87 379.32 mo
555.35 379.296 555.841 379.238 556.343 379.156 cv
556.074 379.274 mo
555.688 379.308 555.279 379.332 554.87 379.32 cv
@
271.806 153.413 mo
271.771 153.577 271.794 153.741 271.876 153.893 cv
271.898 153.951 271.922 153.998 271.946 154.045 cv
271.432 153.063 mo
271.946 154.045 li
271.806 153.413 mo
273.325 153.144 li
271.946 154.045 mo
272.028 154.196 li
272.32 154.77 272.635 155.284 272.985 155.763 cv
271.432 153.063 mo
271.536 153.214 271.664 153.331 271.806 153.413 cv
270.075 149.954 mo
271.268 152.747 li
271.314 152.864 271.372 152.97 271.432 153.063 cv
274.12 154.524 mo
273.84 154.115 273.582 153.67 273.348 153.191 cv
273.337 153.18 273.337 153.157 273.325 153.144 cv
273.325 153.144 mo
274.085 152.829 li
274.799 152.524 275.009 152.011 274.716 151.297 cv
273.897 149.38 li
275.079 141.127 mo
273.688 141.164 272.309 141.209 270.939 141.256 cv
269.105 141.338 267.504 141.42 266.147 141.526 cv
262.489 141.794 260.561 142.145 260.338 142.589 cv
270.075 149.954 mo
271.35 149.766 272.623 149.58 273.897 149.38 cv
309.62 142.589 mo
309.397 142.145 307.47 141.794 303.812 141.526 cv
302.455 141.42 300.853 141.338 299.019 141.256 cv
295.208 141.127 291.28 141.023 287.236 140.963 cv
287.236 140.963 mo
286.488 140.953 285.739 140.941 284.979 140.929 cv
281.601 140.963 278.305 141.034 275.079 141.127 cv
254.681 152.069 mo
254.681 149.872 li
254.681 149.872 mo
254.681 146.119 li
260.338 142.589 mo
260.326 142.601 260.314 142.613 260.314 142.624 cv
260.279 142.998 262.231 143.348 266.147 143.688 cv
268.019 143.84 270.333 143.992 273.104 144.144 cv
275.476 144.272 277.848 144.377 280.233 144.471 cv
283.857 144.599 287.479 144.577 291.104 144.401 cv
292.285 144.354 293.489 144.307 294.716 144.249 cv
295.021 144.237 295.324 144.214 295.64 144.203 cv
298.948 144.039 301.672 143.863 303.812 143.688 cv
307.726 143.348 309.678 142.998 309.644 142.624 cv
309.644 142.613 309.633 142.601 309.62 142.589 cv
243.143 118.181 mo
247.036 117.468 250.215 115.529 252.682 112.36 cv
254.681 132.793 mo
254.681 127.65 li
254.681 139.339 mo
254.681 132.793 li
254.681 122.975 mo
254.681 120.952 li
254.681 127.65 mo
254.681 122.975 li
239.181 118.498 mo
239.894 118.603 240.595 118.719 241.309 118.825 cv
241.741 118.883 242.161 118.954 242.594 119.024 cv
246.686 119.643 250.718 120.286 254.681 120.952 cv
239.181 118.498 mo
240.572 118.521 241.893 118.416 243.143 118.181 cv
257.111 105.089 mo
260.992 98.6841 li
252.682 112.36 mo
252.751 112.278 252.821 112.185 252.881 112.103 cv
257.111 105.089 li
283.671 105.089 mo
282.139 98.6841 li
284.792 137.247 mo
283.39 126.224 li
275.079 141.127 mo
274.938 138.977 275.64 137.913 277.193 137.949 cv
284.792 137.247 li
286.813 118.193 mo
285.412 112.36 li
282.139 98.6841 mo
302.338 98.6841 li
289.024 127.405 mo
291 127.814 292.952 127.896 294.856 127.65 cv
312.566 124.95 li
283.39 126.224 mo
284.968 126.539 286.522 126.855 288.077 127.183 cv
288.393 127.265 288.707 127.347 289.024 127.405 cv
289.024 127.405 mo
286.813 118.193 li
285.412 112.36 mo
283.671 105.089 li
584.047 463.915 mo
584.047 490.684 li
592.592 463.915 mo
592.592 489.083 li
600.436 469.772 mo
600.436 485.821 li
280.362 91.2847 mo
284.195 84.5044 li
284.195 84.5044 mo
281.857 76.4634 li
269.561 84.5044 mo
284.195 84.5044 li
280.362 91.2847 mo
298.585 91.2847 li
284.195 84.5044 mo
294.692 84.5044 li
298.585 91.2847 mo
297.604 89.4614 296.599 87.6733 295.558 85.9077 cv
295.277 85.4292 294.985 84.9604 294.692 84.5044 cv
269.561 84.5044 mo
271.466 81.3481 li
273.804 78.3091 277.265 76.6851 281.857 76.4634 cv
265.458 91.2847 mo
280.362 91.2847 li
265.458 91.2847 mo
269.561 84.5044 li
294.692 84.5044 mo
291.712 79.9809 287.866 77.2925 283.167 76.439 cv
282.724 76.4272 282.291 76.439 281.857 76.4634 cv
592.592 489.083 mo
589.915 489.656 587.063 490.192 584.047 490.684 cv
600.436 485.821 mo
598.892 486.827 597.139 487.714 595.187 488.487 cv
594.333 488.685 593.469 488.883 592.592 489.083 cv
600.436 463.915 mo
592.592 463.915 li
600.436 463.915 mo
600.436 455.242 li
592.592 463.915 mo
592.592 451.466 li
584.047 463.915 mo
584.047 448.275 li
600.436 455.242 mo
605.87 458.854 608.677 463.705 608.863 469.772 cv
600.436 469.772 mo
600.436 463.915 li
608.863 469.772 mo
600.436 469.772 li
608.863 469.772 mo
608.875 470.158 608.887 470.554 608.875 470.953 cv
608.677 477.334 605.858 482.291 600.436 485.821 cv
592.592 463.915 mo
584.047 463.915 li
584.047 448.275 mo
592.592 451.466 li
592.592 451.466 mo
594.38 452.132 li
596.672 453.044 598.693 454.083 600.436 455.242 cv
92.9707 189.241 mo
93.2627 185.091 93.0176 182.029 92.2461 180.042 cv
94.0225 190.27 mo
93.6377 189.93 93.2871 189.591 92.9707 189.241 cv
102.065 192.818 mo
105.35 193.25 108.997 193.215 113.018 192.724 cv
96.209 191.416 mo
95.6953 191.229 95.1914 191.018 94.6895 190.795 cv
94.4561 190.621 94.2334 190.445 94.0225 190.27 cv
96.209 191.416 mo
96.4082 191.497 96.6182 191.567 96.8174 191.637 cv
98.4414 192.174 100.195 192.572 102.065 192.818 cv
113.018 192.724 mo
112.843 193.905 112.316 194.934 111.417 195.811 cv
110.317 196.886 108.997 197.413 107.466 197.388 cv
105.935 197.376 104.625 196.816 103.562 195.705 cv
102.755 194.875 102.252 193.905 102.065 192.818 cv
113.018 192.724 mo
114.854 192.491 116.771 192.164 118.758 191.753 cv
118.793 191.743 118.839 191.743 118.886 191.731 cv
118.886 191.731 mo
118.886 191.79 118.886 191.835 118.886 191.894 cv
118.874 195.027 117.752 197.693 115.531 199.89 cv
113.299 202.099 110.622 203.198 107.489 203.186 cv
104.356 203.175 101.691 202.052 99.4941 199.82 cv
97.2842 197.599 96.1973 194.922 96.209 191.79 cv
96.209 191.661 96.209 191.543 96.209 191.416 cv
121.143 191.216 mo
120.383 191.391 119.623 191.567 118.886 191.731 cv
65.0566 145.394 mo
65.0566 136.089 li
58.4297 144.109 mo
58.4297 137.375 li
59.458 137.375 mo
59.458 144.109 li
60.9541 145.372 mo
59.6094 148.48 58.9902 152.583 59.0957 157.668 cv
59.376 171.379 60.042 178.393 61.083 178.709 cv
62.3106 179.258 63.0928 173.647 63.4326 161.876 cv
63.3272 155.903 63.0225 150.923 62.4971 146.949 cv
61.2002 160.473 mo
60.8604 154.886 61.293 150.375 62.4971 146.949 cv
59.458 144.109 mo
59.7969 144.845 60.2998 145.265 60.9541 145.372 cv
65.0566 145.394 mo
65.0566 149.835 li
64.6709 154.115 65.8867 156.944 68.7275 158.323 cv
68.9385 158.427 69.1602 158.521 69.3818 158.603 cv
69.9316 158.732 70.5274 158.86 71.1475 158.978 cv
71.6846 159.072 72.2461 159.165 72.8301 159.247 cv
60.9541 145.372 mo
61.1065 145.394 61.2695 145.406 61.4453 145.394 cv
62.2627 145.394 li
62.2627 145.394 mo
65.0566 145.394 li
62.4971 146.949 mo
62.4854 146.937 62.4854 146.914 62.4854 146.891 cv
62.4151 146.376 62.3447 145.874 62.2627 145.394 cv
58.4297 144.109 mo
59.458 144.109 li
62.4971 134.536 mo
61.293 131.111 60.8604 126.598 61.2002 121.011 cv
60.9541 136.113 mo
61.1065 136.089 61.2695 136.078 61.4453 136.089 cv
62.2627 136.089 li
62.2627 136.089 mo
65.0566 136.089 li
62.2627 136.089 mo
62.3447 135.611 62.4151 135.108 62.4854 134.593 cv
62.4854 134.57 62.4854 134.547 62.4971 134.536 cv
58.4297 137.375 mo
58.5225 135.973 li
52.666 136.23 49.6621 137.739 49.5108 140.485 cv
49.499 140.579 49.499 140.671 49.499 140.765 cv
49.499 140.847 49.499 140.917 49.5108 141 cv
49.6738 143.747 52.6787 145.253 58.5225 145.511 cv
58.4297 144.109 li
58.4297 137.375 mo
59.458 137.375 li
59.458 137.375 mo
59.7969 136.639 60.2998 136.219 60.9541 136.113 cv
65.0566 136.089 mo
65.0566 131.647 li
64.6357 127.053 66.0742 124.132 69.3818 122.881 cv
69.9316 122.752 70.5274 122.635 71.1475 122.519 cv
71.6738 122.413 72.2344 122.32 72.8301 122.239 cv
62.4971 134.536 mo
63.0225 130.56 63.3272 125.582 63.4326 119.608 cv
63.3154 115.575 63.1514 112.279 62.9297 109.696 cv
62.8018 108.164 62.6494 106.878 62.4854 105.862 cv
62.1113 103.558 61.6436 102.531 61.083 102.775 cv
60.6973 102.892 60.3692 103.92 60.0889 105.862 cv
59.8203 107.744 59.5869 110.467 59.4111 114.043 cv
59.3291 115.809 59.2471 117.773 59.1895 119.958 cv
59.1543 121.174 59.1309 122.46 59.0957 123.816 cv
58.9902 128.901 59.6094 133.004 60.9541 136.113 cv
500.901 469.772 mo
509.329 469.772 li
500.901 469.772 mo
501.088 463.705 503.894 458.854 509.329 455.242 cv
154.784 127.077 mo
148.109 127.077 li
148.355 132.957 mo
154.48 132.852 160.594 132.758 166.707 132.7 cv
148.109 120.391 mo
154.199 113.623 li
148.355 140.801 mo
154.469 140.801 160.582 140.79 166.707 140.765 cv
153.077 157.528 mo
171.745 157.154 190.319 156.23 208.812 154.746 cv
224.159 153.519 239.449 151.893 254.681 149.872 cv
166.707 140.765 mo
180.711 140.695 194.75 140.555 208.812 140.333 cv
224.066 140.087 239.355 139.76 254.681 139.339 cv
166.707 140.765 mo
166.707 132.7 li
170.038 127.077 mo
169.139 125.149 li
170.038 127.077 mo
168.589 127.077 li
168.601 124.002 mo
164.019 114.208 li
156.128 113.798 mo
156.128 127.077 li
161.798 112.652 mo
161.798 127.077 li
163.083 127.077 mo
163.083 115.318 li
168.589 127.077 li
186.497 127.077 mo
170.038 127.077 li
186.497 127.077 mo
188.554 127.311 li
188.566 127.311 188.577 127.311 188.589 127.311 cv
169.139 125.149 mo
173.113 125.593 li
173.159 125.604 173.206 125.604 173.253 125.604 cv
183.517 126.75 li
183.563 126.762 183.609 126.762 183.656 126.762 cv
186.497 127.077 li
184.241 125.664 mo
184.253 113.903 li
196.164 113.903 li
188.32 126.108 li
184.241 125.664 li
184.241 125.664 li
cp
161.798 127.077 mo
156.128 127.077 li
156.128 127.077 mo
154.784 127.077 li
163.083 127.077 mo
161.798 127.077 li
163.879 113.903 mo
172.669 113.903 li
172.669 124.376 li
168.904 123.957 li
168.799 123.945 168.694 123.957 168.601 124.003 cv
169.139 125.149 mo
168.601 124.002 li
168.589 127.077 mo
163.083 127.077 li
165.082 109.415 mo
165.199 108.772 165.55 108.445 166.123 108.421 cv
172.786 109.169 li
163.306 112.676 mo
164.03 112.688 164.755 112.688 165.48 112.688 cv
165.223 110.619 li
165.223 110.619 mo
165.082 109.415 li
161.798 112.652 mo
162.288 112.665 162.779 112.665 163.259 112.676 cv
163.329 112.804 mo
163.866 113.903 li
163.866 113.903 mo
164.019 114.208 li
164.019 114.208 mo
163.879 113.903 li
163.866 113.903 mo
163.879 113.903 li
163.353 112.792 mo
163.306 112.676 li
163.259 112.676 mo
163.329 112.804 li
163.259 112.676 mo
163.271 112.665 163.294 112.665 163.306 112.676 cv
163.353 112.792 mo
163.341 112.792 163.341 112.792 163.329 112.804 cv
154.199 113.623 mo
154.818 113.681 li
154.818 113.681 mo
156.128 113.798 li
154.784 127.077 mo
154.784 113.705 li
154.796 113.693 154.808 113.693 154.818 113.681 cv
150.459 113.214 mo
152.143 113.074 153.357 113.191 154.106 113.577 cv
154.141 113.588 154.164 113.611 154.199 113.623 cv
161.798 112.652 mo
161.248 112.641 160.71 112.641 160.161 112.629 cv
160.149 112.629 li
160.149 112.629 mo
159.787 113.436 158.455 113.833 156.128 113.798 cv
150.214 112.396 mo
150.4 111.753 150.985 111.437 151.967 111.46 cv
158.349 111.46 li
159.588 111.531 160.185 111.916 160.149 112.629 cv
173.838 113.903 mo
173.838 124.505 li
183.072 125.534 li
183.084 113.903 li
173.838 113.903 li
173.838 113.903 li
cp
183.084 110.327 mo
173.779 109.287 li
184.253 110.456 mo
184.253 110.396 li
184.253 110.234 184.194 110.093 184.077 109.988 cv
183.972 109.872 183.832 109.813 183.668 109.813 cv
183.505 109.813 183.364 109.872 183.247 109.988 cv
183.154 110.082 183.096 110.198 183.084 110.328 cv
172.786 109.169 mo
172.704 109.275 172.669 109.391 172.669 109.532 cv
172.669 112.734 li
163.609 112.734 li
163.516 112.734 163.435 112.758 163.353 112.792 cv
183.084 110.327 mo
183.084 110.35 183.084 110.374 183.084 110.396 cv
183.084 112.734 li
173.838 112.734 li
173.838 109.532 li
173.838 109.439 173.813 109.357 173.779 109.287 cv
173.779 109.287 mo
173.756 109.228 173.721 109.169 173.662 109.123 cv
173.558 109.005 173.417 108.947 173.253 108.947 cv
173.089 108.947 172.949 109.005 172.832 109.123 cv
172.82 109.134 172.797 109.159 172.786 109.169 cv
188.589 127.311 mo
196.105 127.965 202.838 128.785 208.812 129.778 cv
213.593 130.573 217.871 131.485 221.658 132.501 cv
166.707 132.7 mo
180.77 132.536 194.808 132.454 208.812 132.466 cv
213.102 132.466 217.381 132.478 221.658 132.501 cv
188.589 127.311 mo
188.694 127.311 188.788 127.288 188.87 127.252 cv
188.976 127.206 189.058 127.135 189.115 127.042 cv
191.722 122.986 li
191.722 122.986 mo
195.439 117.2 li
195.439 117.2 mo
197.695 113.693 li
197.707 113.681 197.719 113.659 197.73 113.647 cv
197.742 113.635 li
198.128 113.027 li
197.239 112.244 mo
196.818 111.87 li
184.253 110.456 li
198.128 113.027 mo
198.175 112.957 li
198.257 112.816 198.291 112.665 198.257 112.512 cv
198.221 112.348 198.14 112.22 197.999 112.138 cv
197.87 112.057 197.719 112.021 197.555 112.057 cv
197.426 112.091 197.321 112.15 197.239 112.244 cv
239.181 118.498 mo
229.396 117.024 219.274 115.645 208.812 114.36 cv
205.316 113.927 201.787 113.506 198.221 113.096 cv
198.128 113.027 li
197.239 112.244 mo
197.228 112.255 197.205 112.279 197.192 112.314 cv
196.912 112.734 li
184.253 112.734 li
184.253 110.456 li
148.355 132.957 mo
148.355 140.801 li
112.457 110.467 mo
117.25 110.467 li
109.418 104.844 mo
117.834 105.85 124.638 105.78 129.827 104.645 cv
111.451 103.255 mo
117.752 103.558 123.878 104.026 129.827 104.645 cv
111.206 143.722 mo
112.516 144.879 114.105 145.021 115.987 144.144 cv
97.7988 159.644 mo
97.7988 128.352 li
129.746 140.753 mo
136.584 133.166 li
90.7969 133.285 mo
90.7969 139.831 li
84.0059 139.831 mo
84.0059 133.285 li
115.987 144.144 mo
116.595 127.99 li
111.206 143.722 mo
111.791 128.083 li
120.768 146.014 mo
127.174 138.942 li
127.174 157.586 mo
129.664 157.61 132.142 157.61 134.62 157.598 cv
127.174 149.159 mo
129.103 149.181 131.02 149.205 132.948 149.217 cv
158.139 149.404 183.423 149.077 208.812 148.224 cv
224.066 147.709 239.355 147.007 254.681 146.119 cv
254.681 152.069 mo
239.309 154.068 224.02 155.681 208.812 156.908 cv
207.328 157.026 205.854 157.142 204.382 157.248 cv
202.897 157.352 201.4 157.47 199.904 157.575 cv
196.761 157.796 193.628 158.007 190.482 158.195 cv
185.129 158.498 li
185.071 158.498 185.013 158.498 184.954 158.509 cv
171.804 159.2 158.782 159.584 145.889 159.644 cv
127.174 159.678 li
121.972 159.678 mo
121.341 166.586 li
121.423 168.657 122.568 170.292 124.754 171.508 cv
124.859 171.567 124.965 171.614 125.069 171.671 cv
131.744 175.366 li
134.772 177.119 136.093 179.258 135.719 181.794 cv
135.427 185.068 li
134.994 186.365 133.604 187.417 131.241 188.236 cv
127.688 189.463 124.322 190.457 121.143 191.216 cv
123.223 148.001 mo
121.669 147.639 120.85 146.973 120.768 146.014 cv
127.174 159.678 mo
121.972 159.678 li
127.174 149.159 mo
127.174 157.586 li
120.452 153.845 mo
120.99 151.379 121.914 149.439 123.223 148.001 cv
127.174 157.586 mo
127.174 159.678 li
120.452 153.845 mo
121.68 154.326 122.253 155.611 122.159 157.691 cv
121.972 159.678 li
115.987 144.144 mo
117.039 145.582 118.629 146.212 120.768 146.014 cv
127.174 143.618 mo
127.174 149.159 li
123.223 148.001 mo
127.174 143.618 li
127.174 143.618 mo
129.746 140.753 li
129.746 140.753 mo
130.809 140.765 131.885 140.765 132.948 140.777 cv
138.08 140.79 143.224 140.801 148.355 140.801 cv
90.7031 159.492 mo
97.7988 159.644 li
92.2461 180.042 mo
93.918 176.243 97.46 173.041 102.872 170.444 cv
104.976 168.96 106.344 167.043 106.963 164.717 cv
107.512 159.655 li
94.0225 190.27 mo
94.0586 189.93 94.0928 189.603 94.1514 189.288 cv
94.6543 186.564 95.9512 184.18 98.0322 182.123 cv
100.71 179.493 103.924 178.207 107.676 178.242 cv
111.44 178.277 114.644 179.621 117.272 182.297 cv
119.365 184.425 120.605 186.891 121.002 189.697 cv
121.084 190.188 121.131 190.69 121.143 191.216 cv
92.9707 189.241 mo
92.4453 188.621 92.0361 187.978 91.7441 187.312 cv
91.2061 186.084 91.0537 184.752 91.2871 183.314 cv
91.3936 182.648 91.5449 182.005 91.7441 181.374 cv
91.8838 180.917 92.0479 180.473 92.2461 180.042 cv
90.7969 141.654 mo
84.0059 141.654 li
90.7969 139.831 mo
84.0059 139.831 li
84.0059 148.2 mo
90.7969 148.2 li
84.0059 149.486 mo
90.7969 149.486 li
90.7969 154.629 mo
84.0059 154.629 li
90.7969 155.447 mo
84.0059 155.447 li
90.7969 158.603 mo
84.0059 158.603 li
84.0059 154.629 mo
84.0059 149.486 li
90.7969 149.486 mo
90.7969 154.629 li
90.7969 154.629 mo
90.7969 155.447 li
90.7031 159.492 mo
90.7734 159.282 90.8086 159.024 90.7969 158.72 cv
90.7969 158.603 li
88.1201 160.333 mo
88.541 160.345 88.9609 160.345 89.3945 160.357 cv
90.084 160.391 90.5274 160.099 90.7031 159.492 cv
90.7969 155.447 mo
90.7969 158.603 li
84.0059 158.603 mo
84.0059 155.447 li
77.7754 159.808 mo
78.8272 159.901 79.9375 159.983 81.0947 160.065 cv
81.0947 160.065 mo
82.0303 160.123 83 160.169 84.0059 160.205 cv
84.0059 160.205 mo
84.0879 160.205 84.169 160.205 84.251 160.216 cv
85.4902 160.263 86.7764 160.298 88.1201 160.333 cv
84.0059 160.205 mo
84.0059 158.603 li
72.8301 159.247 mo
73.333 159.328 73.8711 159.398 74.4199 159.468 cv
75.4375 159.596 76.5361 159.703 77.7051 159.807 cv
77.7285 159.807 77.751 159.807 77.7754 159.807 cv
88.1201 160.333 mo
85.6768 162.391 82.9531 163.419 79.9492 163.431 cv
79.2598 163.49 78.8037 163.349 78.5928 162.987 cv
78.5117 162.835 78.4756 162.683 78.5 162.507 cv
78.5117 162.378 78.5469 162.262 78.582 162.145 cv
78.7217 161.853 78.9443 161.619 79.2481 161.444 cv
80.1953 161.105 80.8027 160.637 81.0947 160.065 cv
72.8301 159.247 mo
72.8184 159.27 72.8066 159.293 72.8066 159.304 cv
72.7725 159.527 72.9941 159.749 73.4609 159.971 cv
73.7422 160.099 74.0576 160.216 74.4199 160.309 cv
74.666 160.369 74.9229 160.416 75.1914 160.45 cv
75.8809 160.532 76.4775 160.532 76.9805 160.439 cv
77.2842 160.379 77.5059 160.309 77.6465 160.205 cv
77.6699 160.193 77.6934 160.169 77.7051 160.147 cv
77.751 160.088 77.7754 160.029 77.7871 159.958 cv
77.7979 159.913 77.7871 159.866 77.7754 159.808 cv
77.8106 152.104 mo
77.8213 151.975 77.7871 151.847 77.7051 151.719 cv
77.5996 151.555 77.4004 151.391 77.1318 151.239 cv
76.665 150.982 76.0801 150.831 75.3906 150.772 cv
75.0518 150.737 74.7246 150.749 74.4199 150.783 cv
74.1279 150.818 73.8477 150.876 73.5899 150.958 cv
73.0879 151.145 72.8184 151.391 72.7959 151.707 cv
72.7725 152.022 72.9941 152.303 73.4736 152.56 cv
73.7539 152.712 74.0693 152.84 74.4199 152.922 cv
74.666 152.981 74.9229 153.016 75.2031 153.039 cv
75.8936 153.098 76.501 153.028 77.0156 152.84 cv
77.3535 152.724 77.5762 152.572 77.7051 152.396 cv
77.7627 152.303 77.7979 152.209 77.8106 152.104 cv
77.8106 152.104 li
cp
@
573.293 141.56 mo
580.423 141.583 586.326 141.676 591.013 141.83 cv
571.867 145.581 mo
577.396 145.417 582.234 145.243 586.36 145.067 cv
588.687 143.442 mo
572.158 143.629 li
565.191 106.492 mo
640.471 102.926 li
565.191 108.432 mo
640.471 108.023 li
634.755 110.875 mo
565.191 110.327 li
583.029 300.849 mo
576.297 302.031 li
575.21 307.245 mo
583.918 305.994 li
575.21 339.658 mo
583.918 339.658 li
575.21 348.88 mo
583.918 348.88 li
575.665 445.154 mo
584.047 448.275 li
575.665 463.915 mo
584.047 463.915 li
584.047 490.684 mo
581.382 491.117 578.588 491.501 575.665 491.852 cv
554.858 427.281 mo
554.858 497.23 li
221.658 132.501 mo
232.681 132.536 243.692 132.642 254.681 132.793 cv
191.722 122.986 mo
254.681 127.65 li
195.439 117.2 mo
254.681 122.975 li
260.992 98.6841 mo
265.458 91.2847 li
282.139 98.6841 mo
280.362 91.2847 li
305.248 105.089 mo
304.313 102.916 303.344 100.777 302.338 98.6841 cv
302.338 98.6841 mo
301.135 96.1587 299.884 93.6929 298.585 91.2847 cv
285.412 112.36 mo
308.205 112.36 li
283.671 105.089 mo
305.248 105.089 li
310.334 118.193 mo
286.813 118.193 li
310.334 118.193 mo
309.644 116.217 308.942 114.278 308.205 112.36 cv
312.566 124.95 mo
311.852 122.659 311.116 120.403 310.334 118.193 cv
273.897 149.38 mo
285.435 147.651 297.02 145.709 308.649 143.547 cv
311.817 143.068 313.875 142.214 314.846 140.988 cv
315.98 139.246 315.594 135.12 313.677 128.584 cv
313.314 127.358 312.952 126.154 312.566 124.95 cv
308.205 112.36 mo
307.258 109.894 306.266 107.463 305.248 105.089 cv
252.682 112.36 mo
285.412 112.36 li
254.681 120.952 mo
264.616 122.601 274.19 124.365 283.39 126.224 cv
257.111 105.089 mo
283.671 105.089 li
260.992 98.6841 mo
282.139 98.6841 li
254.681 152.069 mo
259.812 151.403 264.944 150.702 270.075 149.954 cv
260.338 142.589 mo
284.979 142.87 li
309.62 142.589 li
286.813 118.193 mo
243.143 118.181 li
287.236 140.963 mo
284.792 137.247 li
254.681 146.119 mo
254.681 139.339 li
276.599 156.768 mo
275.628 156.253 274.81 155.505 274.12 154.524 cv
272.985 155.763 mo
273.688 156.686 274.505 157.434 275.43 157.996 cv
276.599 156.768 mo
276.656 156.756 276.703 156.756 276.75 156.756 cv
277.112 156.756 277.428 156.884 277.686 157.154 cv
277.942 157.422 278.071 157.739 278.071 158.101 cv
278.071 158.463 277.942 158.779 277.674 159.036 cv
277.416 159.282 277.101 159.41 276.738 159.41 cv
276.376 159.41 276.061 159.282 275.804 159.024 cv
275.558 158.767 275.43 158.452 275.43 158.089 cv
275.43 158.054 275.43 158.031 275.43 157.996 cv
275.43 157.996 mo
275.581 158.077 275.744 158.171 275.897 158.252 cv
276.096 158.358 276.306 158.37 276.517 158.299 cv
276.738 158.229 276.891 158.089 276.995 157.89 cv
277.101 157.691 277.112 157.481 277.043 157.27 cv
276.983 157.048 276.843 156.896 276.645 156.792 cv
276.633 156.78 276.609 156.78 276.599 156.768 cv
274.12 154.524 mo
274.879 153.951 275.756 153.659 276.762 153.659 cv
277.989 153.659 279.029 154.091 279.894 154.945 cv
280.748 155.809 281.181 156.85 281.181 158.077 cv
281.181 159.304 280.748 160.345 279.894 161.198 cv
279.029 162.063 277.989 162.497 276.762 162.497 cv
275.534 162.497 274.494 162.063 273.641 161.198 cv
272.775 160.345 272.343 159.304 272.343 158.077 cv
272.343 157.212 272.553 156.441 272.985 155.763 cv
@
340.716 209.328 mo
764.536 209.328 li
@
341.613 209.328 mo
342.709 207.526 li
342.647 207.485 li
339.71 208.652 li
338.687 208.877 337.663 209.103 336.64 209.328 cv
337.663 209.553 338.687 209.778 339.71 210.003 cv
342.647 211.17 li
342.709 211.139 li
341.613 209.328 li
cp
f
763.639 209.328 mo
762.543 207.526 li
762.604 207.485 li
765.542 208.652 li
766.565 208.877 767.589 209.103 768.612 209.328 cv
767.589 209.553 766.565 209.778 765.542 210.003 cv
762.604 211.17 li
762.543 211.139 li
763.639 209.328 li
cp
f
53.5996 211.276 mo
312.426 211.276 li
@
54.4971 211.276 mo
55.5928 209.475 li
55.5313 209.434 li
52.5938 210.601 li
51.5703 210.826 50.5469 211.051 49.5234 211.276 cv
50.5469 211.501 51.5703 211.726 52.5938 211.951 cv
55.5313 213.118 li
55.5928 213.087 li
54.4971 211.276 li
cp
f
311.528 211.276 mo
310.433 209.475 li
310.494 209.434 li
313.432 210.601 li
314.455 210.826 315.479 211.051 316.502 211.276 cv
315.479 211.501 314.455 211.726 313.432 211.951 cv
310.494 213.118 li
310.433 213.087 li
311.528 211.276 li
cp
f
%%IncludeResource: font ArialMT
/LKDOMB+ArialMT /ArialMT findfont ct_VMDictPut/LKDOMB+ArialMT*1 [49{/.notdef}rp /one /two /.notdef /four /five 3{/.notdef}rp /nine 198{/.notdef}rp]LKDOMB+ArialMT nfLKDOMB+ArialMT*1 [11 0 0 -11 0 0 ]msf176.192 223.618 mo(929)sh542.557 223.618 mo(1524)[6.11719 6.11719 6.11719 0 ]xsh594.813 569.469 mo
594.743 569.504 594.626 569.57 594.462 569.664 cv
594.297 569.76 594.089 569.851 593.838 569.938 cv
593.587 570.025 593.305 570.103 592.993 570.171 cv
592.681 570.241 592.343 570.276 591.979 570.276 cv
591.615 570.276 591.272 570.223 590.952 570.12 cv
590.631 570.016 590.35 569.86 590.106 569.652 cv
589.864 569.444 589.674 569.193 589.535 568.898 cv
589.396 568.603 589.327 568.256 589.327 567.858 cv
589.327 557.665 li
587.429 557.665 li
587.429 556.6 li
589.327 556.6 li
589.327 551.971 li
590.627 551.971 li
590.627 556.6 li
593.772 556.6 li
593.772 557.665 li
590.627 557.665 li
590.627 567.545 li
590.627 568.048 590.8 568.425 591.146 568.676 cv
591.493 568.928 591.884 569.053 592.317 569.053 cv
592.854 569.053 593.318 568.962 593.708 568.781 cv
594.098 568.598 594.336 568.482 594.423 568.429 cv
594.813 569.469 li
cp
f
608.15 570.12 mo
606.851 570.12 li
606.851 562.58 li
606.851 559.235 605.732 557.562 603.496 557.562 cv
602.941 557.562 602.399 557.665 601.871 557.873 cv
601.343 558.081 600.849 558.376 600.39 558.757 cv
599.93 559.139 599.526 559.585 599.181 560.096 cv
598.833 560.608 598.573 561.159 598.4 561.747 cv
598.4 570.12 li
597.101 570.12 li
597.101 551.139 li
598.4 551.139 li
598.4 559.824 li
598.955 558.766 599.722 557.925 600.701 557.301 cv
601.681 556.677 602.733 556.366 603.86 556.366 cv
604.605 556.366 605.247 556.504 605.784 556.782 cv
606.321 557.059 606.768 557.457 607.123 557.978 cv
607.479 558.497 607.738 559.126 607.903 559.863 cv
608.067 560.599 608.15 561.427 608.15 562.345 cv
608.15 570.12 li
cp
f
623.126 562.839 mo
623.074 562.042 622.896 561.315 622.593 560.656 cv
622.289 559.997 621.899 559.429 621.423 558.953 cv
620.946 558.476 620.396 558.104 619.771 557.834 cv
619.147 557.566 618.48 557.431 617.77 557.431 cv
617.059 557.431 616.392 557.566 615.768 557.834 cv
615.144 558.104 614.594 558.476 614.117 558.953 cv
613.64 559.429 613.259 560.001 612.973 560.668 cv
612.687 561.336 612.518 562.06 612.466 562.839 cv
623.126 562.839 li
cp
617.822 570.379 mo
616.868 570.379 615.984 570.193 615.17 569.821 cv
614.354 569.448 613.648 568.937 613.051 568.287 cv
612.453 567.636 611.984 566.887 611.646 566.038 cv
611.309 565.189 611.14 564.279 611.14 563.308 cv
611.14 562.355 611.309 561.457 611.646 560.617 cv
611.984 559.776 612.448 559.039 613.038 558.407 cv
613.627 557.774 614.325 557.276 615.131 556.912 cv
615.937 556.547 616.808 556.366 617.744 556.366 cv
618.697 556.366 619.581 556.552 620.396 556.924 cv
621.21 557.297 621.912 557.8 622.502 558.433 cv
623.091 559.066 623.551 559.802 623.88 560.643 cv
624.209 561.484 624.374 562.372 624.374 563.308 cv
624.374 563.395 624.374 563.502 624.374 563.632 cv
624.374 563.762 624.365 563.845 624.348 563.879 cv
612.492 563.879 li
612.544 564.66 612.726 565.383 613.038 566.05 cv
613.35 566.718 613.744 567.294 614.221 567.78 cv
614.697 568.265 615.248 568.647 615.872 568.923 cv
616.496 569.201 617.163 569.339 617.874 569.339 cv
618.342 569.339 618.801 569.275 619.252 569.145 cv
619.702 569.014 620.123 568.837 620.513 568.612 cv
620.903 568.386 621.249 568.114 621.553 567.792 cv
621.855 567.472 622.095 567.122 622.268 566.74 cv
623.412 567.051 li
623.221 567.537 622.939 567.984 622.566 568.391 cv
622.194 568.798 621.761 569.149 621.267 569.444 cv
620.772 569.739 620.23 569.968 619.642 570.132 cv
619.053 570.297 618.446 570.379 617.822 570.379 cv
cp
f
626.948 563.646 mo
626.948 562.45 li
634.437 562.45 li
634.437 563.646 li
626.948 563.646 li
cp
f
644.264 569.209 mo
645.061 569.209 645.789 569.045 646.447 568.715 cv
647.106 568.386 647.674 567.949 648.15 567.403 cv
648.627 566.857 649 566.237 649.269 565.543 cv
649.537 564.85 649.672 564.139 649.672 563.412 cv
649.672 562.649 649.546 561.916 649.295 561.214 cv
649.043 560.512 648.688 559.888 648.229 559.342 cv
647.77 558.796 647.224 558.359 646.591 558.03 cv
645.958 557.701 645.261 557.536 644.498 557.536 cv
643.926 557.536 643.389 557.635 642.886 557.834 cv
642.383 558.034 641.919 558.298 641.495 558.627 cv
641.069 558.957 640.688 559.338 640.351 559.772 cv
640.013 560.206 639.73 560.656 639.506 561.123 cv
639.506 565.595 li
639.558 566.098 639.748 566.571 640.078 567.012 cv
640.407 567.455 640.801 567.836 641.261 568.157 cv
641.72 568.478 642.219 568.733 642.756 568.923 cv
643.293 569.115 643.796 569.209 644.264 569.209 cv
cp
644.523 570.379 mo
643.466 570.379 642.479 570.103 641.56 569.547 cv
640.641 568.993 639.922 568.283 639.401 567.415 cv
639.401 570.12 li
638.206 570.12 li
638.206 551.139 li
639.506 551.139 li
639.506 559.538 li
640.146 558.602 640.905 557.839 641.78 557.249 cv
642.656 556.661 643.666 556.366 644.81 556.366 cv
645.763 556.366 646.625 556.57 647.396 556.977 cv
648.168 557.384 648.817 557.921 649.347 558.588 cv
649.875 559.256 650.283 560.01 650.568 560.851 cv
650.854 561.692 650.998 562.545 650.998 563.412 cv
650.998 564.347 650.833 565.236 650.504 566.077 cv
650.174 566.917 649.72 567.654 649.139 568.287 cv
648.558 568.919 647.873 569.426 647.085 569.808 cv
646.296 570.189 645.442 570.379 644.523 570.379 cv
cp
f
654.222 551.139 mo
655.548 551.139 li
655.548 567.442 li
655.548 567.945 655.69 568.343 655.977 568.637 cv
656.263 568.932 656.657 569.08 657.16 569.08 cv
657.351 569.08 657.58 569.058 657.849 569.014 cv
658.117 568.971 658.364 568.907 658.59 568.82 cv
658.85 569.86 li
658.555 569.981 658.19 570.081 657.758 570.159 cv
657.324 570.237 656.952 570.276 656.64 570.276 cv
655.912 570.276 655.327 570.054 654.885 569.613 cv
654.442 569.17 654.222 568.577 654.222 567.831 cv
654.222 551.139 li
cp
f
665.037 570.379 mo
662.16 570.379 660.722 568.386 660.722 564.4 cv
660.722 556.6 li
662.021 556.6 li
662.021 564.217 li
662.021 567.545 663.156 569.209 665.427 569.209 cv
665.999 569.209 666.554 569.11 667.091 568.911 cv
667.628 568.711 668.131 568.434 668.6 568.079 cv
669.067 567.723 669.479 567.294 669.834 566.791 cv
670.189 566.289 670.472 565.735 670.68 565.127 cv
670.68 556.6 li
671.979 556.6 li
671.979 568.299 li
671.979 568.733 672.161 568.95 672.525 568.95 cv
672.525 570.12 li
672.438 570.136 672.36 570.146 672.291 570.146 cv
672.222 570.146 672.17 570.146 672.135 570.146 cv
671.788 570.146 671.48 570.038 671.212 569.821 cv
670.943 569.604 670.81 569.314 670.81 568.95 cv
670.81 566.921 li
670.22 568.013 669.409 568.863 668.378 569.469 cv
667.347 570.077 666.233 570.379 665.037 570.379 cv
cp
f
687.163 562.839 mo
687.111 562.042 686.933 561.315 686.63 560.656 cv
686.326 559.997 685.937 559.429 685.46 558.953 cv
684.983 558.476 684.433 558.104 683.809 557.834 cv
683.185 557.566 682.518 557.431 681.807 557.431 cv
681.096 557.431 680.429 557.566 679.805 557.834 cv
679.181 558.104 678.631 558.476 678.154 558.953 cv
677.677 559.429 677.296 560.001 677.01 560.668 cv
676.724 561.336 676.555 562.06 676.503 562.839 cv
687.163 562.839 li
cp
681.859 570.379 mo
680.905 570.379 680.021 570.193 679.207 569.821 cv
678.392 569.448 677.686 568.937 677.088 568.287 cv
676.49 567.636 676.021 566.887 675.684 566.038 cv
675.346 565.189 675.177 564.279 675.177 563.308 cv
675.177 562.355 675.346 561.457 675.684 560.617 cv
676.021 559.776 676.485 559.039 677.075 558.407 cv
677.664 557.774 678.362 557.276 679.168 556.912 cv
679.974 556.547 680.845 556.366 681.781 556.366 cv
682.734 556.366 683.618 556.552 684.433 556.924 cv
685.247 557.297 685.949 557.8 686.539 558.433 cv
687.128 559.066 687.588 559.802 687.917 560.643 cv
688.246 561.484 688.411 562.372 688.411 563.308 cv
688.411 563.395 688.411 563.502 688.411 563.632 cv
688.411 563.762 688.402 563.845 688.385 563.879 cv
676.529 563.879 li
676.581 564.66 676.763 565.383 677.075 566.05 cv
677.387 566.718 677.781 567.294 678.258 567.78 cv
678.734 568.265 679.285 568.647 679.909 568.923 cv
680.533 569.201 681.2 569.339 681.911 569.339 cv
682.379 569.339 682.838 569.275 683.289 569.145 cv
683.739 569.014 684.16 568.837 684.55 568.612 cv
684.94 568.386 685.286 568.114 685.59 567.792 cv
685.893 567.472 686.132 567.122 686.305 566.74 cv
687.449 567.051 li
687.258 567.537 686.977 567.984 686.604 568.391 cv
686.231 568.798 685.798 569.149 685.304 569.444 cv
684.81 569.739 684.268 569.968 683.679 570.132 cv
683.09 570.297 682.483 570.379 681.859 570.379 cv
cp
f
697.563 569.209 mo
698.343 569.209 699.054 569.045 699.695 568.715 cv
700.336 568.386 700.882 567.949 701.333 567.403 cv
701.784 566.857 702.13 566.233 702.373 565.531 cv
702.615 564.829 702.737 564.114 702.737 563.385 cv
702.737 562.606 702.599 561.865 702.321 561.163 cv
702.044 560.46 701.658 559.841 701.164 559.303 cv
700.67 558.766 700.094 558.337 699.436 558.017 cv
698.776 557.696 698.074 557.536 697.329 557.536 cv
696.861 557.536 696.362 557.635 695.834 557.834 cv
695.306 558.034 694.808 558.302 694.339 558.641 cv
693.871 558.979 693.473 559.365 693.144 559.797 cv
692.813 560.231 692.623 560.691 692.571 561.175 cv
692.571 565.622 li
692.796 566.124 693.082 566.592 693.429 567.026 cv
693.775 567.459 694.166 567.84 694.6 568.169 cv
695.032 568.499 695.5 568.754 696.003 568.937 cv
696.506 569.119 697.025 569.209 697.563 569.209 cv
cp
697.875 570.379 mo
696.714 570.379 695.678 570.072 694.769 569.456 cv
693.858 568.841 693.126 568.091 692.571 567.207 cv
692.571 575.658 li
691.271 575.658 li
691.271 556.6 li
692.467 556.6 li
692.467 559.303 li
693.021 558.437 693.754 557.731 694.664 557.185 cv
695.574 556.638 696.549 556.366 697.589 556.366 cv
698.525 556.366 699.392 556.565 700.189 556.963 cv
700.986 557.363 701.671 557.886 702.243 558.537 cv
702.815 559.187 703.261 559.937 703.582 560.786 cv
703.902 561.635 704.063 562.501 704.063 563.385 cv
704.063 564.322 703.916 565.214 703.621 566.064 cv
703.326 566.914 702.906 567.659 702.36 568.299 cv
701.814 568.941 701.16 569.448 700.397 569.821 cv
699.634 570.193 698.794 570.379 697.875 570.379 cv
cp
f
713.579 557.77 mo
712.366 557.804 711.305 558.164 710.395 558.848 cv
709.484 559.534 708.848 560.473 708.483 561.669 cv
708.483 570.12 li
707.184 570.12 li
707.184 556.6 li
708.432 556.6 li
708.432 559.927 li
708.899 558.974 709.519 558.199 710.29 557.601 cv
711.062 557.002 711.89 556.661 712.773 556.574 cv
712.946 556.556 713.103 556.547 713.241 556.547 cv
713.38 556.547 713.492 556.547 713.579 556.547 cv
713.579 557.77 li
cp
f
716.049 570.12 mo
716.049 556.6 li
717.349 556.6 li
717.349 570.12 li
716.049 570.12 li
cp
716.049 553.532 mo
716.049 551.139 li
717.349 551.139 li
717.349 553.532 li
716.049 553.532 li
cp
f
732.48 570.12 mo
731.181 570.12 li
731.181 562.58 li
731.181 560.829 730.934 559.555 730.439 558.757 cv
729.945 557.96 729.161 557.562 728.086 557.562 cv
727.515 557.562 726.946 557.665 726.384 557.873 cv
725.82 558.081 725.295 558.376 724.811 558.757 cv
724.325 559.139 723.9 559.585 723.536 560.096 cv
723.172 560.608 722.903 561.159 722.73 561.747 cv
722.73 570.12 li
721.431 570.12 li
721.431 556.6 li
722.652 556.6 li
722.652 559.824 li
722.93 559.303 723.271 558.831 723.68 558.407 cv
724.086 557.982 724.546 557.618 725.058 557.315 cv
725.568 557.011 726.11 556.778 726.683 556.613 cv
727.254 556.448 727.844 556.366 728.45 556.366 cv
729.924 556.366 730.964 556.881 731.57 557.913 cv
732.177 558.944 732.48 560.421 732.48 562.345 cv
732.48 570.12 li
cp
f
742.308 569.469 mo
742.238 569.504 742.121 569.57 741.957 569.664 cv
741.792 569.76 741.584 569.851 741.333 569.938 cv
741.082 570.025 740.8 570.103 740.488 570.171 cv
740.176 570.241 739.838 570.276 739.474 570.276 cv
739.11 570.276 738.768 570.223 738.447 570.12 cv
738.126 570.016 737.845 569.86 737.602 569.652 cv
737.359 569.444 737.169 569.193 737.03 568.898 cv
736.891 568.603 736.822 568.256 736.822 567.858 cv
736.822 557.665 li
734.924 557.665 li
734.924 556.6 li
736.822 556.6 li
736.822 551.971 li
738.122 551.971 li
738.122 556.6 li
741.268 556.6 li
741.268 557.665 li
738.122 557.665 li
738.122 567.545 li
738.122 568.048 738.295 568.425 738.642 568.676 cv
738.988 568.928 739.379 569.053 739.813 569.053 cv
740.349 569.053 740.813 568.962 741.203 568.781 cv
741.593 568.598 741.831 568.482 741.918 568.429 cv
742.308 569.469 li
cp
f
748.886 570.379 mo
747.846 570.379 746.849 570.206 745.896 569.86 cv
744.942 569.513 744.11 568.993 743.399 568.299 cv
744.05 567.415 li
744.777 568.075 745.531 568.56 746.312 568.872 cv
747.092 569.184 747.949 569.339 748.886 569.339 cv
750.063 569.339 751.013 569.092 751.732 568.598 cv
752.451 568.105 752.812 567.415 752.812 566.532 cv
752.812 566.116 752.721 565.764 752.538 565.479 cv
752.356 565.193 752.083 564.95 751.72 564.75 cv
751.355 564.551 750.904 564.373 750.367 564.217 cv
749.83 564.062 749.206 563.897 748.495 563.723 cv
747.732 563.55 747.069 563.377 746.507 563.204 cv
745.943 563.031 745.479 562.823 745.115 562.58 cv
744.751 562.337 744.479 562.042 744.296 561.696 cv
744.114 561.349 744.023 560.907 744.023 560.37 cv
744.023 559.694 744.153 559.105 744.413 558.602 cv
744.674 558.099 745.033 557.683 745.492 557.354 cv
745.951 557.025 746.48 556.778 747.078 556.613 cv
747.677 556.448 748.313 556.366 748.989 556.366 cv
750.047 556.366 750.982 556.543 751.798 556.899 cv
752.612 557.254 753.244 557.709 753.695 558.263 cv
752.968 558.965 li
752.517 558.446 751.932 558.055 751.212 557.795 cv
750.493 557.536 749.726 557.406 748.911 557.406 cv
748.408 557.406 747.937 557.457 747.494 557.562 cv
747.053 557.665 746.666 557.831 746.337 558.055 cv
746.008 558.281 745.748 558.572 745.558 558.926 cv
745.366 559.282 745.271 559.703 745.271 560.188 cv
745.271 560.586 745.336 560.907 745.467 561.15 cv
745.597 561.392 745.805 561.6 746.091 561.774 cv
746.376 561.947 746.744 562.098 747.195 562.229 cv
747.646 562.359 748.184 562.501 748.808 562.658 cv
749.656 562.866 750.41 563.065 751.069 563.255 cv
751.728 563.447 752.278 563.68 752.721 563.957 cv
753.162 564.235 753.5 564.565 753.734 564.946 cv
753.969 565.327 754.085 565.813 754.085 566.402 cv
754.085 567.615 753.613 568.581 752.668 569.3 cv
751.724 570.02 750.463 570.379 748.886 570.379 cv
cp
f
756.815 570.12 mo
756.815 567.91 li
757.959 567.91 li
757.959 570.12 li
756.815 570.12 li
cp
f
760.767 563.308 mo
760.767 562.355 760.932 561.453 761.261 560.604 cv
761.59 559.754 762.05 559.018 762.639 558.394 cv
763.228 557.77 763.93 557.276 764.745 556.912 cv
765.56 556.547 766.452 556.366 767.423 556.366 cv
768.653 556.366 769.736 556.643 770.673 557.198 cv
771.608 557.752 772.311 558.524 772.778 559.511 cv
771.505 559.927 li
771.105 559.182 770.538 558.597 769.802 558.172 cv
769.064 557.748 768.255 557.536 767.371 557.536 cv
766.625 557.536 765.932 557.683 765.291 557.978 cv
764.649 558.273 764.091 558.679 763.614 559.2 cv
763.137 559.719 762.76 560.331 762.482 561.033 cv
762.205 561.735 762.066 562.493 762.066 563.308 cv
762.066 564.122 762.21 564.889 762.496 565.609 cv
762.782 566.328 763.163 566.952 763.64 567.481 cv
764.116 568.009 764.68 568.429 765.33 568.742 cv
765.979 569.053 766.669 569.209 767.396 569.209 cv
767.865 569.209 768.328 569.14 768.788 569.001 cv
769.247 568.863 769.672 568.681 770.062 568.456 cv
770.452 568.231 770.79 567.966 771.076 567.663 cv
771.361 567.36 771.557 567.043 771.661 566.713 cv
772.935 567.078 li
772.762 567.545 772.497 567.984 772.142 568.391 cv
771.786 568.798 771.366 569.149 770.881 569.444 cv
770.396 569.739 769.857 569.968 769.269 570.132 cv
768.68 570.297 768.073 570.379 767.449 570.379 cv
766.495 570.379 765.611 570.193 764.797 569.821 cv
763.981 569.448 763.275 568.937 762.678 568.287 cv
762.08 567.636 761.611 566.887 761.273 566.038 cv
760.936 565.189 760.767 564.279 760.767 563.308 cv
cp
f
776.106 563.438 mo
776.106 564.235 776.245 564.985 776.522 565.687 cv
776.8 566.388 777.177 566.999 777.654 567.52 cv
778.131 568.039 778.689 568.452 779.331 568.754 cv
779.972 569.058 780.657 569.209 781.385 569.209 cv
782.113 569.209 782.798 569.058 783.438 568.754 cv
784.08 568.452 784.644 568.031 785.129 567.494 cv
785.614 566.956 785.995 566.336 786.272 565.634 cv
786.55 564.933 786.688 564.174 786.688 563.36 cv
786.688 562.563 786.55 561.813 786.272 561.111 cv
785.995 560.409 785.614 559.793 785.129 559.264 cv
784.644 558.736 784.084 558.316 783.452 558.003 cv
782.819 557.692 782.139 557.536 781.411 557.536 cv
780.683 557.536 779.998 557.692 779.356 558.003 cv
778.716 558.316 778.156 558.741 777.68 559.278 cv
777.203 559.815 776.822 560.444 776.536 561.163 cv
776.25 561.882 776.106 562.64 776.106 563.438 cv
cp
781.411 570.379 mo
780.457 570.379 779.578 570.193 778.771 569.821 cv
777.966 569.448 777.268 568.941 776.679 568.299 cv
776.09 567.659 775.63 566.914 775.301 566.064 cv
774.972 565.214 774.807 564.322 774.807 563.385 cv
774.807 562.432 774.976 561.531 775.313 560.681 cv
775.651 559.832 776.115 559.087 776.705 558.446 cv
777.294 557.804 777.992 557.297 778.798 556.924 cv
779.604 556.552 780.475 556.366 781.411 556.366 cv
782.347 556.366 783.213 556.552 784.011 556.924 cv
784.808 557.297 785.506 557.804 786.104 558.446 cv
786.702 559.087 787.17 559.832 787.508 560.681 cv
787.846 561.531 788.015 562.432 788.015 563.385 cv
788.015 564.322 787.846 565.214 787.508 566.064 cv
787.17 566.914 786.706 567.659 786.117 568.299 cv
785.527 568.941 784.83 569.448 784.023 569.821 cv
783.218 570.193 782.347 570.379 781.411 570.379 cv
cp
f
810.998 570.12 mo
809.698 570.12 li
809.698 562.58 li
809.698 560.864 809.434 559.598 808.905 558.784 cv
808.377 557.969 807.566 557.562 806.475 557.562 cv
805.92 557.562 805.391 557.665 804.889 557.873 cv
804.386 558.081 803.927 558.372 803.511 558.745 cv
803.095 559.118 802.734 559.559 802.432 560.071 cv
802.128 560.582 801.89 561.15 801.717 561.774 cv
801.717 570.12 li
800.416 570.12 li
800.416 562.58 li
800.416 560.846 800.156 559.577 799.637 558.771 cv
799.116 557.964 798.311 557.562 797.219 557.562 cv
796.663 557.562 796.14 557.662 795.646 557.861 cv
795.151 558.06 794.696 558.346 794.28 558.718 cv
793.864 559.091 793.496 559.534 793.176 560.044 cv
792.854 560.556 792.607 561.123 792.435 561.747 cv
792.435 570.12 li
791.135 570.12 li
791.135 556.6 li
792.356 556.6 li
792.356 559.824 li
792.911 558.732 793.639 557.882 794.54 557.276 cv
795.441 556.669 796.438 556.366 797.53 556.366 cv
798.675 556.366 799.602 556.704 800.313 557.379 cv
801.023 558.055 801.447 558.94 801.587 560.032 cv
802.869 557.587 804.637 556.366 806.891 556.366 cv
808.363 556.366 809.417 556.89 810.05 557.939 cv
810.682 558.988 810.998 560.456 810.998 562.345 cv
810.998 570.12 li
cp
f
gsave
534.047 573.504 mo
534.047 557.913 li
534.047 554.021 li
534.047 554.021 li
534.047 547.242 li
534.047 547.152 534.055 547.067 534.07 546.986 cv
534.07 546.979 534.074 546.973 534.075 546.966 cv
534.091 546.892 534.109 546.821 534.138 546.753 cv
534.181 546.646 534.246 546.545 534.323 546.448 cv
534.352 546.413 534.376 546.376 534.408 546.342 cv
534.438 546.313 534.471 546.286 534.504 546.26 cv
534.506 546.258 534.508 546.256 534.509 546.255 cv
534.511 546.253 534.512 546.252 534.514 546.251 cv
534.614 546.172 534.72 546.11 534.828 546.065 cv
534.973 546.005 535.135 545.975 535.313 545.975 cv
546.608 545.975 li
547.83 545.975 548.958 546.188 549.992 546.616 cv
550.77 546.936 551.498 547.378 552.18 547.942 cv
552.407 548.13 552.629 548.331 552.847 548.546 cv
553.706 549.412 554.35 550.364 554.777 551.399 cv
554.829 551.526 554.878 551.653 554.924 551.783 cv
554.938 551.824 554.951 551.866 554.965 551.907 cv
554.995 551.996 555.024 552.084 555.052 552.174 cv
555.066 552.223 555.079 552.273 555.093 552.322 cv
555.116 552.406 555.14 552.49 555.16 552.575 cv
555.173 552.63 555.185 552.685 555.197 552.742 cv
555.21 552.797 555.224 552.853 555.235 552.909 cv
555.234 552.903 555.232 552.896 555.232 552.89 cv
555.24 552.936 li
555.24 552.936 li
555.24 552.936 li
555.24 552.937 555.24 552.937 555.239 552.937 cv
555.24 552.94 555.24 552.944 555.242 552.948 cv
555.268 553.08 555.291 553.213 555.312 553.348 cv
555.313 553.363 555.316 553.377 555.318 553.392 cv
555.338 553.524 555.354 553.657 555.367 553.79 cv
555.368 553.81 555.371 553.829 555.374 553.849 cv
555.386 553.977 555.396 554.106 555.401 554.235 cv
555.403 554.262 555.405 554.289 555.406 554.315 cv
555.414 554.47 555.418 554.625 555.418 554.784 cv
555.418 555.193 555.388 555.6 555.329 556.004 cv
555.271 556.412 555.18 556.823 555.063 557.241 cv
555.01 557.423 li
554.979 557.532 li
554.984 557.539 li
554.817 558.039 554.604 558.532 554.358 558.997 cv
554.148 559.395 553.915 559.771 553.668 560.109 cv
553.054 560.775 li
552.182 561.718 551.211 562.424 550.142 562.892 cv
549.074 563.36 547.895 563.593 546.608 563.593 cv
544.743 563.593 li
544.124 563.593 li
544.124 564.212 li
544.124 567.894 li
541.592 567.894 li
541.592 562.336 li
541.589 562.327 li
541.587 562.236 li
541.589 562.236 li
541.589 559.015 li
541.589 554.617 li
541.587 553.518 li
541.651 553.516 li
546.608 553.516 li
546.763 553.516 546.899 553.542 547.025 553.583 cv
547.051 553.592 547.08 553.596 547.104 553.606 cv
547.212 553.651 547.315 553.714 547.413 553.794 cv
547.445 553.82 547.477 553.849 547.509 553.879 cv
547.559 553.932 547.602 553.985 547.642 554.04 cv
547.646 554.048 547.653 554.056 547.659 554.064 cv
547.694 554.117 547.727 554.172 547.753 554.227 cv
547.756 554.232 547.759 554.237 547.762 554.242 cv
547.785 554.295 li
547.846 554.443 547.875 554.606 547.875 554.784 cv
547.875 554.966 547.846 555.132 547.786 555.277 cv
547.784 555.277 li
547.724 555.425 547.631 555.564 547.508 555.689 cv
547.386 555.811 547.251 555.902 547.105 555.96 cv
546.959 556.019 546.793 556.05 546.608 556.05 cv
544.743 556.05 li
544.124 556.05 li
544.124 556.669 li
544.124 559.063 li
544.124 560.44 li
544.124 561.06 li
544.743 561.06 li
546.608 561.06 li
547.474 561.06 548.279 560.905 549.022 560.595 cv
549.764 560.288 550.438 559.827 551.045 559.212 cv
551.351 558.908 551.619 558.587 551.849 558.249 cv
551.849 558.249 li
552.076 557.914 552.268 557.561 552.421 557.193 cv
552.729 556.45 552.884 555.646 552.884 554.784 cv
552.884 554.622 552.877 554.463 552.864 554.305 cv
552.862 554.272 552.86 554.239 552.858 554.206 cv
552.845 554.055 552.827 553.907 552.804 553.759 cv
552.798 553.727 552.792 553.695 552.785 553.662 cv
552.765 553.544 552.739 553.429 552.712 553.314 cv
552.701 553.263 552.689 553.213 552.677 553.164 cv
552.637 553.012 552.592 552.863 552.54 552.714 cv
552.54 552.712 552.54 552.712 552.539 552.71 cv
552.519 552.651 552.492 552.592 552.469 552.533 cv
552.244 551.949 551.93 551.395 551.521 550.875 cv
551.519 550.873 li
551.517 550.871 li
551.253 550.541 550.967 550.25 550.661 549.99 cv
550.499 549.852 550.332 549.724 550.158 549.605 cv
550.098 549.564 550.04 549.519 549.977 549.479 cv
549.953 549.464 549.927 549.452 549.902 549.436 cv
549.559 549.224 549.19 549.048 548.801 548.907 cv
548.564 548.821 548.324 548.743 548.072 548.683 cv
548.072 548.681 li
547.956 548.653 547.837 548.629 547.713 548.607 cv
547.709 548.607 547.706 548.606 547.702 548.605 cv
547.634 548.593 547.563 548.585 547.493 548.576 cv
547.435 548.568 547.376 548.558 547.315 548.55 cv
547.291 548.548 547.267 548.548 547.242 548.545 cv
546.996 548.521 546.746 548.508 546.493 548.508 cv
537.199 548.508 li
537.199 548.508 li
537.199 548.508 li
536.58 548.508 li
536.58 549.126 li
536.58 554.302 li
536.58 558.457 li
536.58 571.754 li
536.58 572.372 li
537.199 572.372 li
546.608 572.372 li
547.729 572.372 548.773 572.173 549.74 571.773 cv
550.707 571.374 551.586 570.778 552.379 569.985 cv
553.173 569.194 553.771 568.313 554.169 567.348 cv
554.569 566.38 554.77 565.333 554.77 564.212 cv
554.77 563.651 554.712 563.096 554.595 562.547 cv
554.534 562.257 554.456 561.971 554.361 561.686 cv
554.861 561.13 555.326 560.451 555.716 559.712 cv
555.821 559.512 555.923 559.307 556.017 559.098 cv
556.322 559.654 556.574 560.227 556.771 560.817 cv
557.126 561.884 557.304 563.017 557.304 564.212 cv
557.304 567.169 556.257 569.694 554.166 571.767 cv
554.164 571.77 li
553.122 572.816 551.974 573.602 550.716 574.124 cv
549.462 574.646 548.092 574.906 546.608 574.906 cv
535.313 574.906 li
534.051 574.906 li
534.047 573.504 li
cp
clp
554.121 572.524 mo
553.09 573.305 li
551.934 573.993 li
550.371 574.555 li
548.871 575.055 li
546.809 575.18 li
544.223 575.243 li
544.223 572.149 li
547.637 572.008 li
549.777 571.524 li
551.402 570.555 li
553.059 568.993 li
553.934 567.243 li
554.465 564.774 li
554.354 562.326 li
556.462 559.241 li
556.996 560.274 li
557.402 561.493 li
557.672 563.305 li
557.672 565.993 li
556.715 569.18 li
555.684 570.743 li
554.121 572.524 li
cp
.922759 .654536 .143832 .0126955 cmyk
f
548.128 556.049 mo
544.124 556.077 li
544.124 568.188 li
.671504 .275761 0 0 cmyk
f
544.204 548.743 mo
544.124 545.805 li
534.809 545.805 li
534.184 546.055 li
533.777 546.68 li
533.777 561.06 li
536.84 561.073 li
536.84 548.743 li
544.204 548.743 li
cp
f
548.184 555.524 mo
548.277 554.805 li
548.246 554.18 li
547.746 553.524 li
546.746 553.192 li
541.371 553.192 li
541.371 563.489 li
544.66 563.501 li
544.66 556.368 li
546.746 556.352 li
547.621 556.024 li
548.184 555.524 li
cp
.0654612 .276554 1 0 cmyk
f
541.492 561.07 mo
533.84 561.07 li
533.84 575.149 li
544.223 575.149 li
544.223 563.556 li
541.475 563.556 li
541.492 561.07 li
cp
.163333 .0175174 .98996 0 cmyk
f
553.621 561.055 mo
551.465 563.024 li
548.4 563.857 li
544.134 563.961 li
544.134 563.595 li
541.488 563.6 li
541.529 561.058 li
544.134 561.06 li
544.134 556.18 li
547.215 556.178 li
547.996 555.555 li
548.175 554.96 li
547.746 553.868 li
547.153 553.447 li
544.134 553.461 li
544.134 545.734 li
548.747 545.746 li
551.559 546.774 li
553.402 548.399 li
554.746 550.305 li
555.746 552.211 li
555.965 554.024 li
555.559 557.055 li
554.771 559.15 li
553.621 561.055 li
cp
.0862135 .994842 .98291 .0115358 cmyk
f
grestore
56.6934 569.889 mo
1.09031e-05 569.889 li
1.09031e-05 555.716 li
56.6934 555.716 li
56.6934 569.889 li
cp
f
0 0 0 0 cmyk
%%IncludeResource: font ArialMT
/LKDOMB+ArialMT*1 [32{/.notdef}rp /space 15{/.notdef}rp /zero /one /two /.notdef /four /five 3{/.notdef}rp /nine /colon 24{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c /.notdef /e 6{/.notdef}rp /l 147{/.notdef}rp]LKDOMB+ArialMT nfLKDOMB+ArialMT*1 [9 0 0 -9 0 0 ]msf4.19531 565.78 mo(Sca)sh19.7031 565.78 mo(le: 1:100)[2 5.00586 2.5 2.5 5.00586 2.5 5.00586 5.00586 0 ]xsh.749721 .679194 .670497 .901457 cmyk
%%IncludeResource: font ArialMT
/LKDOMB+ArialMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period /.notdef /zero /one /two /three /four /five /six 2{/.notdef}rp /nine /colon 6{/.notdef}rp /A 10{/.notdef}rp /L 6{/.notdef}rp /S 3{/.notdef}rp /W 9{/.notdef}rp /a /.notdef /c /d /e 3{/.notdef}rp /i 2{/.notdef}rp /l /m /n 3{/.notdef}rp /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]LKDOMB+ArialMT nfLKDOMB+ArialMT*1 [9 0 0 -9 0 0 ]msf125.363 569.786 mo(All measurements in centimeters.)shLKDOMB+ArialMT*1 [18 0 0 -18 0 0 ]msf.139648 15.4468 mo(Westland Lysander \(1936\))[16.6641 10.0107 9 5.00098 3.99902 10.0107 10.0107 10.0107 5.00098 9.34277 9 9 10.0107 10.0107 10.0107 10.0107 5.99414 5.00098 5.99414 10.0107 10.0107 10.0107 10.0107 0 ]xsh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/LKDOMB+ArialMT*1 ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 23.0.4%%For: (Onno van Braam) ()%%Title: (07820.eps)%%CreationDate: 04/07/2019 23:42%%Canvassize: 16383%AI9_DataStream%Gb"-6k@,o4OuE6o!;?I[+:nUs)d0fn&kF-`0ng3?R!(^NC]>S&b5iobSt=c0h<jGek7gd-,JuX+Y!Si+BKg6UL[E=L[p;5%8Ud8_%r49'+'j^Ba67:T)A%J0W_<X309Q6Mp6Y\WtCUspW`.Xk(.ced4)Y8M7S<YIsL,#628,^hG]'I]A?5r_oC2J2oo04)jrodF5VI+-2%>ZhE/i=(mH-f%u+U?[&EBc'R>\bnL:._c_0IA8Kb$u.T5P2MEK^/:.S;lC)(`FgHsDl3]1</fK=q?+]%i_]@.iB02oc:.n.#K29F%ah"FfK;]-O!<3DA%S;6WNgCJHp.*9ibA-8sn(.\.n7SLm9[(hfrt:L\[AmDKH1QI&j9[OcC=_k9'5N-$$BQL+W&h+ToY:J:*d!F/%ACVbncY'"h3la9o2W,tYT!"&rG<25CB&1l("Z*#O'umD60s35lE!V1:renQbJ'M`Xk5?0ub3u-Xa'$nf<L:]rQr577HHFWc-:c9e%+BdLJIrQP0mj)+c_Ip\<qB`/=>g?am!dh+iIS#:'Jsi51UAP9T&r!&p%*&8"bTKKC6#L8K`.?!#io2UI22E!2H(@aHphP=b:_OHh%Mgers(e)gdU9GVtfGhSINF-o.-Ut4P9UM'A-aQG>%hM6*iY.ab3ehbaW[tFLfCQ^2\J]Qf]QkdeCfE#V9quWiW0BW`7^D@F1]>Q2%<,7]+0a"g(p#e:]:`j>a\ss:g[GMGC7%RmGPfC_I3kD0-$6Uq5mT2F4XW[Fn">F"W@GCts+;d5B7"m6doONt9.iF8]6EK08!VAhq%<=p&].YGm/-J`ih\1=L_6;r$_*u>&+TgAgXQH,2,e'Ucfn8%ADl;p;nrR%`3XSoqmfut;%m,<Z-m"J*E\\po?)NZ%!Z_IO2bS5M;%5lQP3E;`Y']sF?q%:l)lI8<%(:O^SZ1Lgc'oaS[=,hnO:0*ZA_9;\1a@fgSG8[(S"Fu%f+Rb`G-QH[r!o9k`RS9=^',?_=8q3![[%NZ(PgUXG=57X"nhe*7me-#66oQG5nC2lsk*b3;P;/?@aPC=l\$XS=D@drhMOg1c:@]Iu9SBh'`AaH^pZV]E%>bZW@S90.9[qN>n]%D6qf2)j=eG)JBu0#4O]7SJdVTp0qbn:`>PjH,":AP%[1TXDoTo3<lm"Zebp>9uo.WC!C0u2#\M+VDCksWG3?(g8('GD6U'6$qIY$%d7U;-ajRP'Rs'0;C##=V#Mn@o8S%es].lthk0%;m8il:qdA5GNTW%;*^un"#g6hX)LR"M:FL1\e\M;&u2FkLlPK%O#IVh?2+C3em%XUc<9>V/e=mVoQOm5YT_0c8137Vh/a@[mFRfc=SKVrLsu8>b'JUeP8Rs2cWY-mQVV1b!,IkT:FJ?niC2rEs3b08Ii/c0d5j'G-aJ%2U<K3Vq.Z`7Pm?%N2WSK.<`>f(DZ++[^sgo;`p`8j;@/"2,QVPX;sI)f;=;Y5l(LQB:[Ft$6nJ&VHkC7G<MjlAE<-tjV_i/)?&&:%Y,?H;;jOB#&sZ_`=oBtX'K7S^NOtPsp8Wro24\oSY2!h9#.;GRjW.S,-*&mo+dbkXNV4Y[o3o6hR1K/%q$cn71c0O#7LeqaWd1nO%o%@5i$9i%QIgIcrQQ\/M+#ZRob'*`%-5NmAd8SI;-*:7m=&^8E!FYN#m/H9\DH)*-)nm\+iD%kqo;\/\()W\8=s&2AamQA:.PUbU%V-)Ae8cX%^W8U#$%j/"FW*c4T1T7n<D7,PRrW1u3jENFpc5WGT>ps]IFps8[oOMZDZtk+4YKKL6G178r\SAE.L((hbXjFIdcKG@J%'R7_6:f+5XN+(H@2oT4b5)AQ0jnD&he:1,sIi!D`1Y05?/'BUVkTtVC@sk&bQ2>WIFZ^Pda/?i+a;7E,7s2][rafR6fup<Y69hT%%'=I6f\i)JI-\/$gG"0^eIkgepZ)^ummecRtrS"J6nIs_2Y1No]<3AN:S,tF=0t[HOM;YPWBUXFUR^5uiRKTcphcFn-$,P^$@5RqZ%q?QqK!XOa;"G.:,[d=u/q]KC):IgTO%-m[uMdVF/gI3r\^L'KphS3*+V.\!jS`Oldl<c'0Up<'&f\,)F129OYDcD/j0DGWpW&,(a%9`1=#I+n*l8#*dsm(t8W0MF6!1&ZSk*G*AI/.LR3j&M;2@(@Ta_^s,`BO,d&YBo-gs-,RM2*`2cf=DEpC-:A-osruY\RC(2o`<*,%m:t9LVeEGbN:u:?pB*kb7K(*SX\Dai[0Go'm+0e>L@#1P#uR>01@NKsLI\,U(ai5ZPtl14OKr(>.s?J!qI[3dMT==1/tQRVQkb1t%:*u`CrF49sq:"irr`A"4a8==qT+`7&rsh9=i8Fc/^\T8VL&^Cko/AE"[4e]*)P>qF<VC46c6["WN<_^Kpgn2[JZ<[P9m'(tVE-"3%Z(9OWC\VsE"`ec1eZKlJL`1s$2RQ<aC'e0KUfO.Y')ZJ@Gg:eIAqe",jT:-h0(T.Q&6^A/X?`FnK#TUH+K-V)@XMGsGq;9TBY)-O%A1=3nMSR;r,XPH<6mtCQ-!$RsZUdW?fTd7XSSIqcPB+7-q%jE=&rIq_rl#'i3;]SZ!po'l\d1`=P2-Ms2^I^@8R,jphq.GTpd/nL%&SJX,62B6qGQ0:WA:O.acpS#T9/Le.4_]Rg1$[YIKUb8p!Gu.6R31#FIH,P^ph\)N$*2&,IiFFq1T)@/P$\dY0,T/k0>\fqeE""<%kd:WBcYnnWT`DdSmktUD1`0KWm(p7&4"G%VrqLT*o=;Ul2$A$De;o)J`AI:CBfa-aQ;M(fmK,Wk"?-8-"EZZ8rgeP@5u#5RF+>+.%YEMh5Ji*`[/DNtq2g=L:;t#WleMMN)F%#YMNh\hAs8K.ff%D"48XoYg!JiCS5(ip*IXpKKd_c[lL#cf^@"9dR/):6E"P-dh(u,df%pU)*478.n9&LbQMHTjXs,;&]BUB,gM<*bJS'0s!(,V:rOkk5TL6(Vltb4N"CN#H9UD^O0-b#Eq:ZM.ufrLg#]D;&j:X-nom`nDsF%4nhS_1G'=#2CH:rdHoS#N'IE41anU4jG3b.rhK9q)uu!'JCs;aq'3%_;"=;X<%SOg_J#"U&6)chrO"5Tr/2"#^2LO1@OM0l%:7NW%ltG#S3:TGLh&655_i=iqY;=>p$9(m.s,/T_24N6,&eg%KTT%g!"E6uC8g-j5W5&KgM&NM+E4hk-6ihE3f1Ba4Z:'Q$.dj=pn;Dm.%2rfC]f_j(`L+etpc"PJ(`O@0pqo?YS@q,HmZ/;!P7HJ(j(P9KO6?L0l+X-%f-^$'8Ig!-fRL"(;r5Z,B@p/JS/F,NdocMBRX_$So%[%]hibGrXhAF<IE&Z-aW<<Z]0d)>Jp(gH5HbPH_FZ:`n:QLu?CqN#4df!=k(#lgYk!*//qo:gtd;J@eOb/p+7Ic+pDi#hReJ)7j/%s-VDfbj.LUom>Vs.0>Rm<S&Nk'$.]m3`#I8B@F)R%%rl%X"Nq0JsZ#l+"R5<hT@=jhnQrRnbdmTo^@:Ef`jY=i/EH5n$G%FEJ8gp%rVU"]oKP:#ItQSS=8gs!2XA+Zmsi]:s!#.C,l)B/q^:tDd`\8""_rttrf'iJ;'\^VN=e%%UKJL4Qft4]Dp@&+p:Lim/&'@SO07tZ%FG2V*jG-HBgVUFH+3M"*0q0'1TlU*-./i`,/n2j!+24"M?f_JH7M$lj[Hu'89.1\`e^83!`cK#FR5J%-Dn`'3CfI.-E&o-I6.Jt0%V[$)72-sJJKkQLd5nR\Z#>nOtjl:AVq2;07W.H*I@e"gc/$nDC4uR&>q9<nDRc@>Fag*&[$M?^3<)$LU$+S]6o7S79<6j,@D[l3.%g$VaknT/K_MI9;5^V5U;Mu!C=[nbVp0+'YmC7TmueRg\o>\<r3I:Wf[%Y*AC'JDsN_t2u]5P!R%5D7YYg2&\3f&ni)6Wl0-RFM4_%MYK,pmn2-oFSj=>0jNKMB>):!B(hP#89d+BqkZ3=mX`I^DiBH/(6\Ypld)]?8=t?nD@#CQg`#@b'(5[Yk>&]`B9N'40F*tI0kQcj%L@7.`:;-8np(8;5=&!l4Y<QdoN93q4Au5Da%KBf%4hnH"58r-+mPXs"i.!hOs-".FpQlu&3[XfpV&6hrT_%i+Y9j(LPJc3j%?W(8%4>7d?(!$>p]qEjMs"R7Dhk6gpf!#+ihY;"iK.660ruXGI]JZ,H<@@+-)&TZRd@.<Z%=U(TX*O\NMp*]GDB>tU\td#`S$UC9H=nT&%Hb4q9>a4]go\5F+o'c%)`[_?q(Vf:]mm$'^msfP*GX^W1KID:23ZS=k$M[2bXH`_cY+KN:AMg#9%([bLDtj4gU&OI,%#e>k#uKih%[R:(Qm0GVp\VHfuPUj"aYg#57`r#-`%([@s?`X^kF$-s=*f]\t.&N=78^Qfd3h?qeO(slU^HkpJ$3#brFt'^Jb$V(-rH5^Wh^8;I%Tm3Vj1VEFL4l0P;(fOr8MrCiX^Wl!#CTZI\GA"\FY!NfhJh9H&CVsLo;nU>qe?gNSi[F]6enj%[A^q9*e)!tqVW3f\GKHoog-&T]%=6k')`E"RKdi<QFp'@NkrA_:L^TQN)13VEd*>sXig]D+>Jadl],J5f>&fNUgYc&kKAM..THp=+ML=:,O,eNS.$q7YiTDlKOY+b`e%J\<4[oqV<kP)_)EF=#K9j4`.Q5b3OQT;I+O7h']VcecL-,WhcXkWM)"!e.US=Lt!<q-31i-E*TbmuF*p(^g6(a/aSW(:`J@a>(-!%DtJrB)<6,(F@H5bkpJ<rnR(K4$%KY>Y72ElK;Z5be:t<4+(V9-?/Knb+("9nT7J']/EN*saJRh<>]`.EUOQ12!I%?0`gbH4Php_s%.6D*\e>W%[(<W3!SY1ibK=..gUtLjTFY<ukN."(SRK%,9)n.[rYL0\fdmeR2_'M(-$14Qb$hJi)&sZZL!ABD$9pY1PQgH?V>U73C%o/lP[G+2<;08sVcemrsUS9(Hn8,CY]2?j=eT48CQf^!<GA%'&Jp?-k>%uX(A3$nATW[I:bTZP\#d/i2P(+uMmN!%^r[LleLm'P@b%f0MWIMrnb7)(Ajnhd9_-fHN/'h_f>28"H3JI93>sS#OScP=rdSZa3LL03%F&')k%DR68![)n-'c"R(]i*48rV(5SA2o?63>e_"t(%\Q<,R$_L3(&<[J$>WVWIcL]dM0qFBQmS/2uFD&U,]T/u?=eB]WQjhf.ZJ(Q5,f/Wq9G].)f=buU<stJ6?k6m,nP&fJ??l-X,)QT:%g<EK+04nWoR]IpD8#A#hA^?Kh%_3cVNT7cGe\t17(<4Lt?`i8q(gio\U-BBYM%aEE("g=5ag&$@1MJ1>i"S8JaWKg`N2ab&hOP*j%CF'#qY87AS\5B<]?T6EcgSqSDi!TjH5+7,tZ]Q7e^J9R>Qo5jMCCK^,!09uba_H5KdJ74^?bTO6EH;,1^[EjO<n6m6j;NI%,54N0%G9i'4GQB@/qWkonEt`MkP:n`s1HI,H[Ik!Fqt.Vg+4GUmq;2lH)i`H_!V1@iBj4j@;KN>YkG.iY8\g+1D/>3n\*;JnMTKJd^5]qC%i%DHt0uT4S2+^)>B&2.LMUIm%R-'qB]jDR\QC09IGT/P7$L33SdUh?c@#u@"pd*om\':cEU0a<_J*[^514PD:C$Z?CIq*4Bn\hh`%j_GffB"lqgARFm5Rf2cP26t+/dG#?.!Lg,V7cZ')jNH.5$I[J:#[>jq2)O#E`8TVCJO\:n9D1s]?62GQ7H>t>?_j2CVu._Z?ij0O%fg9Z=eHpcu(aoiE-"$6Gb6+rX[R(DW-u)rm\@l+dJh]?`LVun#M_4h#imG7jqBj%#bns<0k'Tlj!55_9?lW]7-Lu7e1qW@1.q\Sa%E'Xs!!<B0.5&@aKhNK&1%UMnI7BkXV;.6lkE4"1&;(=O(o^r09KGEr7#/@?u9-Bq'_3(3T-/lTplMg,U6BJ)E3E!C<Q(OiN?\GU*%.9>Lr5@-;hdNAh_/l28EoP3((Xm=POehJLe;A*FVpD`E-6(^ZJ;R:uJ0+&VYVHo6jfZTJ^ot=!`q^Y(f1oB+&YkD@^<#V.rWNj`K%;6l3DRF`#'5dkRUXFF0?nI8kRDKPEt"7+3;UH_?&o20Z.3l1["lb*b)Y\_g6Zol+2gg:fs/0!]ia>e$JEQ,q`)AR&:=kX:b:NJ&X%=9@YZA<a^@)?$iqBc4'?S2nLGaI/:aGDA#YLE^A:f]Kai:@P/Wc)I$T]B7Y9q.aZ)d[&)p[&WLgpncD29Cm`&l?Ifm>kr)^$C7!t%3Pb9m2d'rq(+1cAk2bXs=-JsYc*+W)!;Y^\/pH7n'5nW"IYQ(s0<E'dA)CA*R^]/c`>&I>b83<J9(k+Q\M&k_A3f3%aXm^WUbZHJ%G:bdb]%/]7\ro3>e`<7J^u\:8)$gB9F1lseGmc_S*f@L=ksXDZe3]@O9VlkD/;ee@J\^?,$\Y@?ldTf$2:K0kMs!=3d_i^r#Tjl'%J,Jh,+:rtI"TmF_)hC98Cr7(;jC5jqL\!a/,p9!1=/S/CCejJ426FU"qsY0.K"j4Nj%RTTVY5[)pg-_O^3iE/@;CdMk2.,UBD?P/%IV(ubmg+E/=Q8UU@i'VQk\")2'$'JQftaofdouRB"]*MJr)r]HNjfYc*I-G\6lXauU#)UO:HOo14.kn8X%E4\%@)!klhD/8i]On+%A<"\Yrk-(>nbi:CB*9;kn<Yb?KMHq^5H-:sZqQSecMKr:olBPWnu.L/q0J=\..$-Zl%E/$g(lKdGWB(.S;%CHbdIMaNkFH=S%DJ,%f%*D@G<QgMM.OV!d2+"ha3qdh8'%6Y(IE$2BpX1]jfe^Z,<XhQU_MplgK(?ELIWL0LhDmA_-tP+%poVBVBNsq]4m[c\(uCA7+^2<%$*YbdJUEKk&J9$cq$ajFFoDa/?Iqf]Z&>AUH@n/Sf1p*]P*X<lj[^&W0,+8'k2GhkIGI!mBCa0;K^FUAg7PRRggTXo+!06V+(q11%pIoM7\Wcl;k[n(ojHNgL3Q#lCh/A$pTBX1j4YQ.<:.pIbhRLgR%o.:Xq26GhqE/MkZ$`fqWJI&8`ZK[UHY;Mmf\pY@RN*6;mA;Bq%WF<6iDU*VQFmsdGa;NGO2?2;YA5^%++2-`\.jh6J-iR_W2&CV;e!!\DcL&j)k7>BEN9!J['A'FZEi712/RKpT:\D\#?OkUd2*#N1%kt0p"O7i,]<0*$>1T7iD8lt/+:+VSF>/t?+&s&lp>P5?=:Mf)qnRjSC\[XV(*`=n^Iuk*=&I:l%GT[8G/$RD`q$7+DG7r!`,T@"/%S^"C0)s16k[pM#pdEDF5_"OqF9eoK($7SZ.NP+2Q?m.;R\3H4iGX%L_7b\iqMPFtm_L[^9bAJH4PIh6>$F+n"Uk7ld%n\Uurmi]G%*/GU-T*!DfAJEc\hb+)]<u[RCcL'q7+T@o2#UJ^*BHZ!r*X&u=q's0U<?iUjB:ApAI\R&,nGZQUfa5@s<;p_Icr(Zh5VGYUJ_cg2%CLF>sQXU./_KTbQnF3Ln34_7d#?!oQ(<Gi[k5s>7i*.<GSnnT<jj-oa,W'r[S<h12^j1=!%MW]P\%q*&//fplQ.*NK4l$QH:+rEY%%<m:8\=J+c"R\cAq7u%F5mM.M^;!MIY?1\c^jB)<$.Nms.tQj]GVd]]*Ynhu5h^cqQobT_FrrmMUJg)2nCb>K%*WmJPE!@lD8$T%%B.c*ZR:(7ad^d-GLh2XWNVG@&^;4+)p,5><@c.W2a</$,)qsCSA7KP%pq1UV<SQD%9ccJWZCU=(7cF#Fg,OL@m;E]2:J)S&k(U0^%h7jkGgrsZ:)\3pQo:55eCqNaLD]A?MeD/b>'fNW^:r"25Ib>R)[8X#8[WS>J2_($9?s#JT"JafL>qfS^:4g.RTEXG](^k)2g,->>%^=N^hY!3t[\]_<Wn>*o9K#P@Y6*U97,mC=k#P$_>0Y/!HdDm3B>.HNt)XYZip`Z/Wpd2gUFg_sRL=>P7NRC[>F)*/XhMf,hG;d"F%o8cU+E&6.rTAMgk&'r:Ic"rEtg,otrn]d!ES\06]1HjC'9C*^<4st9lS$h)1dq7q*]X-:<T?]C9Zf=G%YW"f9KgObqb@2kXhg,e&%QaL6mRAFDerQF\=.)WGBU#XEu-Zj?W&.MXh6n7i50tRt0p3WF*k!rJZID!7[6fV3W&.UO4;L#7o]F$%'K5k!k2tk,#Ac=-KlD>f?%;#"/'4V(oTpP.XAGip4IG]d7%f=7stDB&.FGaQ*9K]hmhh,\cH(Z1)hanm[Sp*HuOGI@1XPrTpX>Gn;iF0#4dGdMVFNJt>QkFIO5%QLYUA)AH!)[V!5&&_Ok#_h13"dF.J.MQZ;8%R.7&,[]39O'I38N)YRtE9-i*eqc0/`l1J5_^U^Nk'SDbPqa3)A2[JKWl<t+o]UFd%L`V'.VU9FYf8SRYAacA^UVM/^HWYu*U7Zj.h@AX2A(uk0;fGrdaaJ%KSOgH]'62LR^']p9gCGOhFW5l/o6.>7o!CP!]fj?/dIp4,%cphrY]p"G%/GIGt@[B0eIdHL^IM/\u9LH(G$S;s[D-X-Ucq`XRR+W&YVjBLBn^5f\ITkt'PT&$/cGN:XghFEZq40gbG8K-R<dX@]%kV*cRGN7q4qXX51Ibo"&ij\Kb(k7%L]861of:D]LrQ$9oRAYsr'!CsBWQl>q8Y"[-mLm"JrQRatr8o9P59'<[)e\/Z14FXW:MS.I%SBT8S?B_5AR@&B73I=JP+NhgPnnXeS7+1t&GSBF`7rk`IS^#;Cm^A[uj6B^?bRL7P5'.\lqEd;o),9Z,Q"Yq;X`50Tbt&TE3hIG_%_isYn&Gkaj"lWi>-6/':IGm<cqB4R3-]WnX;,N%n@W4u!jsi_qOeV;R<dqdqbA-05I*jlOi^^8U8K2k"c52Y,ZYW;rfN5u=fgBRC%]&2A78]J[1<18]6;`WF`T#pi"\fi/.ZQ],k=c1@]Gajm]GICL_HTQ;EB`.aa;TL+69(fddVUYL*^@J6fK[oI&8Q#.oZN1!kq"=Pk%]fd'UC3)/a<i8[a/Jk6FD?&[-XIWu[P4j.1GH#`2;]g=iPS/)S3%sTcnEj>mb'3RPG@M<Y?/+8ih<mI3mHt`J!ar?pNcuS(c?Qg&%4imFcH^j3sd@QRc0'q\?>LU9#m\RGF]K=m%S(5$\I4c.spJ]b+mXD^q38LcPcdD^;f&QWnr9,;NE4F__*aI8WNJ"^pc1?SXR4KEI%*1p":%s%?0_oqZ=e&/Z8$Q/i[EH`BdMT<':UVk9sb>DtY/0ECL41V-.\>H0eV;l)9Xbp>^8gG*A2$^g73q3!o98g3UDE?[&BW(=Q%GHLMX<iqS=g@'H#oW.d1F$A_5RFfZ&0Jf:W@_PYsEOdZ5dmERY>FEa]ZE<unD/SrohTVsqbA$CGPXskAmQ0Ufq#-qM:PKClq2Da&%c/1VgdeW>)i1[AtpG"8d,s-G3dcfL$lD<2+33X>b30rUYlg\]]&o'FU#rO>q5@`*_$)aD.:NGPgn)V3H5<Kg"pY2T-eap]-F>Wi6%HLoY-SponDPI'IX\3)i0K!DXS[I\Fi\MXlC,Gh=&q8)+Wm5`,_3nVXDX;K>3&&j/[+l`qF.pM9*@d!ILj!)VNDD)L3RI!B8VCPo!%AG-(k0t#iJ9Ioq:b<%_/GraN,cBT"YKtUCPPnQbc)tTWKB>1iT(-8j2q=Nlr?@JBWcE74%Xne5_(i<NCoLR%>\n]3Kk]J.Rk,sc`%&,#d"9-.@L/oT#b8L&U]3DNo4/$Gf5\/O"EN`ELPd=/L9)_"eAZW@$:]5\e&aZQ-_hE4h:=#Z?.?LLpD4lC633enN\X`4:"/t/b1%^<g/sh7C.De3Y*uPLa1A?9*<,\1bfFHhZpa7H5Qb^8X<W?>f$=02I2n(oVR]O1UtBd:7<3GP!l97uL/jCV'Id0",,ZR]lD%kNG2V%n=0r1+.o1kj275!9-W^1^$K%memE<t.`I`O[BI;:2'r$$$9Yb']B]+7>N4cls)o=>e[NPH-h\UH:?V*!+l@WrI@<$.S#>rBg/7//%Y4e54=).?Unl:,,\m2Dq2K-e3a`dWoTj>r]IA',Ab!.aQkGP_bZIAed?8]5aF)_!j25E$'2Tc8c)5Eh[]5EHQT8cn9mXF$X[8LI<%'ZAIDW=jYqpSO]N8%]c.FiqhBD5Z9\9Y/YnFK^%6Zhr5m?5<QiIOO<tksshq2Y\,u:Chbt\DQZ/k0e!_qD#/Gp[_His'a1lK8ocE%i?5O8)%9i*_V&lYU2LM4>Q")sOlR!A4)/4_3]drB7\0D7r`J)N_/[$Vp-'P:!b]6oVtPQfJ)6aI2C8GZ@8'RUQeTX:[X(&qL0FHR%41&X54Q=m2D1Z"&J)tfO0]25:Lci432WOfR<ouO]@k]5_k6c,RRZK$n7Y<Pp`(b7M,0lPNY+:uj5F8WiXY>#p$X:0C/W8l5A5obW%fI$q(Q.e!r4Tg1C!o>EQS3_`#C^+JLrWat*`Fq5GFJ'48DY37V*?7-/%]p'"03/Oagsnu?E)E+smTbsH]]\:7Q(p+<A$8D?feq'%%IQdY>e?,`dcf4\eb%s]U2Qc8L7<^2=J6C+fkeDVj2G0OX0C,n=kOPS/[FunIb*l?O:MRZ)7m*?!U\.>j]?'I_MsgEjic"Q$Y-5mr%REN!23ECm(WBhN,\sC+_GFac'0D>?+:1^!(9Lg5WM)&]6'&n%ZW*Om2dkPmR2D_A(q4KpQFo,s?D4QQ'%AiCIbkqX"fBj@P;t=t_%"JagjFfdNoFn0AFLsoc7m.lf@s.iQJ84oLU`_q8_6H&^O/O_5BpdMW0GJ3tuhqCf@5F'9iH-I3r61A%ko+jsp_HaZ9ZBj$TakY(P%rb0KSpO^#$bq"(S;i7ciqo/F!O*A9dCF)+9IQ`m][+LSc5L$jr?>47gFIuoA/H*Z[H?M8Gm=5lEj4>>b*Q)f5B_,$ENsY]5m2/4j%[.XmmASjs[rJP,C$]G\WX%i,Tq(]-Z_;:oYn:LnbEoHI9AQpSVpX.b\mR'_d4p,X.e:ETeA[_."WpYtS\N`!^j+hC:r'LQ?ibX;0%1^nl#f'I/NIZ:Z3Ni*!K".@sL'9Xenap2*s3m?!gY#?+:Qdl9q2hr00>#&kE;u_6t_lJ%q?c+,3aYbF$n[FNX@(6DEB<6:\PcupD%%@acIRe:nEa+.4G)0Pj,opV^e.lH_K/[!u>[?1)P:mI="?+1-pmB9>7!Ls(q#qhUYY%2l&np?s2n8d>oqa(rOhe]p4&d-cj/9edM%aOo7qeq-Xnr_n0]h%qW(8/BI0g$<fKXTRd:`gBuhM+^e=9W,5)0frXj23sT:f/V,7B3s.<aqlbJmI_WAKp4-5akFSjdc0]c$'EBW%g7YOIMjj^l7Wj3;oR6".Wca$0Q.dn2"W5cBE&>8<pOD"NY&mVM5K3?b%^u(GpH*"s\.m8b-HCbaDL33[.g1#>>M3mG1#5fH:@_"r%2g'1hGTe*p(8&&g;NlAn/`_Tn/]::[OQ34KO'I$egJ%"J-FQkM46($iH7gIkU"!C'0X27]bqe[MX(#gN1+LuF_-nRT88P\8W[]nK%TKY57#jnXQa0XRA91F5dn"^2`iY8sclbj9ui4P/82X`CCrN/.g.+dJ(lCN]HWd7=O]m>!"=0mb<Y:FangO2Z\pBiRQh.^=0bO'uF%Kue8?jU2[,$L])>\^nrpMX,BY]<+b>QL1W3quSt:_motYr(QK"D;DI;TZP[LC\r5W:Z5)Sl3h.^g;dg:&e>IT)t%Ld\M'b.6t2.'%6b\Fg44;m?IQAa/A!tN2G?j1?.:eG6p>PCAYd;qpe9^o>NTFB`%]c#\Ou7C1h0e,I^7I2<rQrqmHkLdtVi-i0-al7.g,nVV^6#XE%qiXP^)d@sI_8T_Y*BYEc(R?"aH+V!amVI1WCf@eOohOS:]A7;/#33m6*(8dJ7]*AT#HS.@`DA%2\f\T.n*'<V`oZha#p-,"d;*Ru%[e[9\e:TDRm,9W$*BI0.K/b,Pb+3Q16p;W'H;Pu+MWSc^aRLq"Md3Qr+"d\*Nt\T`_&':S$754r\GF4E7*i-U_S5iQJ!WB4ag4))%G?1+#+In&IhK,s>_u,OV4),k)jkLmCmkm<^?YLeQ#"*[4N,7&HM)&^e"(%K%n<&?=9Op[^P676.)mL;_KI,_Wq.QS)\W9jqPs#)j%f4nNZ)5Ve'V3aRD2sF3u;pMd#h9XU6bAQ&Nb"*&n2oa'3V>6L.j(#P9krrB&j?E"gZJ?$;\^qaQg4a?YRg0-=^8pOAF6(iK<B^ZN%ku)Nu]TA%0cP^XP7Pi_Qd@ZC3=0\OTg*c45Tq^(8He$e=\p?9(YBFc>ZS"FD"*$O3=@H4TF%Y,R09gs&L>'NAr_\\+4JtR[Jc5?A%64Tf$HRG*sl*&9?[E)MF^fgiV,j2*^SJ.?_05`tE'p$g^B08c0IVc[k?APu6'5;@!qC"`j?h[\j(>5D*YB?TO$'1k7NcNt!a,5_*%,H7=9%jSG8Q$a5k1^-K/#Xd3qd;6FYT;m6tS*RHX.,6D862@=+]284@EB_*8f=co,mht:k?RT3nBZ@j)*9t(.nY,-r>"\$OGPn,B%5\]cj-QGbqX-,7h(S^$j?6L[\$F.M/pUDm;oF#uqBGL(u=j8AbdOc?,"FkI(6^?esn)NfZa/h;BoS9oNFL?2)#t:B)liP3&S^F91%#fkJnoQ@4@"kd5!)'r>M0P_QF/L_%6G19r$0RnG!@[V26i;BE$(/jOPHSk6\\[p;$9AbC@e&?FfoQBi+YC6''qde(o7f]qVmmh$G%I\mo!G74;gI)KUN+0W.hDOuA3E>`P`X3^C"K?lX"dk&098WM$E2DiaYXM!0A@sb-&(0Kom:sSS%r_pE!I[2kKlKS&mr^f!K8`"C%%$5CAqrc.q'Y0<r0o9L#A*<X/$2/2E3fk@qh1\n8)<6>^$lW-*af3`IE@Q:T[8"%Zna4Xo/T+8E<A,_!7lFTRa:*b0sdghog^6"PA%W;&0$VD(X\l).E.$<R#rJE=3ha<E4R$;9j.$`Y2m>mkS3j#e[AVo8?dk6otfb@%&;V]8_Ff!eaLb&7-NSR[_D?u*p7,eL[&C5=N2%h..PG7]GL5M^m0KW%b+b.Unf7<g/k#V4VpV'seZ;2s&`1pXG0ILR"*oR`DotD!tZ_/>s+Em994ML(6\&EM,FKp0SYmV-u&n@<mr;%:>+,+imT)5%]EIS:FaSkq:MGO.F5^JIQo*Zan0,1a=:Knai"63s&XgBV-%-bU>7=i<'6R;00k\%R<?=A8t'7pj1sn8-8'QuF\,MK%"s,IY/Tm8%ZFa5Wd:-msG0N^XQR\iMNn/b,4/92;WeZVa;KChdg-\m6lkYn(j2$D5?C8<"`Vt-`YEp&73H:0R2J(+U!)hEbebjJt%aG.Xa+_E=*NRs'-7n`KmfT4j]`oCEeMpQB(?+iBC(/e@+'p*l;E'"Ik4To-F/f*:s*d.pBm0%Ygm$D=0qtMK\QWu1d(VFHp]<?.P%I&$ERB!0>]-feG+lYsiQ4(<CJc9Nqh(sl)HF7"5ELdAfHC%U*KE=:/0(JNY&7J(D/If5Wq5QAs;4-Y"HdauBA.91Yae7ng>J7#B(%7^9l!-.dY$O1uK#bAWR`d3f2dDo_[n:,SG:G(d@UDWEVHG0\acT/bI1Oj_ofG8OhaY\1*!$JjJ[!^]hED=r?de7.o`V1<n!ZGf>U%MsKO_[L800TQU)#Y664;#YbjZrPd^U#GI!2qJ6ItA(Oi(]FatSp7)CWlR+#,jqum,H6the5KaUsFnk#3otN#_TKq4gVbWh)k8@h=%.YuY3=/i+bbZ3k<7W92=L$HK%G:Z'iJ#JkbEi1!oc!_PZ(<AJ!rTW9tHJ:)Re"rOT&9lJr-Cdgu^'Z>,57\K?gK&jb9ODKu&c26U%*;mS*:ns7:mY)'GYH*)Ae7cYHcKoeg;:kKnSohMFD"3E+AUfV@R,`:bT8Gr&p*\b-4t6l<Rt,BGWmtqgR+7D7$2T@r?81,Z%dZN7%hqkH^In;nL';55jhF.hSO`F+#'kA*_K@`dm3!_JsCglLMRtEn[_fW<u,:f2!If;?9Q_G7%?abT@r,<-L.>7>E`[#>41\miGNT++'%Wgj-/nM%I0)`iHSV6;L%[hrmb0CD"lPK0FPVtT9G105GCqT%'J0j1O0eB4W!s4oR06FKE#;Nj]87bYPc4/*)U\>-`]N:*uV9@'3@%atAZ0-Q-WiiV8t5Bjb?XSmKnBhKdn*;3a<Yh)*)[q46#Gj6WSG*Sljn>hq\nZdTnGGIfC@hP,Q2p/F`Qf3a<4];o%Y[hGfa_>3=;%,j-fG]J>%X'$m+C[bmL3X\)80J&kOAqR]SVca6bMdUD]s3"PVOref!sj*L*82$C<'6GZMLgRWL&S5kA0?#sZScg4Pd5D\l9`Ei_`%F'I?K!dm#s;j(Em$NT<B6m'RXo_AUHAA`Y2IbDq&#PsH,I$"koduV"Dp*@_L;1'';9X'?R2LBUk+R^6;@Dh0T8NE4'-a%_CZn`oZ%i<un/05n4ar7c#N#o_\2UcpT<&_gf<Cq0YKX)*N@'Da0SS9DW<I-`Ip(p_di'YBk6]%@4_Uu#C9.uV-2V,[3.]TI[qe_^@rm%M70%7IuKUpRINnqA#C44,mYLZ[+?ng-<.Tk=u9<Vi6"MT1E=+QeUcjC();Ej3[=SRd'@eM&WHKLN8L#SN[dt&St]N'!T[Y'sGVmeaR1I%n.lEsjBB@&9OHQ0adkkp&HXo"mLtasLO('VqSliWZdSBB<!"Fn4jD$UQ'U1<iE2)s19[\3c.U=D\HkRX%OeYmi>NtEXsW-9YI4Mf%l-o1:=bQ0LBnl?@UXe)cDI$NJUt\HWEXsPP?<pc+-c^V.]pI-qo=@?!gZi?[YI'O)cZkHCBHD$bZG"l7mu/<5Y`(?0Y/l<`j2#PY%$e'N+(1p!mJlD.b(EE]jNg0G$lt,naBLt,+eVd#W$"3Af2%4NjdtJ:VU::?1pMT=*d/o-E(aM@2cP>Q7n9M=3lPF+;"Ik&=)@Y\1%Q1n.a]<Nf;?q[?gnF1P\,ssXE.!2:_A#s%EP'jjJRm0^9A]AWKD747FP+'>^3SNOn>((*kk$%V.1B2%3_FsgV5:0T7nGBC"ku"@c%%3/Rd()nmRcY'0Gd&<^<Q]rI2.&*&Yke2)PRTB)sJrO]Zf$tHs1,BYWCJTP9D#0u6aJR\C-^tA=Bj+=+db[RDgE3ELl=mB)T:<Ap%"-tpVOkRK)g*pl$H)#Z,eQO)ggSV4W.4TOjg/A4I(/*=FmU$B3L[+C9pm9=I]a&nW6njl$.8J?!JTQ9m;n&mogf='AE]25iY+'Dl%o]6/;n5iWC-k*HEdYk61T4s6j1B[,q$gcd9-Tf?6]>\MPEjOf%1s_`*:8bXnH6L$Fh$i+i/3\Gn#,O\4<F2gd^jYks&Lm,;&[6=S%#bY?YR;5eM&F=D=JP-)@V_@MZTgI["2$q"BEim_7i?>EdGg1CGf66Qig");LW/hh2+?32;,*kNr_WLeeQP8Fd-[0qT1&teI$CcZb%gceL#@eU4le)hYTQd9=imW6DI.u"E&QkKI'X$#Bb,c\tM]fSJJ`ujOYT+N6j53f!<&'$uF/m9q7Ssi4e(V/eUUN1T(jjS8Jr!El:%^KM!kU5$AtKW:qGg*dYjq1_"bRcB7'#ICkeC?;/iA+3;iO4(.dG:gW+F7$"P,(Q8pp?k@C"A`21#C`JJ$Y%H%jX\0V-f;HP-ujBs%k(KMH'aW>OQZ"u[jBUt\r+RJ6)'PYOQlmD6V#%H;BVLF;_:dk:M`]j>?8?pd[7R'F\WEfKie"a)7sf6h)fP+>m%1ed+>-E`>c-C#%^Foc[Nf:O(G!03qp:&f_hCMN40@KffJZBDL>cco4f;%=V[o<->>"GVO[p/7n02tS(hq1b3+Hd%)$@2%8A/T32Sm3'\:u5ss_I3`)%584>1Gp%VFYh8aS%5u_A##jmEj^Y-h(bkG:^+S7#"fUDU-Ic9kGh)-gflc2KpA9QB)hTd[<r#qf:k_-?Q[/P#*(oR:qPZKq&Zd:%%kob!]ID?-M1>*-)m[JaX8lU'$-P`kJ8jB0/\+=>$GWNa=ms$!r(;J,b2hU@dYo=`LT<G$XRL_UfKHeej+#T!GCH51+ol8aJ'$/up%?I_dNl]&Eff%cWDS)2P90'UMe0+=&kpd3+NY?(^B<sjX\)hbjZY;X.^?\O)<iWI1$(Ebnc!oT4>$gWW<p<[(Q$"pt,hfrYoFTE%'%9B$-CBP:qP?F-WdhRqWYl;@7#gNdOO@"bqMg:n8-F6D``)tmb2E]1^CKj$I.g3^@2fVr2r3+;!V!ET3)#<oUS:1*bW]*0Ea]2).r%pD^[71D.PhQl15g<,:$ur2<ZRk!NJ];J$G[D->QEhjH]QQ,Cr84@DKiT8!51_j!XF51ugTZ:Uo6S!lW33?1+OW>dkO3rf_8af:Wg%BHPUrGk3f\9Q'8VRuQ^9:tmU8qJj5qI/eFUKQ3DkSCp#jjRT]B0>,'D4*7]q@\`^;V^g(Z\-JM@O(t)\Vj$X4)#0RkH<>)]D;2Kq%ii=aU+6_EgYu'd=JCiC50^p4gB'j@$]O`jAQ`f2D<JPdE0D/1qSe(6)VC[kQms!]a`nWDqm9blZF/$USbgq5#\(sb:p3.S'1ML^h%'[$l.TeE4B2B_jRo@Die#VQ]r.apqTc;/Di[/GN&&/L^V[/nRhGhT4SNBSJ2:$+Z,KtKV7k$RR=2dgUa%j&jMQ(-4NLM:1SL$(,4%/js?!UO5Fcb*e0$[&X[4Y@8?*0@**pJ`"3jCk4Qa53Cl9>!!tbM/h/2G@,RJl"Y+IXaH_lNXd0iN^.QkcS*j^Qa2#>qGQ5<*TUP<%%mcPTg#Z%4%mFXq<>"4j[ZbIGF/T!'h3,tEKWF9D+`a1%?sLj84!Ri,(ZrOKgG3k*rfm$IC0l'7j$M"O#TQU.1gt7GO?DebVh-Y/%a>Fds>^#_HpQ(m;n0h*c]LQ92</0Sk=eN_oc*PQAHegb8SQm\WpG[6YMbu/O,)D\%/^CjaN'>%i-rf^&SuYq9K.fIC=sWEPZ2@$a%#H`pOJ.>SWq8VA"'Qk'1DsB:WVbOjQ#;J!@licM5'<gY8V_Q(I/t<DmmuDH!L..WG_JC;8hFBP7ad+T8EL3o@iue#J03qI<XpqN!%lWj>DXc$eO-ab;XL?,NIS*&jWY?U$&1DTEc5^L:&d?X6nHfXQfm&l[>>8>?SI9h3#-fgf$D(^9o0SCN'7'=$`KLdK2kc:9*(I!,Z%ilA6QiZAoM=XbT'=SG6>a&.>+kbIITB-*\G\N.q1GQ!bbNB$Y:$#cn,R%RT#:_S:No_qp!dJ47t[:/%cN*`WDo@,&`'IW']<Fs\K%iYKZY[*2/=IHrk=pbSOaFa\n.`t+jN\suSBOn[$[Q]O10oFHJL,t(l:&t`!C7JD_1OO-!R",`0OF\r0sSe*_M-&TJe]Kb]qGs7p;%P!o+fKnFccPYa>/:_Zn6JstUDN[K]4$^=B4'.Tp$IT_:.>nd12"AKK$.C,hfK7jpZ5>J3\77mguZjlR,:"2H/Oeui]5cI_>LIPuu%6K"O;;<AM<#b=g\9uD@aP0d3gZ:R*TqMRU:':`GG08g`edWikb*^AB:7uEsZ,#M;\Os<DY,gE#n.A+IkqI1pSdcJH22#Ic8>p%7f%o7Gu/M^Xb2lB=VD(/\%-Dkr2hK\7&QPU^0cpurP[`hjtT;\c#uMBM_W,/P!jAGd2m;C%B9;cLR_8s[^iWb*SUF@@D]N4)=m:"FHB%K)%6]HZgkj_(-p5:.Z@QWHGI,O>>'qPCd6J'O[i[g+=`4,"5<R_9D)h310tDitED.6\?T+aX.H">9FhV"XD.%a@J(I4GF(E5BKO4%"U"rWWh_%2;)fDg/EP?+cD6:XLmfY93(7d!+bA6*SJ<DH6\-M?]Z_9:JK>q&@Ufi+ca.(GITZ9UV!;PM8JA<R/tqSRl`O2,0N_f[%7*m?VW1:e1ea^4A1dr*9lEFP;#MkR\?Xs]l<]oROp/k,3*9`rpK)UQMZr7bS*![!F!IKlBK:`>L[U:SE^:!9nGSiA6_c-tB#i(LE%&\lKseYt;;!6?O<)W8[K%=&1'S)>]aN4R48!MiYI`ZYMQJ1QJ<9*f3NTPRp>JWW>s!Y2gNp%'B2!C]RnWlXrCXV<3'BX3NkE#9]R%FBF^q23#0O_U"-.K>qR;)BoKtU$tJ!_%_K;.q%d5Q;n.bQ(`B*B##s#,8sZX]TcUY"WBcSWGJ@E?3[aU")ekjEZ'a7GdKBM/HpGP%JUf1_"*Kl4$T&c:U^7+D-rP-u)'XTB"9S&seD3[tfi/MHkTCTM)@>)IEB5IViM^*E;D^(b8?l?Yq;>+M"e]S&f9Am_6.HiAJFPr-%fd_\S=jJ61ar#.&l2Z;1-.4LOR3FpmE(!"9<)motLRBD)#T4Y9%aKU1!H/)\5TT2"8.\T3:_d8W"p+>39BLU)li?1#;<)2D4;<5Y%*%3l%0&7CAaG90kj9K?*A$;]'f'0%l;a@*(nm:U5]RZgLW%0.X)@-gN2#QDl$o-fJ-'4dB14C%/`)BNiQ/FPh%Yd5L_$J.^*KDeQ%#FH_#*=u0feHu_Nb&bKn*M!P%NM`"?0UMS8"qV+E]7CYj6"O,.`^.fQUS8o1AEY^>/I/kFAlP'^.sU+],iOjXZ7K)n<WYM2.12q=%<[_Q)3OBCV(kKRKnHAK7;0ZIPN</5aO1%^`\X#5i92H&uIC*N#+@/Z9b<agE`4R;T!ua-Oi4+I&8RU6RSst?VT\68L''7UD9b<"+%ZN1a@`CC-QYG&qZP"Nj/aqG4@MDs'Z(-mS0`du05TR\,]hkI9Xh^I-Y,aGTd#a2-[e776%ln_IK8S2f`<riG=;O/6HWF5Ra#494`%i/Ll>Ck*8)ca'K/'\$f8!udKdU_6OC=kU*4XA_AA1mB[+"bWd$cu]n7&KNE*&D=FeB]aQT9J222L0%pYfea!iS)edY,Vn`HW_Yl>%TMn%d<F@1s1a.%cJ\ioMn*6N6@9eBKGZQA&SY?/EF\4uBKBC`b*F^WX!`#M@!c:tD%<j3qpDb)R9&r06a9Wo`"<NO5!]@?"`&b-1%Aj22j%Bp\V6>!(cJj:#E7s4r&&3)R%^a$tFa+G6P)AmP3ZM+F3)3d2K+JWA7Oeh1\2I8it`C-)P,>ofb@Ko_PhW,aA$<eWV!g?%!%':fV)*9rIm"TYn1_*Rf+"L'H@kFfdN`Y*<Z-[>_g$V!Bn;Pg/E64;*1'!VK9]Apgu`A6P*QU+u7U54W+_.n"R_U?LZqu?rJUl$M>%&NV&?!2lh?U_V9J+e/X=:?DX-]M?fXR]S*ACm$^#LB8aj1npFj:]kO67MnQ^-OSE/:b7taM,?O,77)6,MZm!A'1N[m#)H)pBLLf)%AWai6"IWb5>Xm&`PF+oYMhoGe<Fd"8p/MfX#o[GSGXX>s),W]o"Tk_lPHbFaK(UOM1gktb5WSpsLEr6DKh%gOA2XLV;cOC#,!]$[%<.WHF6$7\ZC+&W&<fF!le3F$:.?+<I!"*""mG_Q!FV%HH6!fdW0GEXZ!.5+n7UqOD8!(Z!jJA?%'fr'<j@,0-nE=#JEZ2V8d<O)G%nFmJ%8ee#!p],1<i#-JRgE;?/k+Q9!N\UNH)MWEg!?aeG*^TJG"qG'%`J?:d3ZoPm'e/j.GFXOkSV&O%3b+M7#(E#MBF8JV\1k_(%+=ENW$UN*3VF3\I8=0P`>u`o7HNBWa`D5Xp!Ii.P$A(WO7!Hk[=@g58'Fc'[<)QBjV-_S<7RQDT5f+E:^uQL!PCT?bVD*NC&LJ8)%fHY8W^Im%-a9/"LW8T4TO:NcQLX$T[TW(&ScDH/QUGXRu"99R5L1UkIL!E438-2LN$6X"'-j]*_7aVnV7hob-,ST&qoR08=iA6Js%qA5q5KKJ]#SnS$U+/koaXqGEh:4t\/12''9oM\<>'sp%BJdbqZ>\H-rQ*ODZ_LO[>4kO!^TZAT.5GFsY\mtqM3_>`u3[\%^+(Z#g%N);8/K!5YN<Ro;?@uGSjmKA*hJEgl;;..20aoI>-)Q>>IL`oQeJOZZ@M$3_V*MWZY!G)ReP=@5a!p%2oJIc-uEGQ@-m3sHM+oopl%1kTHl"_=[N"9?pV-T5LoEklLDFE*+D;2Kj&n;cRha0l%G5nPG%ilhaB)'K-l71ppfA_/h--kmf;kX0k'29I7;7DFUY#U9a'!#m1-%@#Q\9(mc\1!1Lj;LTq3+U.>qs<&.![,#+$(0Va6`'[qRmOe=!3ELV"l8.d7("!\5'%4>:H`1UK>"@*G2r?)7n+bE=M6U1WO'e,V[%ob]BS+K:T_-A@PUirN_cke,3VKtNod)QBDA+9eZ`O?ui6'Sc*2XI"2gT?`r%1eu"jM5I0S>f'&6&QfkN"D^8ra.c&=6%J`-(5N4,%/hsC;!$/,(RB4dAJ:fZLnUf&2XrnY!dQ*o80NEiM#>@2r/ehWbBPd*pBW@IkQZSN!0e-&9[eLZ%E"r=(Pb]F`-&NtPl=I2W7+$+1%%62G>Pu#k>L;M#*&k1bR$ALH,&N*T%7Be>86;qJE4:"]E6ACP3:,?+i+qdb[i`#pYUnX5MiP@hUOi"tVRj)'+%eK5O[#r@l"%=,s%7fblP-C\7*[t+[9k?Ug!Cgc@<Sdh0LqCQ)[/kWdO.l]O:S+S9M'55=FRd&@Jll:RV&gn!<6]k5f9m4<%bJk-c7,o\Y[`W8a<0g3E%N=Z)=cpSibA406b&4L&bK]\HM/)(sOg5^/%;KtN0+F=/./6T>V)44\80e&U5VGITeO=?Jm_U0fj385l+G>S`i7M4=4TciA4BIpAa%;="Gm\>on('+YC/hhi`gE%3:eA@"iG_m%Kp#R2H[Z:on&H&<VBe.SQ*A2bg)Q@r!EKb1kL\;5leJL"COC^U#aU*'e3![:poVOEN>%6DK'K9Z";:A+>,-n/3\5pK<$@C,C]:q8bmRET_SQ:#K"t#=:]lYcAD3:_\la,\/HP$$`GBH:fSgW^K)^r45?32Z"sJp10U7U#Y)L%K]c>,$HQ?[232@Dcu\,t`CudXA^ph\&;VZbZskXQL*@3dN2)J$P?'Gt&&e9S`./__5dd#e,10B0.<'BlL>Z()#rIZB8TSYKRO/3O%Q_^s\73Jo]R.CXlK.j/c1tO0\*nF%/F0Io;HKHOd]QI)e<b_o4SD&L%.RaHh-?O/3jTQV@Cc3.5S:2:%N7jahrRNA"FI7SuSjoED%_lQ9F@jri`MODG*Rbd.KB4Pt)6"3Gs%j0Lb=V:VX&;)J5K.je=!?J:Q$6HccRb-V?mYhI(-m;hmESac/![JE$;i)I+R?+62<J71u%b=9XXdX2)A"G%4sR`SIC'UuX4<FbXp&9^Xp3J(/=+G-mJ=OT4=etVGuAr7U493RDhFd>Qc<(g//!1mK=!>P)RQq]JOc4KLG4=?t7%1Tumta2U,CmB02mJ/Y?R</kP5W9YX3aH:RdhOq)8N@+9cB>HXW+GaTmrkpKgISMc`W&7_%.6jINNm5a/-3=u9<1T<"bQqY\N`-p%%K<@b,(G$8G-hIa`$E%sg'ZH:NbP^>S*O`a<OZ3jt+Z-D4.7tGHd'W2B74L>D^c!/b@iu*EJ3YlEeYm0P3OHaf8KC3qR`fuT0RB`O%RQcKh%$2>([[duT?OH!!Cfc=b.[_ni2XLUn"G/#bo)sclH\rFr0@MWW5n\G)cn59S1sL--bf?`:KUHVQ5uB?lPVe`1#0#Mg&$l-o%OJ(3ghspLJE-4Hd+TkB0(c#J7")+tc1"a;b##]D8`;q/4)@d.i0XRPu#h<J#K4l6^KmPMCfh<>*@H"_jjrc'Va_dQ%%G)HbZ-aE:%&=GV9%4N,/3OfPJBLtl[.%+qF<AFe&WoilR%3q"'U27_<_OA!+5j6.OLr5&Q=#oEs/dhY9Kepb<7PG$s=NC(dW_F_>Xg(ImL#1c>%YHBlBUki&C2?aMcmL1It/fa-hUI!sl@3BLJIADsMYX9Jm\1!N/X,,UXbr#j.AD0_X3fKm\dGt:&_e37`(e1,AMj/22RATO0r5C'!%BK3\[i#aP=a<EV"_I&acI<:F`'XmWZT^![hiQS\;E-]A>?"-i)VM,J5-7qp'NJf/$A$%<2B72?R#U?N?UuKF^;oADD%Mr*#!#c(A%_1N"&L9al&mVBNOcSk9<\\Aji\a2f#Ejs50fu+kgc?n*VH\6iKW:2+'nAH:s\AX+S?3"UU#-C.e'gVF,n6-$0DTq(T\.th&JHf1!%UDL$(!h[XIFVVoBJ_a<s]F(.A_=]8\?\[ed=Pa_\Y6bQ+aC-C-=:IP3"-kP!)%W(Gm$ZZQNn]&eqKPd]n24Nk0Z=[m=N)Unpr*p.%XC.`%]X3Qr<j@u-54_*\b?/Zt%sjqh<G^n#5J8c9&s-D<]&&6f"ZEOaCG5>IJ^IP<]GK:/N<tp2L6^\kj]_mC".pCZ=bT57QtZk.%X[93[GikIMYV9=E8?sACCp`tp%H:(B-f`X1X4=^SL1(`5=,ouhWT*1I@OTdfS>MaR_h9j!OKf3VMEYs#ng/g+URY=4ZiZT,5a;TH%>(pT1+DqqZXhqnSd'sE7=5]t]7eHbeX'g,d'"98:H5bRO5cY"i=(+ASE@06c$n3rP_(H/j-g5Aq+%;AoY)nB:f-Hfl^893=4I(c#%Jh'Qo$_j`5AJ7UjWZ9F)ku:qGKiLKX,3mY\d1T2LB/FXF87BkC+gkiH#am0JR\D'rXTZ2rM+1NDTOiVD79$iF\64M"8[Y8tSO_q;%3Fr=Y\>b$uURNIf]!3b)%%i&.&o0it6%UHD2@"%3VFEQW"d-3U[W+"s@8!YEmhFPq_j[]b]LuFj-b:k@-^&JOT1r3nN/.k*a@]^X%+:>Z#`SRlYBFrF8bN;JR3BV(NSD#5H[EPq=WMZr-AuTM,ON(MV=[%C8AOe(@):o$=9sdA\1/@$D.4SJc-*^^^LCg?Bec=/=&f/=)%<KUDeM=QH*Ko$HK!H7@g0b"MJMSQK5['>QX9Z<hV)0c(!r#u:UY[E0h(<r@R2/OT_;FC^7c%u@5dT)JICD5>q8u0g;)H(8#SZA"W%Xd>Jr0(hUdQWTd'$BF>=*5RbM5YnhS#Ed#a9ItHoJ3aP0H9d@@B\B8e@Gt4N?98nUBN8LqR56FjTZFdXOZ;F-fh0g/'FS'p?+i\c%Te1RCT%Jc4Bd2`#EfhP!LcA;bXoQM(@p$Og/qK<W[SpXd@L\is`g2;6"jmfc=*5@<fHO';7E4.>$<'==?:GNK;`.7G3:c0M:1AS0%>hl1/I).rM-H3@PCo$Dsp1U0md:b.H_4kZE[KZ`,S%?H&)U]m^3<a$l&:kKe[Oib&b_7@tNWMr;AS/uNXi9*EMXE7@&fD&5dL@td%\Aq6!NBJ/&gj1E=(7JBUh"6:Kes(4G&\(1t;HYN<+2NqE!_k#p^#Rak\pH=?GMh=j8&oNk7?V3%MBG1r/1G5/#5@X9%#?TQKS`*<%d>Za0X+"!k,r;#C.SP;You!_$dj1:X8A)?)feK9\%r>`+n`E5o/Xs8V7ojGO-,Y_de7@1\%1m2'_a8LW`*:roRc=du_%JIe@Z?oF%Ck,nfbh4TT,?L-QNTmiIE^\47foVk@(?T#m&,4KX+r`N(,*B_Xd?_b7K[mac8NYi84rY$lqA\k\F<De\KI\mJp1g5<E/Ei('t-R9%4;7W&5fH/Qg^1a$7-C.uZrZbQF-4aoho_+TpU]>3io98"U\?8"dSf5mC8]+@kj$<ia6K\V)Q_O_mHSGhf:&n`b4+]]Z,[dSl:SG(%C:2*Fp=JWep<pIWIP0?gA3lfE,\>QnUX^HN16kFkX7`uB75-Yui$"&_(A=)]s&ZZ8G\n^.fkmt)+i/N[K#d#.Pmn:2gE]fY;ljlH%nCj25[!-#&H\^3"OHl@\bBlf]2Oq">>X/JT/l7746YEIX7+&!eedSdZ6u;"QbnF=Al-(Hc.>q\2p-r!5mVLZ4%??NF2rWF-[aE5Q%hjV>=R3@9<Cj;P)_dVI+2X4H!Zpjk2M5H2ICR;o+'\XG7]!3dO>MT9[oQb9e>MVp6Z/9A?;qfC626ZCa*h2(g2p/7?Vd%u!kI!$_%H2HHeD13\LR&on((^s3*d<Vu#$>nHd$:gT$6k4o?@&\Z:$FQ*CO3HQ(A=`B_i6_%8VN9$N<^9EE"PO_hW)V,`4qfm),1?]F8S2VC%B[]*YDXpE>Tr7kd3*A]!qNOOEks=;_*WR>bRo[Bd0AIXF,_B)S]s"YF1`_8(a&JJP'B$$>RE5ZC*_A)UUnJcDMKS4"CA*MnZ`/Ea%P`rukILZ@=JFiW-bWuYmVuDdK\35qk)0PT?p&e(dYAe:8ZhfJ'-k>?9B7!:.Ju9L"g>UlAjW8^?H\FP^*;!_3njojBQ.LhpNr,hm%X@c=4[ln)(jr&QW)?bZ8Aklm!bnHl#BP+UZ*MFoo*ODE>[:Uj*NGVJ0'8%9q<5ZA#5UYc+'*CO-bp.Tkla1FV8\rkoWlZCb-WcC!%'CFG$"`9KY>N0Y.Ge$=IYI1HtO8%gb,(_@,TnDN[0Z4m>BXll%VWD&DECbktcjU;^7A>Ek<n=!8ESe'gl]@a>@\hC8A-J#udE7u8%F'LiPo;HKf]h$o'kld-LP*P%>Be>C0KELZVLCOc99@:uDKfhj1dM?KrXis@\S45>Lei>"/A9:e5e.3X?F`6C2@eRu$Nm"f\nsN=2%#&WVcW6'9F=+qpT-L)!C8iWCP=eGc7A6\>9RaXp-7PC3UG-e^41/Ce`oo(Ns@/23hdH>N-fCMhCf?n#qDSnLqehTAcVrDl,m"*;I%=ONQgZY;s=R*hV+CmBZ%C^pGZ1-8aa+Y$s_X6'^<9Li=ZEHR.j9oEXT@>b4'Kq27VX6hOb3](nWQ=pQ>LnM*7`&+g0_GedUcn4N?%XcNODd'"SX!BBASOFhFGAho;QWcWPgd2C4t$<oJ[$I7F`3&@GDe%#:-a#DAj]A)c%:.[7&?S0^]/b>]eB10@cMe4dRUB5PU#nXEZ%[#,"%T?\5f?0T"8<aK^5Bd"eJS8,n=q[-+VfedoPZ8L+r6*oJrdP*:b$4Usr-IEDg2bgXinHo>J4?V2hcn^-s:-Pd</F1\c)K:L/%7*[>jUmTp\=mKTp-14m#3E@Mu-=er1(Rano/41-#DW,S+OcJgt*O8FZ03;9J,+0[4#Ip-f"2M`$%9oa"<Y)d8j*BT-V5&+?6pm3t%VR^qh=6)eKfadkQ8%%21;[>&g'*YfY7V2Z>.4FQ$]=T+7R2=,jl:j(FJ]GK<;F`O@>$49*Nj'bS[$W*GR^jDtc3'-o3[Ir^-gRo=%=sH[>ZX(;^c3"kGWq<0VSDXSB^`Mma@1BSXfPQI*+$m,)K>S#skG:Sd*f."a"e&FtdA%1i>0B@bE/L*0674(^a\)D=/KQanS9@7<%0%uc7ok@bjT#K-F!^MMPFZ<H-i/I_o`(lNTEB.2Ua+[\lVOK:gN^=(AUT87VHF0=;auZ#h@f.[;_BNerBdq]1'o>Bc*:]qYTmY7Q%=-9UmFL=5Lg-X%>9u.>g7-*StO@^o7M&e@KI9OKsE?6Aej!q%I:=BNn<V%&D%ic4RlTq;POO\u<gs]E.S;pZ"Y`XHT)jCMe,`+WV%V:0!#b;Em5)o5^4VlG$u_=Ap7k["9k47N$p;U[1[7Rr;'1Hnk(6nZo,(5ehp?"(-uZ?Zt=+RA.n)5;#fkVPPHN<V#Q'KoWSmG5K"%)tK=SNF=?i'alc)J!g"&$sqAR+[99V6OS90^g2$r%FOuca@>K<fe4NkY6`6#P-WAti>sS5SW2(fFG.pLNRQ_cPK"+3,"NiG7Wjg>%MAhsaV:cB:ksTTn)@hmcB3$_rSW(du@A=PF4H_3;Ep"_>^c@WSG?>uA%VGio[WXCiiG"ScVrA$Pj&&_.9kFEC%[R>rDBtX<)#"nI%4L$'7j-jG/9Kci:NWCj84YKtO"i`foR*AstHea)4LORReh0L1M%g]HB;O3G=QD#6t@CLL.Ak\>1nkai[Y^Jl@ZAatfA3]UO*P*m-%(XZ6<L+S\8UYnZV&<u1j)r)/o()o9r%7jMcb:9Sr"@(Qm5gg16Wjf$5EJ\qWQV8h:Y,LZE-ChM\1XsK;FEedL]I@rm'U;Xm1Xm87%89Ep[VqP]Kep*"?/s4N6/k<K^+m\MO4FPDQNVE,LX4D7?2L4&],qFTpCukZq^peX8hE7CEEZ0Gh_#E>mr[_U_c!WBVF/70r)^t+u%>oJ7J.TJs3%IbnfS"[b^+)p.oU<2ae(#];.=Fb6t`nMaQQ/)Z&FkOS$V$)acH?I'po`e`h+MabPZbu_uJ94kFY-;F5!aan0d97L8%p5:C/X[ofqC*":W3-O6]/dp[aDE:<XpQUcM0mB)G]FkijQP(TAfVLlYKnQ,*F)*V)JJ[?cR_VhKL.\92R_gIh*,lcr2q-u8M[*-J%%+OOU!P7.mdteY&S9^ou8lB6O4U$m*:i4e^&TeBm[KqVDh.8i%(9Ee.6:*Na`^LS>D)[.q=GXh;VBb]VgC.&i.@;^s60nj:6;qBc%(Q5BO5-fK%M>'.[.sIPchM/=TB*t\VnSXVdcg(cNcWaQgmW($d^2W6C'2ERh8>BB'8C_D9)#$'h;+jNN,u%\]fR_B7D@`rJ5M"U&%ijqcnq7[H%91`0&/m5a@`9RmIO.0$JDc?2;F(P#VQIX_of&#q+hZU93>E%1)193@[XPQ_4EJMg(9fFSHiHS^rZRGW"b2K0`W+^EI%!8/d5_29YP]L^Dk@9=5@l*``/;do0rZ[u/A=Gb4<Wd2&[45<+1&1,d*ijp(,m!D0CJX7-$187@+caeH,G;d!(P1VZ5WfLF',-ftV%XIZ^n7g"^#e7IBR'u?+gAg/+D0h#-e>ZMb/(*ls93(DK4-AjS^m%-M*2@M$mem1Pq]Kia)c<B`=bX="/MH+T#l>usQ_UPRj)>H>M%bc3$ooN,DmBt<\*1n-k5>[67\lA0Zog<.46%)/'UX@gm?XEhqJ>,eo@HWg?][)>V(QM&Kq.m6jU<P(D2^l#JkE6'PIHe#ZR!<=d?%huP0*!66Q;=U$LZi+<]*[8nqn<<_)[!PQ@f2Q.JqU58sF!Q+o"eg+5OS4H-gX\L'/_@9R;U&1%0K'VrOZOg?*,n^E6OruPbN"hZc%$4GF@TEDoi"O5X4Y0uu.#`XC)P.X&R1JA/j<MV^QW0MT2V1`&Kn5L'!d+:n"AVLQ/j$L*SM\d9[FuCA=$AaEI7,`*/K1KfejcEQN%P*iXcJ79<`'L_=V5p&Y"`)AK*hNf8k<^$\[$)>=D//<%3,RWBmlLYQ83bNGd64&M:<8^pDP%^.L'+.8BdHRF-aGMhZ!oj<aRd7%2%2?dRtb(YVpnBOX/U6C+,2Ff@7MmCRLkiP(V>Rtg3#bA2/ARiUa1tiQ+L^q^]j8L?6-9ruPkj6$N/.!>&&;W/(%B%WK;Ar=F3Y@#Z%\gisn!^T\X&YMB-8)^(4F/*DY#`]6CVb6]1i]]q=_a]M1,=\Jub\2JPdV)jOKTdXr9EFf[Un8P1lp1]G(q^^qVnm&Y]8H,7DV:6C%,SJDHW?CN$L:@>Hj)I1Zbh3=0K48?ujMTn_5g?WK72JZV2p<C=A@pKU7V?S"68NLI_5SLfJ%#.b.0=?%,8/$i2@0\sq/LtY&E;j)%e/*9tA#9h+Jtr:cWZ\VGgIRGd)GcW$$D`ItSSV0f4u1C/mO\T4V*^h-bBVD\p&qiuW#1&+"Gl<Z,[r`GT';ANQSt9;:,=17Y7s:/%L&C$YKi&P-p)A)^Y9]BhVFoct<KXE6+Ft>*cUE]X*l7,@9b^9ebBQPfX-9aq8C9.%OD"_URMAdA,)C&>(M:!E\2^V]k!4LRAi)O]%a(Vi.M*M(*#Mq\c^b0LkK&lqrCN$XkbE<kNIR3s#^*HN+FB-BB0h>*:UOJktV$C<<.\P0K:a^Ml$Fre0WTk,r^;J0\cb>0R&O]4b%=@U7&E;+<Y^':o\B!TNfAie8p^lEsRrN']'"u"Rn`mkb`BXl?Z4;ujdo5+5&do+sJ?U=7(k@?d.5@N2T\&H2uCcAe<+?PCW_V=<5%&dP>J&2EK%?mq7FpS:=LHlZpKY:ir%QAuD(qbUlA8'mY;,n;[n*_/+%(uQEpAA2k.f`VauQrDc5q]VSU-fXi0:M(t[OZ'0rK4.di%HT''p*SA3g[t'8uJi*"E6!YYZUZkh`N;7Podp"rjE!h\K2h&Qc@^F@0j>cCEEsi?VqJgOk>V:K<74_SBYR^3hN0(B56X6DEL"apm%@3'FO&56.ej>!k5d))78R*E3q7J$F9M&Fcr'pU*JC`k:D%Z<E1"+)CX#RJt!XD7FOrP0[/?n6!T_LheZC^1>fg_T)](rg+P^nG_7%ndWV+.e8VS&/f<9,MB)9eA0!p2`)R?n9Kb*mmK,W_p/O<[W&O#,.Dlp"^uao$>:BuD<p/dc._PCT>Q[1gZ3R,[!Q-"bVfGZ/PBP=%!#`epa?TuHS'+J;?qb&<#)cuCl]N)BE8)@BB)+-oI%I'Xj=KCM>#7I\J!&Gf4KC+fZ,Rb^CmW(J$SRj6FX\Zt01DC\Op3]s,Fo"1%UTk+.[VE0>l$5Ru,ZZE"@D_XCVJV\__>M8/7!W,nOu6Okj6.D@l-Hik1C1!t9PD>l,!0::^ijia+/N]XJM&(F4P*3,CYBI&/G+4)%W3kV'!T]Rq&_t1Da"@3WBSp9l4&&@1#]UZX(e"iVRtHQ3^qaU(Q6Q85^lDuD)6j[Aq^iT*O_-)A]r,AJKl^iAmYNZXL.`u_[W.Ka%&I:PG-SUb%?j#R:9)AY:is`kTmJNnXoB&H^2rTQd#JEjIfO_k\j8A$u'#bAJ(3&=:dC>7L>`\&r9EidKpu41W<HARV\tF^l6Pu"/%@r*D'Qr`Q+#]tTu"pg-qd3\AbUCdbZof+J`8G<E0a9n!'4>7P3/^2P\`$7o,2K2,Cc;/(?1m/k<E!=1dG/R;pXIUF0I+tRDR*@pj%aaAU@S&C+=9EoL!!.n`S!,=V-A=<Q[O7f90JW0@/G;RUj8X\B>pK/CX#@uu#5V*:j7]>lcM%?eAF[['QS3RV90TKPuh8I>FIW+)b%reln!\)[)'U=]Ljp@Id%JAiIcd>W1El!46!'S.uH[]M<jE8Mp5TpbhHm,We!?]^u^nKo"`+KXf4EdedKec<FXM9%6fdfXJZL>0Q=%$c;Q=LN`5&Ds+?r^N)$HL-X8qN$J)WA"H,Y1:,p7Ht*jd?t#R.iB?-[kJhn<BdY[1Cl!"WRf596!9+K<9I.$bO!0A[m+6;/8&"po%A/Wn5'0Xs#`f[O0A"ot-WJ/[+pDd!L<t6G,OO!kcn-r'\`%&:CSkg8+N<b.rk&[Xhc$:o21PhLFMiMf(eiSLIBAa\QDC[VC/!tKU%A+UW%?9dTR?+stPQ7k?4#Rs)TLK"qGb)2X=&`0Z2Ub_GZbbtL[)0Xet.#ah[$ubOYM!pAS"m'I>_HR8"(j@7n+b<KnO\@gk([QL,%ANZ"L9YftQ:Bs2@9`]ec]VjrG/&ST1i/!Y,"7;it)Xo&5)7CQLk"CRT`=[!e'\fooCb+aTo1Mo'M36(;B<ru)a@Lm?nL!iEa>,QA%4D4iNgoT40"F$7?J=UA>M28+tN+4IK^3r8i##KOT,8#nBhGm!<S"jGK@qIX.%p7fg2Gim_IL.fmJS>h&Ws>L:^^bNLC3E]pZS,p5%*ikEf*gf5Y-k!mY^>\GKNN&j)d<8QfnUl6W<so;QGa8,e5!i(FS/^d+>8UF>:u.)NU96EiL'bl_ZtkI%).!sXY34U$I^%j_4s:hq%?f`J,"s1++c=VTfSCK$`_E:%YN'C6S-QM;Hf<ZW'*Kt_7f;g*X(tSA:]]aTW+S`U"n-GOh6TPD-jr_n)(9Ji*3[e:<.r`FS.gPFF%3h'Sq7DId@S?YA?3q5q+aFL`(S*5fP5EKlSGI%S)FiYHRQs'MpJrKlP@E"Yu*#IBjgL_CZ!Vo"8WY:cK&dsYt`Z'iX%UDM(XuN5U%3uUX5`,c$p-=D-\2C"Lk_Gu+^*Rg.Ba9ckd@Fr$q2&rPTJ;\u*/&H]JIh,$qm&fGAO#%UsOB4."Uc=j)D*6BW"jQ2I"NG`.,;bEV%5\QSVk`'!n1(Tipff>mbNP*T]83Vl?4C]s,LEuehmUHQEBU@KY,8aiul`lG2s!><$lrS4!,lKD70i[Kk\?!]('RH"P<7^@hAN7rO%fH@FP+2>X.cZGBVo9%)(J8(1l(9A_Xbl""-n[>17"UEp=pHD@]gB_PUr<uto(54Q@T>^$rAfR&ca,,9EUc]dYCKQ^4cY;OV(a&o^%U$u1s>5'=lHc\_MI1h*K61Pc2L\l"\%G6m++LX$X)L.MR[RF;$emf@8ITV"n)\^0M;d?*Y#ZKn4CKVL/ABhF]9if7O51+5,.k(=f%aElR[A=]:,XcIebYSQigKH`Ro@a"YXO?s(n&/9JAS/4.^U8(I'aE^@kqEm(GHZ.[aYk(U_ZAkCJb^hnSA?UQRPh&4SOhb4^"Xi_A%'9^e*!gi7jPBf.I%QG?j6JNk7P`2ff0)pQP7iu]]^Q,ahV:]/c`rs:^o6cj50^2*Y>ssXLW&_oL:!VW1;fmN60pGrr3<l)_/^jj?%iRs3;CAk4ncGJ:2XJC".p33m@TO]l%s!t@c8@X@QbJZG/hUHi-3`7I<R<d:"$J$9&d;2]:#uO;\LKZAN=UdeWZY3U,X+bhqAq@PD%9^#l[JotlMO#8e+_+Q)B0Q6HDI0.WH_'gYf#JTe;3TIhN"Z=-35$O&2aN1^)W7;"7N[u*"4jOcTP!hj$OW4IjcSG%W0Q&EsL.2f=%q&gn9DGgg]a[tU,#JQ^b$6s_g3IcOM<,*N#4`3U<i>_<",7&S=W6\77:gj369gLaOO\-.cJ`/-aKGbWKM+utNLr/q.*M518SR?*F%n9`7`&K#_GE/k(,_%.:+RQq^<o]OVC+b]G&WIFAn\ur(NduqW9MC-epQXZ/(l2=Hs?Q[bg_Ju#[0<6]'U&2l7`;JS!h^r*Ii<0[A%>?X#JY9:>c0J'^8Y_lA^/,0LVC!F\ep_9s8/'\n.%P%oMc)\,-dC]<tr:aZV6EAt<J\.#S1<>*a9[WP&J]2UBo)Z]W1D1Q=Ig+7A%klSbl3*q9<AA3n!%2'54J+3C"5%3;8KI+qM)582Z/ge--]W[0tCtkJ*UrHR*e_ml&`IV8nhQmr+X5<mLUChVIr3p&FX[4tU[oRmS%'a(H\7:eHXN]=H+;K_W3&`IKD_<P]:),P*;h<NWt*PZAYq-'K-.TfdV'^M]-*LSJ=QZqGZbofFmbkQR$KflB680`0'MQTqKQRYO)%KlZHt:Eq2c#EB_=V)eTV"f^cP<[6<uLW&J^=YmS=$Gi!9\h]Xs0BcIA#DJEd`%oKf$:VD_Q$#X((&0>tUNHjM'kj_eZ$"-r%.)i-%rt\6:(9fh?iqCquR],d,>0.R\L.7`PdE(sYdm<8`O]Gp_,Q4E5;/%;]eEJT.8k^aTVTQ%j&o_#g3YA\F.+Mg<Fqsjb(j5!uA#i#[%mX^rr5*I1F0rd/AXC\<&*HKp@+97+WiI]413jZc19sP0A25/;o.<8Qp))'7IQo]GgbcpnCkmrg<Tt6@*0c']YBljMQX$rfQ1_B6)%NPIBfZm/U?CVp">]U@pFkN"Gf0L+`GZb&+b+D)kC+JN0r]/TP6Vf8)"MDX7A;<*o0U/3&0o>ZoK`?aJ;K,$FB(/;_7JZOKFE=Tf9%<TFjqFdp.*Q7]@=G9*`V<gm^+dHiq%^UEGBcShJWKI:9tLD6r.9ZQsS>Li.aE-BuR!T%mcd-:AY=!?`PRs5F@2]I0ZdUL/'6fDR]%X<kq?)aCkd)7`,"g)OIin+_7:&MU9%l,+i.Ru-12q.?c<FMT1+[d`AF%T+JAPX"pcq_J"HroQEM:%L%e+_@^ER%1>NAu$e>a%_;V%%jYVq,/Y?*4`>]g4FY:ac^%?+cHoPABS#W@Gs4D8JILG=5V+CI?kAtNokPd6FOcd7BdJ@$o4kb:nA]G"h6)MTK-@$oa%g,qmPobo%Vml&7Z4,#%qnQekrIb(^S$%Q@dGRPKg-P4n4QmdXBq+^d4&d===)/r6fJ7!Dn*KsiJfE0AC'!#Akf.-N_9>=I;%;ED3U[a%Zu',R%k@$?9,O+(c,_M1d2H5#Yd5@Gf2j6Nt!U#S=$ll"sPg5iH8=O&!b?b?fk[?B#?M>#e7FEXSQoRA:LORO7I1D1Aq9',!3-GL.T4%Ie%0&$4i)Leje&G174NPE07?a8sN<_(]rg$&#(!u"2.*oPU+W$b4uTj#q55S`UI?c>BEnt\Vbf^/?aQ/GlS(r(E2GQd$\V3q*e)9b&L%r<-XL>i(r?>YWc1LS]C:5maYek$<4u0^lmU5+-WVltjr)Eh<=-<k%)^eo#:&3j!UDp.X:h&,Or)TPCRrN+bBBp"X6*+;RMDX4rI.%J/ju)r_m&LVfaCg;gQ*?'c.$GMp'`6@&YGR0j5Bc'RMY8*Xad%.G686mDd)+Yb@0JoiSP<+h]D(6C?uX6sc%%mf/gd6%j'EOQpZB%CL`2nfr5t\,?n5GS#=ar5B1-?j!7u*))[o349?eo?g,UBPm!YV4Y'cKgO<7B>9?B$'<4:'nmhT_a80d\&hDs2bRt,nI0F/hhNJD'%qtr#>Q5VHZn_Tji,@Im(0:NK7n85C`;Ka3'$;;fT`o@,O?'cIsc@W`4Eo(3%iL!S'aR9],=h#;\Qd8]fN2ZK<RPuX1+e$[^ktbk7%i8BZ,h@+V'@b]:0G6g$cqDQ#QNsMkoR45Ha@>p$^P<TsFMqFj2#WMSdjDu_>hif5.d_a=511k3O5L[+s>/iVt30aCN2IG(T^RfR7%8.cjVLe?)d/JaT)]Q*/JAIMoW*QZ'CL>tf\dp(Hi##e0m)30Qk;V#6U=4>SgrX]k&NapDt/+O%tV>a$/_HlU?i3Clkbg7gE1X/E`%1Gu4Dc:5Z`SJ>=@NjeLOX!H1aSn]L>[Ea'"o3tqWZZV:FQ%n&9eZBI1l^Zj5AoO;*>ius516Kb-jZ9<Mb^<I27%PR(D!9Ci>4gma%^]^)93s=!>;,+#3NG7NhPNmhDgKPoiZ;/Y\-?.OMSolMrSM&Vg.BV&olf?PVKsd')R]"%%GcObTPmgS<elKo%XVBSPO1.aSXV-4C%,8R0R*M]fMa.7<C!Fp#)d`,;n7EgSJY"T(Q>8;^'`5jic]sbo*#<lcP8.gKC_r4P@c?12S5885N^UPudADNWp1Q7\o0h6A]_VR2K%+hKe%'j.$s>%bg?\[+NWl5X#>g!uM#A[ZJ$V74bI/Mi%Fm,>`T<!O+UDfsu86,kZB=be]S5URP%PL&TT]lq+">q.;1R9^J\"c\5?%HQ5*-2E7Kdq>n$P#@TM&PWqLDGapBrR!O3Rq;2PncTK.7G]A=9OZg+[N;o.d_H%Y]&T+ToP%EE(NFaH)mEI%m)(D])WHHFm'pic+%DsJ6Y)$OnHMX,M-*HQ*$VX*Gg,J]jG=u.`/2i?Q37:jOAM8Cd2oFN1AeBB\<VR,#WjG;LuN0!P^i0%\@d/]l+brZNFP9;4^g!<'J%>60E1gX/TOY=C#Upc55H"AG)CV"#c9?@F$@qd.@A^+.o"/hdKb;,K?mEtk;=Batp*U&0/'PtqSE!'(^So227o7`0s,beS`PPA&Zo%H^;l5?q^_tJ\s^p,KtbhU\9Q)NR[o(=&I-E#g$ZDOnd<@SZnA(6QSZsi5oQUg5WpGo!AVf1Vo`cKkbtbp+[.2`R*QTUM+-$o?,s-%A&%S9W0,6h)'g`//bE0!6LYmHjF'WSXL=p96?nmV:h7dDS.[3T_U+l?/3C+KDc'!I%(SRV+9QfR$@I?#(rDNAPedmMXQkGf^'[@@%L]R]Ij"]Hp(bkUqaW0?3ZRGsqVan\ZTV/nNhc;n`Z!noid4DlgpsNSII+S9e"tK#kZMWCD#3n=.+3N6Q3h?hGa3m8)A0GFM<[N\X%8;bC;1pHUtjmTW446Y^`KuBnnHbk]^7Fj.8Q$P3la$WU.N>+^EfVSc:\0K%cM`V!Z5]!Z:91'-&kHRhF-BHoek88Aa'L\`6R.]5S%0d%r=J>0in*@Z$#/uE'abQ_JuL`@+X%)9n`f0Q#ufb\Ml=/M%94PJ\pV-OCnafbik[jK"?S&$e38&tA@2M(I+g2l43P9*$R$Ja/L%7ZCcAA#kIoim7Zk?:l3OLtEOp?ti`5$K3q-?E3jsNJR`RMjgC;"&-L=iE)_3Hu(cN\@lU6gcK?(]SL_Y/.pT-b9Zf_/\a_W,-tj2%GY!2)E*.g]DOeD.&0=#>5':OjEZ__uS75,U)m+$gIPW_'b-9@N'$Tg#p3"gJ)>6eOG4BYnp=<f\I&E?FaJG,pDSK+c$0KABpN*Dh%aHhm6raKWAWO3:b=,F<bCn=Nd"$SBh+9u*Ra9qZ>@^.IDq86/>Fq%'p2HhZgoRYpM*=0cqN06'P,%:(L-7M:$%A"lpY\Fe,+N7kB%A-hOYC++NfL.@jp[%^WRo/%jN@*l-rKf;?i0Idj\OsM68$te^\iGO^t$*479O(nU7M&,Mi;'&&diTVf.-HLNcbd[4#a-asgT0A:"%du$jR5VZKNe=b-spcAD_Ug*KLZCgJ##eLsq+"J@Ip7PWK+O,lpK&aC#T@bX4<uAa%L?^i5Vsgp%ktD7rW3<m#OtAd_1ED4qfh0CT%^&lK-Z]4dae#F<uUc]cjs2M64Kjcr=N4WpBr)cK34mmb$3C_jdaN*rk^#nMK+YNk%f$)]89f/SBoU"PsRamr<1(8^S87j3#[(,_c%oR$D3i(LrD2_D$pd;>sN#d+,C]MTXF<V)=9GmHH,V6Wgs[K;i5$7'Lp<*V+/X(X-:)2\!\A`G4<DR58pH1VD]'NWHs@W%_NRhr&D%()XHTdcVe<N!5XKBCuFC'1[+H#L>X</,5VL!Vo&-,0T=_PcE"$R#7>WTEg-p)+.=R[=hn'FS=Bu4nbYuMk?;MZm.XqSQA@V6&BOt%61(Mm;!0OE=fJ>n<8^`C2^Oa9_iPUS^d!^^`%\<TejAsd9KaeNc$[qN1*M4b_4+219%9OC,gLTH%A7;j)3a?Ng6c2QKsJerfQ;R/%((B!D1R!0oE"KuMB:*8WL3l-(cYI%*l3q[.G:T#*67a>ZQ,QA012OC+:,*]QoTp^*$$U*@<PR;.IXMTL[qQ3d/#5de)5$W2Pn74Q%=_#Up[5%V6CP1'C(g$:W9@cmlJJL.*_^LHVemjuE16`_ZD91#o]Fn9=l8O2Lg7d(@Xu.K>Wc_F-0PSY7aCe&sOC@Yec([OuS_9iA%Z5<R1<=_0W]DQcLc3KtpG#%nL=Sah,j[k@f#g$6;Koj,?Bp:pKX$29`9/\;91bg4]ZndMV'JR%3?d6*6`dQ88`!7G^)I&'hq/qVa%5rhYUDuO>8P`/pEqkWSjcYOD8OOl5X(?D9/>S^pAp1@,hU4R2>(0S+N]SNKIK+.V='j#1LfsnmCOMhP*.c@I68'nH/f7k#i.tS6>%D1W-2#;RFf*g4Oq+3@OF&PSe'Bo7W%ZXa>$ejI'4I0Qh2O%j?B1p;H=ctT?Hkr.dBm@+Vc1LuD](fqJTm*d/*e/a1IbW\V!0Yp2J%@;o4?KMMD]IQt@,3W[=3"D*4SE1fOMKX.DC5bB*Mk].1Z[_k5EgM@G$3[iU]L=6[R9.#YBN+0K9=b126)]*u2C1&hX@F:\<Y^$eL%%P\3AQ\1U@bjjF8r1<.VCp$2$bn,FrQO(_PM2[Ynh&2^`_DlXFG6bu9R@q65mUjI=NW?u<]*:]a.@.@3+9d__6#sN2mVQV5ZBL*n%]&VJb$=9\:2+W00Zlk-UJUmq&P<gsOLT#'"-/kcc;OjPh)+32]ee3M.CEG\?k'4i.SNL6jB3S)LHe]4lhKRKiK'Rp,+UEn!#VF4R%FBeo;%7O[oe.Y,LElH)`-3]nL;h3MA=ERGJLu1_O!&-_]g;pM0'(@>IM<W5!At<Br&7p62;4QGdgP1E1oBZRdo5;,GUQk7'ls)+W%P)]gr.#Dc7$U,h3(#l_;AT4F(ef$Ssmi.HFN"QE;-rEpK@3HL3OG/-=i5g4N8*YMg,I0q6)HhlrXK+Zf9MIQDbkMB#p<;NP^sZ2D%B;[<(fa:26AmH\aq\.rAQO!mc7jnJ"PMO:;&2<<"O:u'0gN9@t6J:0,`O#tOJgd6e)R\15]>\L>3/G2!#biV_3(-&N[ul\n0FI==%+G`b%o\XF<nH(PiKDV'%6c/2r;CN<LT6a4c$h,&08Ja(*;n69]fHb5k0IK,?oPj^>#0T"dn0d7#(bBi[(r%Oj%\sk*k(BpQT*=-b%MeOhCHBD&Y,S*5`f0!Y0[lO81A#!.<MHmO8n;,`_ks!!]WFW@]Z\>-76b9ioR"U+kUr6bp=Ju1D9/%n!iE9?`EL:4UDkfE[/2ZHL%ZEEn\63:\]QN@PUoW:'K8]`]^'c.t?&WJ`Pn[&&gJ4sEH=2=qOXh_-U98r@ul4MJ\M4o'VA\q3PNX2!1'OgWmLm:0+o#OXaHT,`!%p*!%Pff.-E>n*23<Up6]a=7Ts9cRQtXs,dVM/Q>k4aGa_)$qk[VJPcr0>8m(#/l*]+s.:rRJ@R>["u[Dr0l:t!CL;S*JEe15rkC\%4BTMq5^c4$@pjCkfb"7OJ[93'/fp7<Z27<l93#q:3#q5oHi3(D1h0a?7CU+oa)]%kRS`0uQ,0Zi-p1n21KKG*<2!1mpf!#/X"2Ti%!&AH+qLhm60Ff)'<[KFm::"[j*bGDmBFM)FM@PG:Rs`NB4s8i=3@<cd+L7uq4V+Wh`"&F-<.P7,M7arji3<Oq+h&lTLE%i$[u#Ol%P8M3K=Eu@kc"E^a$(p.e=F&5uU%9V&HG-WkbRF7N8]ApV[t\uiDMQ*;qANtuZMlc5EKD01q)4Ge<0BupO_YZ'0%bHumgg+4dNc6i%O2sB."ldNZ,'Mj;%;gIC-[Bj&0bHVEBiK[k>SBlNl'&B;"-9bW5IpdL+r9)-/!?,!F3fA5_1p$+WtGTFA?$-?Pu7q0e.L7gj92FB%h62/joQu%0<%``1@I$N>>AK?]5iP)E*$\;\p2F-?<Db@sls(..ocF0>-t/0%Fob86PFVj/5aT+?Dobq!;#&]:,\.m68<]#`Yact?%_/qs;4?dIWcnG:0dH_s2<fMtb-S5j"fXVX=2K6>"@)].SbHF!00)1-f+cmgTj%?Q+4#RaGL'I`u70h:p#S"CZ^]7l[,+(C\6/E:W%6Fm!3?<S4`_CG#V.O#Gu1:rJ5#)^O@3!2(`Fr*k4+S=1e1QMf:H\jJ5^0;pnAhmifZjqGh'(^Y,DSc,G5uJh2Po-JFQBu`R`[n>_%%a/PVNf,15A/8\24cs=3p<7ac`nq1?G)"?N:D$e:q6eV7oJXAeE#Nqk"^&UKJq=H-<'Y].,(c5RS31g#a-2cl_oEZk0LR7;VU7D:%-0Njrit9RcTE1eaRV+%r(G3)fqkG"l04m4*OqZSBJf[#>D,LgL6,Pe;BohFA+BhhE)%d-A?K!1*K3U/'kLk.PPCsnQ.`7Yg#`H"+%\Wt6(%tgEiM2\[mr:u]#0ILMo%,mUo"_TM%e!&7h@pjI^dSi.b*H%DHo_qE'P%ieHGfFs+T,j7]q>l,.[OAWmJ;ej?:#L(Hr5%D)%IkA5XaAq6h-$e[-,9PsS7/mHL6H\$c-V4)gd4rKIO+pGPWg"R'(1I<5F'YMAQ<Ic0Mn<sulngfOO#p@N:6X&5of+.RghK*aOTD/@%l_W]l]VU^5WYE8F6=;^6\oHLQ^V.kTqK"jrnAJ^H*O'V"4^uDP\96)V"pp)\I*OuNQ]fR%aD<"HB!DK4f.okiFY3(:m3:*sT3n"!%S;3.,p)Z82*d$/INigYcKBO4&fFUg:Wp)(c+0lJ!&+g34Ngn+e+CiG*+>P(]cNFlT%1>b+nchmPB5BiD4kJH=8JdCl>R:'i,`eZj%nb4.Omek4R:rD_.%TM^WMjXoG8]SghI2ar).;d4Cgs"^X,#`[-0U"^/JqiT)FSbf\qU([?F@cus(j6QW7u6q0hQ(oZ.JRI!_16Q^%n,joR_)J5.U-!?IFXesL08O]6W.Re-(n;8k8N_)uB$M2jq%@6D.J7Fn9\Ffh[Y0keI=)BV\7:X<.358<BBM_:lSiQg^N))&TkCY0%^EjO'%TcV.Bt%TL*O4XDL=oF^RT2G]K\WH`.aCBJ>/=f<-h0%*s5#s[+eD].Gq0X?+L9Ko8@genk;YC,=j.nI7?9'#Y6"F?"C>6s%@*-CX&&5P7d8s&h(Z]co64RY53Wla'<2T_[1C;_Cm/D]m*:J#OrFg;Fca;+LHY'.(Z]Ze!.YJhCcK@h#<)LW9j`$\0fQg'k[TbU`%"3H#[8#$C)@63\WG.:SjR+*1[jLndu;P<[bH/"aR/7dAu;+s]?5$MJu\VSLo<==f[BUo"c2Z@BsRr>W:XWV<'5j35uc9=V`=Q68"%adNdn)%^TEakQVO8h!;bG4A)J#]fj8)oahA)/5JR7dQ(%nBHM`9chU19G,=$ibX[=:BK1a(9G[7k2M=g('q$6!38YrSR5'\Z,_6L%!-Cr%H*7McG(LFtgI6ikj]+c/]%P]*Ceq+nJ]:E#1ZlWcdD9TfX3GR<5KFYb`2TtXMF2V-V^$)^3J,446Yqr5L,>U.P67MH&E=;R%NF5ckRii+%KI+ud*2P/3I,XGeA4;2V*DT$sXVJ1`LL`n`gUPNU[:/ZFZ[>9^790k\>^,`UYI;aY+cS+9dhGa?,WY`BFTN(\Z:EV;%@]M7DZg3!u?ppABQm1"Qbo>e#9uRk/+/Cbpr]BgkGaHM)"NREmE7f1(rte7k8KNmDrtsqL-D.\o@^4ZW,qaY!1Eot^SGX)>^lRm&%OL\iZ`a4'OC-reI(,5mnST)<b_+Gm%A4f["%M$jH;tLef%$EEdDuBHO*e5TKRotM:A<^-sR''l*(*b!.*`@Z4"3<*h,A7>RCBK:u%8-T`tDHibU8,kM+FZ+:7?LiaI%@.h^]KBCXN@u_bM9O![kCDu1\Ktn)_+L4p.U;<c;"4NoQ!tSKCZJppmuoZPc&20R#5#-OLJfY_%j9s$qn++CB%^&*V-B@YAW.kF@,XZ"Ac_W9ud7?duPJpQ*LWU'6kOb-DmR6ba7m0dX&s]W95O)gJCGe*BEP)g/mYuVN>(m_)H]O\e%Ed_Bfh@ZhT#ScOi&lKJC2:AYZ0j4XNU'>7l0%^PVpdQu7Dc8WrC@Ht5<a@^.k84B<cG>]=Y[O%6\OJXc5q>G_;S0s"h8L([^"%cN%PlA.**h]FQ@N"Ni($V7SOdI1iB-fuJs#XdAQ1]C6@qDeY@Kk$D15R&r4/A+#(`8H\\D=L8;!V6!p6bqRjnS=oBZBMY3`uM@KA:q"%k>=fq5UKJm9u[h0+f.ts<>SG?ApBt$!lF6!qXo;>VN=.>]9Rs&&o=o9l8-Io+OH7sm2bh@j.PZM-?KJ\nI0"2#41q5OP(n'M@_(Z%GQcY#4c,8=k[srO>W#$?*;1IdI/JDR-nM'8HHa5=nsb:o6dLF`Q[Ru[1WY^>#POHKIf,J%_j'OB8UMFqS4;$5r8Z'lm?1l]UER:D%ETiPX4P21=PX-@HIlj,TSq8,RC5;AJPNc2^Rbi7QUX:ft0D;UfDCU[bDEJ+Zni!aRmIZht:r!4M,gQT)q]p03+<:XC;?=`F'he8"%o2r"tQRX4LZUj_rE59>7&[H39)`j?J\a$E3)bYtWhj8Ufda'YH#CZ/<L,n^c3J&d2-NYSYYXiUkBgaJNBTeJfCg95ENG8_;$[>*X%qUK!OppZq`ok+'?aGO"%J"H=8$ls5a]U@4#+]uRi_.RLObjiCUfaVB&QH83&'?u@gad^EgE'M2d50QpGRkmH"`LO9q.bO??S&o\F%6Bi4@Z#bRHX)E>'AW:Wl_lU*Zb.ck:!\XR(A]*3=49sAu-D@fW\<L9Rll#D`YQP=djNS=u7UpiVR#lI(LJ1l*).VBC5[eaUJ6U7H%4AUkYP8]:AJ_e:\?t5/dT%RUcH"$AUK,rXPPOL&JZZnfX4pJ7:4DrGR)HRHr6Aj("]UM;c3%>l8lKM'O,*NV8.\8SWUn*qM'[7XL%VDqe5mkb/78<Ncl;tS2j2bTT.aCHG_7QGadZ0In7[EgZH%r-Wd5BlH0#LnbpWUu2rhBqE-2KRKVi8,CeG7;ccFW2#Z,jD*L<R&&.%I1_rK<rmjnIj[=E<t,pjjPcj$WZP9NTd.b))\/XePFiiIBN^#B#8p'>6qg'J@a^/FZeosOk49?$`7ZcdW!8C7(K+*-bd#ZA;GK:;%rJ<MWIoQ%KaJ,%XEnQj"!c5;C>'"T?^<oQ;(jD?!PtpWK1K/F]Rqt)kG%OYq)p6a5j#F,M#*j)e?,[:aFCnE@1C6h,J@k_u(4#t$%-s2EJ0W.hs@f]7h<Mg_.Bp4U=[ECm;':j?e?F.ta!SVOTFN5L.m."rD7833EANq$tcafRf=a6Cn^4]sXPV`/ch2I_5:gTR<,]KcU%I!X"]GUJYLqB#O@B?g9P.*9=UW6o7qN+1J^4%e><=l^MnRjb9M$OoZKJ/OK2O^`B[?m6'X4M1=tmG@Y,?^P8c0&!2UODQel*;mlm%e8=?O_:l4dNfrKBr;D`l0WV,rJ5Eelmc3*bB[;$O*tjRoT2LC`f%SCD:eZZF,N;Kk)^NUl@X0R>-;h<hZ/==hY*HYhr7o3d`[JX5%?a/u')4Yfd3-2VYToeG\o+ePrL"B#D1C6&E9SpU_,\6M&G@,B:n@m"k,"WKn2UEtur2DtPG;4#u'+)@]Z9N0NP&LTO`8i[I%iV#i%Wm_4EbCID4aC93D_f0:QO,(WTB9?!e]F$/=r<]i,bF[/9B-[^A2kR^GC*.%lWKBi7N").P$8TDYPYEi8^*:kNlf!-Ekp4bK#cH38%M!N^@&6L6f1G$.k)s1;3b@K-u8:V::pN0Mb@:$TuF=V@.b-%]WE#Mk?FXg1XmSbG9=e\`Y4S8I#8hk(W+k=\,F\5R_mAZ?j<FeqV%8QP4XX@C'-Q./g3IT6\`FV7h5eZ;M:X)ce6`&?;_N5&fNI5PreS3pl^T`&`[Ch#K@p()hf2:rJcp.i'2W<l*@o_,cF3)o/t]+["8%b&5"()cHZ+0gTX'Ni.:.^iZAaZq%KOD[Q;nX*1Hk!BD`COma`9*@KHAriKb9*_+8lG,U!kft2.oFEmnTIW&h2$;hjt#Z$PTVJ"-$%1D4H;i*E[#^OX[[*IMk>gd;L(ZWqa?dNaiF<=m/c%-7?KrPls00!KC1EV-D*K*FLs[n:+gPWOhWN+%@u-B8qc0WFc@MP=cK-pfLc%1oB@eXF5u6hm):6/3K<-O0e'WXo5)]:UP;WaqpQEB9aWGHZ:!rhM+8)p);PSjkBT:3N,RmG0A@jnqWPQo?++?qq`:kq3Di3o(CW)%J7d<(MChfdLHJ&"T0jTYQI?11_aDf\7hZc]:-UEj$5sA+R)aYPr/mM@S/;o?@%R:dOE7+_hh1neODu=iKP-q_RHg##;gRE#Z&99Q%"iO)&F7I>i'k>c!9@HntWJ-C:Ub"iefUZBI;d88@j'7s6T!d*'p,Ir5=<"2C7?8+q!V%D(2n]>/U'>mn=R8HV7S[244n9ie.jPpb%"0[37GK)#F[JZW80rnbT/Ff:5am93M0ZoDABN3[hn-(!+MOlp@EJpY#C$UHKeOF>ja=6?L?kisR0[)D&/quQW:H:WdNM0?CIaCY)%I_HP6!;V3RRujVS8hk"fmgtj4hh1'")!+@Q44Q%r5Vqpu2JT]1`]l^aj!Fklnq#*AZ6Kc.OIsqH%i=?%KE;Kj"#rLJ03UaZ4h)n3%g.2>n%hRkC1Q-t_]'%75[`^F1\?H$e:`'dVmHi1@g$Co5dUk,]HK/L=Pr>u?HjB!%@/c$#+3$l_Zd-aE.Fj2!SbRla'DXuTb8/K&%-6gHsl=--n]9=[s116Y^aQ0/68(l@YiXGU8-pfuZ-a=TJ@kg"GV"38#8j;3iKH3!<ITm9m$<q`L\R^>b/Ya+!e"jVX-0$_4R6j$"%^f&f9n6VOE#^k1e]!o.0XnVFhSbu\=#e/6<lX]$:+h<lH>UMJ^$.,e2krP6DO`-fPA>a.q+jL:Jd5t_Ll72RB'ag'1oH;#3-m3ip%@2ub4WUhO)'lP'dQcK,64UsSH<FnG)\%5i.o;u:t<#-O_b*2*7VQ.q@<=Dlm9\!]Sc/Pe87&s>-Po"fGGcQb>ADXNp+ES&(DBbdD%W>l>m:GP*Q1\*eG(WV<%V((Ztgai^G7_]uO$rEKBN6eEG-e<*sDi>$(asV(;8(Unn"]jeia*d5CeomV=?06X'=lM[6As;\`nUdBE%<dpS[7igVDMt62$apE_%B]cU?+8=A8^Q."n`+UYF_2^ff4<7c9e*4(cKN\uDVhAQ+=tOqnV[-W7P$N.QngFN[;s[BpAC;/>G:n#]%)qfS_*5=NF0M*"D(I$.m[!jL1%dV?W14Sga43t0od"cm7WCG18;0hDc`8E\-q"(VYAUH-A3QY:(':R+?k;"nu8bK\KbpKVP&=mgW%<//[&Z4;MG#A2'W@$82MnqlbOkS*D:/A!;aKTpdB6j`5V\*B"S9VUp--P4*3C8N3P39XVqo"lAW,6"<!eE,?T_Li`s]9/cg+laE/%3UUB-bJ'O(?YA]V)?!RdIp!YN<tD6fneqUQ;-f#T<\'Cl%IMl)?Q6O"[rtM<Q$X^VbYY:F=NXkbV:&m'1!6;ko4I:CRQL[BNuIV.%hDp_T`H;3;01YVl#L5R2PV+]T<Eb.@SX?^jasCi%<]"Hen@7aDPI!p67d!.m@0Ld;.mC&?4Nd#3>`4*=bLES5G#ckT7IR@qpf@'8%?"/;u%,Y,Q<^lu@Cj-%9_cGD46YLHdeD(DjA1/93ROen.QNR"'ElJ?h99cLh/`qkX?)#/#;6s4I9GVdf:W7e]i,@T8(Y0G3LOQ,1%&u!i;pB869m@Il</87AJP*.ADkQ*_&rTX[(P*'SZ"JUb2='6,:W&2]$`Ynsp<r4`naP[jhY3W28fQO92SPIp5]"O`))q0#;,[VF8%Gqq)9R0fc<>@f;kmanqos7#aPLVIsrs0"Ze_rlOJf73_]hu-=MrX]&(hu;ld7,CBXZ4WqXn:!QEKF#7YVOI\aq>\2-B)19_pJ:ha%f=uV2r:A[`ci<SIs85+]j$.tjc[Yd5J,ZYOr3,Sh%a^jIq"aZ6q]F_qh>;,>ri^VCBp\kspYYo-Do^i"H,KI0^NoiDc:e39q7jDt%r=A)krq+gO_1)7Ya1n5GpeU(&r:^m$lhg8Pa7oW2ru'\n!S@:@(28#4G%C%afCfubhjp;=MZj4[S,`CFn%X;Jh$-ju(<JOJi:.d*%rgd9u(*af`\!:#\B&!=L0A7SR4eZ8<f>Kc&$D"ZbC`jor9]3cPIs6@"/(=@moDWe0+1[((mYuQMEX,DD`fG7MD#[m\iV@6O.p;>2%rUkO3rn"W2p1?ch9u9]4.r",Bm?b;6[:[!riA`:RMRb_I..]q3DP*?tkGolD3BoMd^ZPI)2)p*"9?s1..Hf%Qnm>PsP:jtFJ@;@L%5j+a4e\MDGYm&6r43pQ)^GYk>7<lADJ+n"e7Y3G1$MsF0Ai[X%(4L\=\8^f0XSf&-T@rG=A)Fu\g&J'7qqEWmrNE\LW$OhQI3>RW%[4HeZSc>28p<`WM:CZLef5p-TZ'<O`%f]K%s4VGlIs&=%^FK!X<k87>b5K*G^<HP:N/e_0s'KmJPK,Ki'EihRN?ucZC\L%?2lT<J%D<TR'L+pGZ_rt,?7_1:[WjjP.2s\WWLMi+M:0/2qF=ZUSgf$D:SKiHONbW-<e`a+ZWS3u,<,'!cOt-78T9*"mIP)rm<SMSXWb&`u%o&b1]L>]1ldd69'9!b:e2#F:$c-W?NP\+,kBm-Wr?S]S<qZ,bJ?:;NVpn6DoB4j*b1KO324d28SlZ3_bk=_Zfo'tL!?5DjqL\C8h%Y`HO;p@7kbp@6k@O8X)rgB"d`D`Er\-epa7m&s.lql@!/I6ZQ8;sS&fb@BO4eI%QR>tnftFL=#_Y.cB[.uZqhFL=7Z]&NXjM6=Sk%Jt>'!`Mf7fXZ'?5:Dq<8L6)85,Ub`\i[=VLb"m1;r;U+M4k]@qSSVO.^h8;nGW7Kd3h-Gc^E)!E\Q=5cX="YLrTZI%naWePP*j/g%p6%a[?fGC^HV%1E<06nrS2<6ohd2KA;%0KNoD:#Zr/g48!h%qI7HWc>@.Vj5Fd:3inTRDW5@cW9,P+QWb("<dccQ+?SY8#Mj8?>6%F[b98F+%.$\LN.bTp@28S<FY+3H*R?2Wp@$-jCJGN,@Y$I4%fYr,q$K`Zsfn]O"n)J)iH[\CEdR$onI37(lUH^]1h7?=$dB3IQs@%MKn1[2\$\!NSAD_Deolt<Lk$df':-;2uLg!s&/a!O5E&=_.1klKA$Q3UK`cGi;2Q#YdMgpT]<tDq>0OWRG4Z]gNhnp)FO@9*6S(5%R4ui/RKN_,^gXu!m`3^p?h7Vp(Q<fr>0j;<cEAKB_!(3qZU4+EZYIskd2te=m6,BI(=@m<aU;42(epm@g_($2pLZMaJXd>=ig<F*%:?LsH3cS]150lk1Bn)c-Wl5@u0qUA_Bqh0\*g@(p?]<WNrMs:.>Q!sHP$c3%%[+?7/KVS_g6]PrX9g/9gm_Hk?a&mHrp,Yq>$i+L%W6oJJrTW2ZY/d/62?b"_V;4SB:TE7<bt21m#BuN^p;^5d*OeLfaQOXe,RE[m0J,4:_Dnl>lC/hGl)eJ-eR*kM\.RLp6uWc!S8!f_%9q*dt(FSLF/41j3:h>`b19"J(VTR`+Q<^P'=XuX.o>tO3QanSX/Y2.-l(p#tmB+r8rI2pY<g>(2b-7aPXfu2EE$gaNMhGJRg"3=s%^4Md*C>(\r0U7/[!1d(Y'P#t+C9UoN="Q77>\_uXWiW\=L3@>amojJAI_@V'@N0'fjU6`CX2a/m<f!<@n>%LhR`_MMMc\'%I_W9Y%=DOV];U..A;^MEhCP]`ShjO8iX78O;rP9,=;2'qE3NkP@&+m3P9P`ALOf/nT:tm7&hMhsgEBc2Snt8\_+"nm7\aU0(-63`<2Ruaf%duf5O(qTtX%=)&T8uM86$\WCYIMNZE,O'd$!3TRj!AONqJ>OB8L=iD[R'1:,3JE7\P.N1H+\K2#>A5lfQl/oAn/SBZAP`lS6r.1"%cXXU9FC]E'kj[r]$GA<O-D&]W+)eSa';fTsXa\7Ye?VGZNA6LWkXL3RApL"^hQV?Fea09t1u(sIN*QRgo]BqHOT;,eOsp#C`"XV-%L\.K%"t+S-J5NInQCCSi):JRjj;&66p0bT7oF#eODtO4FUIUB$mhIHK]8BBP=maZG_]'j;L,[A[ba\(h^4,[9<Q"D\D>e_1q:..S%)S^@.Mcr8NouFa@DiINB^\[<>`UhY7;ngLL>^RN8/o7Z;eY;`DMm*d'c?qFMa\dOBq01o7R9QFJnm;V(`m3Yp30YK-\imSXN)+V*%BP)R%EH=>)ab<`AnoZZn);d0\1+[4_Q!<c.)/s@R4n$:aFk*PS#Cba?_*+2-ck3D4m)TbZ#0WlIrd.^1?EtZd9XX^\gf(NQW5ef(%Re"fCinl?V)uk)j`prq4J%''7F+Q86lpj^fe!\ipqHDcLF$WIt2Mk)-RObf+VWB^.YATA!ZhN.-f)F9C8$Ne.C5*>nCgT2A\=p8L%7,&O>9sC^BeQPM)Vf)_O*]CM^.?H$Af&X&Ip$f[1oj>#*m:aO@TJdKA;3YPO7'(lq(KO8BeMh+Wc5T*+XF-&s]"rGM`nl])=i$au%KAf'8$69S74`c]_A"j3:TeBttOpBbH<Npka!Fd*,0N(T;,nd]B#%\)dD&\`:j3Il$?Z%mD?cdU&4orY/d1N]o-8UZVVgWrcN#PVB%!$b*aNnN+dpB#%>ct%1'';@tO!N'L%@r?o-`HI0W&C$]LZ=qlkq(GLLI6UN86u_'3!`fdT#[\-o-iRob1sOi%LX,u6KjuiS=WiZ*%*K0%Y#,fgn+4="`HoGu%(7>9tC'\jTB>@8JG82(c-R+eh.CY,QHf#[crhuu2`Xik!cQhsB0m1JKGJd('AY5*W>.;MI\iVXIm_(j'%*b/*'7IP!`f(bg)HZ.a<JEm^\="\OHi4quT[0&;"a(U@PfGG*qdZ,rKoZ0S?Qr9]+<+5X>io*bt(7l*'Q9C[G%p"Ec^LdjVZaZB=%aMU=:lfC:Mk-HR:a6*>CWT=\_:$$C1cc.]n+WHHW)%PSNk(Nu9b+6.%U;Z"%=\81@qC36J'@gA;mT3!\#,au_M7L^bp6*MS=$u%%%[_$&]PK#<P*QX&FMnQu9Seu7s>-bG:/kj61G^I_^=OJ6OmL9ouiHI_;\5otlCINTk]W6YYd/6*SXdh4KQ%skm0j@dqY.5LVOnH:V%)hJnSIUaU:$gLlW##kP:(t[=l+,\V_U>@1-#AOnp=?c#)Hp).LWWg2iW;$d>Df+(CKG\]YYK.BlhC=E%n$aVQA'NMjo/V95e\$t#%Df'[=RR&^lRJ^gh;1?9F9T4>84diT5k+%H=NP>7,@fKmZ;#+h]?=4/rCUV#3IdsFf"h"q3_D28tT4u+i36ubT_C0(0i>Rsg]@@uL%cVlhor6:1YO;"bW,2?Pb,)e$TUPj0H`I4^27b:OIe/"I8kj_-`\REg^]_';RO]#K/A;0f\/O'+UHu%h^AD_;#\Wmu;o-8IfIJsl?%9aN^`GpPJSH!7?<eps&j`N?CmJ,;DZ?b?6(7ros5G=$56$fnG;-N/DhVC"eaZ2hX-,5lkU`aft#g[>lrl0YTAKUQtY](_^leSd#C%46cKD8R]3EQSbU,;D(qO3mA8%mL$8,N8T4*ohF(L(R%SuYn1Q[#'m(6-K&EAnGY)'&?+1+nU:JlAp7mX:dDO./@o,2g"s4ej@Nn<%Xjdp4$p_bNJNUlALC7SgU(Y:`V,3ZT@8gnbhj+NS.1o`d(ni(l!]h\"Ch)0m'1ad064TP=^m;3%;?pL(.1"'%.K*B;&R"7,SL24"%gtbNY^NcA!hKCD9,r2U6C;C#XU7,R7YWol^11IeG=Z;1a6M-'6L/CK*TQ*]I"a]qE7kFUh)fOHCE4!Y4i[%4Lb9]n;'Y+Xp4MTKW%.:91<jeF_Hl!0$n1;e,g%rJG\K%j1C(/toJnh$.)M+4ilB+8RK,ZBQEP_q;45q6*6ddL)f-C;LCH7L7]dU&)ocJHq%8VaW1@`u$4%UU5i&&V$4Wh2eQ12c%Z-ct;%b:LloH^ODoY3RXBHZ/6]?XeuVQcVPti7/I^/NglW;:E-8`(2<tFgI.Vrm#Fh'C=6oarkFpjRRTnI%&r]p23r%h3/\"0)N%h9P8SgMjJ05.>klKTm-_2/_G,Zgi8FB5h>#r`hW_aP3>mooQ-9Zgc"Xf6s90oM@jhX43A`L6hH+>$&K"unN%,;ml"Sm+D=egP,(0"h#u/Q.9VEH6%J'j+uZ<.Xg&;5pS&XAk8O=Rdl>@\qd]AkZ4'>-Y/0*^Q5d[VK*,DO>O-Z1Z2?\%8XZ]a<Er%)$TN7M?B%K#a'LcFJIl$4t5`e',0]9a``P<GS1T9Q\c+oRGQP"L7S&T=,m*a(<@?]@kqhu,`+,B<?ggZ-ti0H*s^&,363Nf#&,11%KH3O#NBI!l33IY:f=7=*,M:lXOtlFFC<-JI8V1>2Ck2h,=$b=Qkc9eH1.cB-.$SB!r?IKt<PX!a$kPq/ks=[Br&q<+%3ff?I;0MA%9Q41/jia=#9M6FIn^.H3qsgk60V8O(5$ZUt)?PZ-@hsJJLWD&NKtc3Q`a:\riutRfb93fL+<j`NmJ`imA$"5?+$NZY#\4m5.q:j4%%VQbP=,Qin*%AT7%u*lp-J^"!MIrXJ/'0maRg6!.;%9PD\re@=.Ttr=ZRUXPRGo5TUidL:VNUtCM(gMNd7&),79^,-njlh!&TK[V%]gW4FKlD6U<sWn?b::(r1%?kmd2`^<RE1r(9K$&9_8Q+6VFZ-:K(noR-;Z5K2:V,9c+LqX^f"==V7r9L'J_qFl`X0F$;2C>6Y;PJ%8m#V%`,hG.>AYSo$G887<D'C=`^uCnY'a=9Ce(JM`\4ITGO\t/kd.Ct/MDK!IK1K2!O@V+!=Z9'A;`m&3?K`5e^I,i]='+E4n]:=%MZZrhK/s3'!q1=EJ(qK6#\5\70tt/pnu134a;f.)agI=D,lIB)hu<Ta[H$<:rl6ru:&i,cqYlu!H2l?CH2IC4gV99Y%sI)rT<4"0%'TLYj+$]c]n+t9Nrqo"[r4\]5SNX)P2#V@cKT<q8O.WQ6Uq8kIWlW1uf/;5HH`FAYGjDHs]?7O$?VeN3$iL^=^085CTPI%mYZ?T>%d(U^mo?PW:Dqs#Gk^D=?=6b4jfN7FA)gf`@mEU`DDr')Dnr4T8MS@K?I:_<GZ`ij;F.fT+qsGHU,20%'#?k2_hgJ>%=PUJ90<]fn%KY!&Rp"Y=`W6<B7gLYs3K1Am`k5[RncS;^$C<u?-Y#3hgkiJO\]C0cC\pZ4PL$;ZGlcR<#jk9n3E[eWg]3`^Aqs&3FTfiSHkFI#I%mFT'5D/sj4ms;Z/DX=?I=&3tg]W7gMWct."Fmi,Wb#UfUh1:WaC84[5BMYbCmd-p=D_:i>)4GDpl31C7N13O=P-*9LVoE%eQ<!Xe%Rrm05_mHHpm@Wd<N=u-t%7U%0HDM$WbAKfn^6XE;V>(t-Nahq;#^9(%^.Nfr<`uJqfWuBpoq)\CUPp:SY7(/;9(\A=U[`cOr4954%S0)tK'_L..=%iCRT8Q/:.<qhns8G>c<Vlm!X2XNlTTS&XU(&;sVeq73e.E(brt"P#leVI+O/9('RlVHaP7?;s6mM(_73`2VeT#9`%K0LB35XnRGO6<rMiu&:uK4edbKBqGnA"J\%.hfNlb$C[[O)Y+2NOnZ2K3r@^/H.i\##i>GXb`bY)&fNgmm!P_^lYuVE\La87>".i%Kh')Pp8`Vh./CX3MFQQRCRe_sMa7<hHG)gDej^QsMFM36qi>D%7KBP>,CoKM7_I+IR.Qn,.FK-Id/HT-d!DaZH8-a\?i31X]L[[B%UAIAA@n$-n%TF3F=/mc,o%A?bb'282Zn@>OHbI'KYO3qt%3CM02T;L=\&#]()Q/@'l^En;LX_3E6ZJ!8PXAg`/]U4s@R4/tY`H!*%r/_qX*TgD;bh;OE]kY9?'THWE6Eej`W:)bQ4e<]OgF_mSqKR<?X@Y\8_sa<#OaF]q#io-T1`/Q0p2PcLcB9JABFdn[ZS$,0Vp"[<%;M\TU8/p>.%ij4ZjiE9:fH0HFU;99m\*IHId@EFJ,S(eqe!'k"+Y&Vt^S!'%nB2Q!M8_:ZL6+pK<E]Nq4u/E)hnQe>jH5Ju/!"?X%Y.(:Q$\#DP9s4,@s((D@r'i>(DbEeId@/*/GYag"P8F6`$p9i7//Pqlc2_5IHs7RC"_pFLY<Ba[gL7_Dr$K`0&iK-9U')eBa>9/N%K63pZoI$>mOpE@Z_@*-niX*0jKE`/bg=`YlU8FKl3&#Opd@b&q@=#<<j-:M5TP%uHX^aaP9WeS^`Pl!1SsKo;N!JZgc'$O:4Zn*[%A+dJ-KXU-n@+OQ_d=cQ'iYU0T.sYS%N"eFW@=%0,+qI4*]-G58o6HTaTgA#96<E6/W*!),pcPi01l-Zg0GW#+Zl"C$0UT.9Cp3MA%6,M)cd7\O(l[]8ncjP=$a?c&bO^%%'kX$OB](h(o<`3!p^1u+Z0c+3]`!3KleSXbHLaKG!]J,S419'@P^HA2BX\X/TlRNpoj%ZS(%A[l7O[+EALgNO^Db+aq+HD[#r<pf\:$P0g)9<V#DH_n1@HmKPA0@_2)](k*gfVD9L6,W9SV-68cnkk]H2,@PY`Bfc_JVECg9@`*&%XTgt86A)\Gn_@3;OKdK8h&V>^Sonk%kmEL?iOZmSI;E!2#-C1D<M2g7omG+!ng'l6$sEAm/rm%1c"lee$1/n^_OZ,I=m2#$!j2?<%emOk3qtc\f?<Cnc2cFL8?iQuA>[3V.=\[?;_BU6D<NBtt*msEH.uRtsm0dSLh\Y_IA,PWe@'6]MmI>X:F1O/0<u1?So/:WC?&W9;%4sH%tGAJYob_.U+Z=gd9K=gKFOdu=(HeTYd"567]p<:L&kK!EYcZ!OAHM6uZCH=;F4bRMC%kA*H$(tQtBkUekPpW_j/Ih*Gq9g=s%8k!=rYTctlr.'Ar8SAXPg9V+:DJ^Kk>/r/TXDIVQcld*;HC_35pD&?u3I$+\%6)k6D*iS_gN7("gm4Y#W7tL(pO*kVoAc+/-8!]!%3gea1[e4UO-*(Llme1&Re:_-pHYD:n&3[sM:KRC)kOro4h=$;k.SaAC(ADWDW9Me?]ZqbrapM.P*AtgkK9ra/kCD,WAZn3?0Ntk*%r,<_.>]m1)ojKA>]jB1?FaOTD^YQ4&:_V`o?Ld!te;SW=4#lc%c(P>E*md*^4FO:7@@k7Ub.NX2dJCVoVJ#+85!@]R_l0L1H8tS>%B+M&7md/o_]0?sE&itS,KR:;:LN62.f0R"BF9/MspbMJq[B%tJ=.V+#VN_L<5l3P=c9(o*r,?-VO5GThWTjB2CY&mle@=fYJ%2\?%jR7fedlNrJr-qKI^Es07K6jHs+.P3'`^'Jr%qhQ(h8:-ZbGBhMnA1UE9N(_53X>n]NI$4k0`0oofAPKJZmZ32eg,oEk"Uc):ld:*%#p6ONVCg;<>7q`9l'<*[+jc\,nCbk/T^r9>7sCmnHO(/N:UUH<U7iT$L_"s3-:fuc,":KA5EU)2+*XI8ftj7nGBWI'5$[C\>")XB%XqN=#s6-.We=Ab`MKWV;]qXr]+BZRA4VWh>llM<Yg\J#$/>`p(CIF'k-;;Cn#dBA@;(m*`K2MM:%h#.;Yrt4.=#\Z)Jjt1K4VWkd%Cs/9X0jX5mGG?b9=4nO8gL^@Rgf?*g$L6ShHoO57[A2(iElSDL;fb,@HCa`VDX?;01i)M?oAeXCq^q"S$hQ)j^\u@1nG[WMk6A74%kL89"NBP;QM>3.j`89IM(ieOVpj[ei_]*dY^V2AiIhW8>f*a.1?rjgpc'('Uil&nTG7'"+QfGb#b!9`Jc%oSVdkg*Bc8U5-+nP3=%c!Y\"6Kl^-mJr;mAZP:J4ekbHjp1+Nk[:VH$bOo>O/KF(j3+fUB9Wu;9N3=UC31dMJn2Ih1]P&,[p?\^"=BX_B[;P9AdT?:)I+I/%k==P$53M0M[C9K/PY)ELY+pmc"(fR?m$^XJgVC<0B33UhcIq<->Ybe1^_J=h`4q*07T0V32njD'Ytr[8PNV18ZcQQq,=ZQ+=@]+*%EAE`&R\PesH$W#K<ER,af!>=t=br()HmY:JZ6:@7Mub\O]EU6(ZqA`M<JOmNMDtT*%CrK\Ea(HHe.^a`;CWT*"Q9WFGMO%(Gjl$$%,`H^Z>!(Ks$PjWPV'?TJ;`sm#<[(.h[>-PM*hMb]0?S<l2`"dJaF?O02Id.r%<=8_^;4'Gn5RUc?RJNnSis>UA,AXY(KWH?<?a#O%K8>`>9[hNsQ+%a&-^:TB#Z'hQ36g'R:6]%lZ-jNBcF62#c`e(%(#/1k1P(A4DP^jeL7*0$E=RS(Dm_%?ZWTHk*kfoORfO9?lomO=%_[)E0Cf<=QlsM_Vbu&&9NH%'7GJ\o`hq[%\07f@)pV)X<.a\)OOHW/ci]?<T,.T?I$S][=>.CUR86>C]hAK'jX[mq\gE`,pPhD@n%::A:.'bLX<l3.`EGiN<k7$DVWQRlBQj2ra3M$oH#9b1]&o_h7L(`6YtPq<+X/"MEY`_0YOHPISm;Wn-!aG.8$"642CU]Ia?e!,_k%3@/Gd:HBGU"&&?7.7R7INJ*Yl!ZC1d_5_Gkjt%gm&S(Vn%!i,'&aE1'_XOJ$FE,I"iArC`0>nWoe8_X<9EJ[n6anX>W/(Q<OY81:%l!P4/)O32hA<[J*S8N*>W,iXN*?_/C%$n!ho*>A(o0rgiclmKrXob%<&kV7K""pft_RJ[/C_d+iLJl'Ipc<jn-8b9q+LrPGIt=Ct%LeBO_#mBqRnYJCCJNgRMLPq6[Zu5,\N;PX33Reu=iN&MjcJI;H%Z,qDN'!ZP:m+a<(Ic&M>=.+S1K/%G#C?Xl$N4VtUE]bRe(Ac'%k`n)0,N1*l_[]s@ini&"=?M\]qo+->OM(u?MmEK&-akdC<bm9i`r-T4-cVm=B_f5B[FY"5Lb`&<)<UE>W29aIF<Q/'M4roE[kf0L%J8N9-#>1SbTg7PFA7li@du:eq3nqq6UU?>a@u7SG78o46T=Ar.+u!p%YoHGKP#]!(Gr2(so6h+?PnD#dWB\_#iYjnpW71kQdB\MN%U)X/&S"$r`N0.OKE8u77TuQD(Akc5l#&[%`(q0`:,2@5XK$ZEQ=Jap5Usg/E>pa3YMp=Ie,I9ENHQj)78;-mt$4dJB/c8j/+ji;T%n!Dj&qN6V#)g8JTSgcB&-7j_YqA2&S'H[g[J49/YN82j+#YBDVeB2/DRMVT(@t_?W<YP<ppG!k9IVLVUcn;JD>_+6p*r?%P4n@NG%,uE16K'dQc"<m?oT'"qSNG2.X,+Cg&<2^"[iEb5"=A'B-6bWiC*-]m]WrCDOU)<fbOZ/VR(qgAD`_fr\^)Zr;MBiCN:TbFYRW\q+%bXl$uQVIP8Z6tQp7nf+abHCEJdpb4=gqj\pNj'N.5LSP8T&=Ak8?tbi-nIs%ngE[sJTh?TK)Ql"+6WIY/'I1/U%Lm*q$n3<Ji<MP%0+@OC/nW\*qmb)kZBuMa]m_\o]q4Kd^laGT%4rX)iLc<HG?:O8k/':b+TZDc=A?';,YJ?%:\$u.K`up?;0-ZqaW=3?aV'<6&R!el%OQ!=gSatiMZ,:_f7*_P@EK7;@k%LhA%!Qa<iG<%;n\rRKX$&cRq.>)YjCAd[kEQSl8J/p91;r7L;G9q)V^"P;e2SO_`dCoYSL/0[%Lr!kR#8n51+<uk`>?6*\VOmCFk(tc<O9cLkJ5#)X8C6r6l_I#gmksbF,36rQ6:la\X?i*e=lV(FE<jlaLL::4L+_s,&45j5.iEq.%e_'ZJcc`S*NZAo\5nio&>S7I>=]iH2$XI2t3$NH\+sJg_dYH,/\lTch"YiF["%j0/*L1+2lJ(S/d[Ud"5V@CcQC/l2X_1O5@&5#N%2c^"pkO>^li!I`lA%IaS-:S#/#`/`DP&jW+QV#pHFZ6&L+q]PrGJL5TS"5<MLYO\&0KZ;`!??H[?3QN5jV9KsK.mlN>s^@q,"Y9.%%"Ttc2IfTIs*r#CSK/uc%ZF`[\bZYL`q]--;u2%n[c/i);JVK[C#s8HS`JBr1P['5:W7iuUfV@sXQ=dqK]8)e.;g<!iYC0&5>cj#%H[*]fc,Nu(@=Z<p_?:u^*pHmL9$b\Hil,^;1jn<b)PgBY%N=:E=c<QR@6Wd#aiBN"I%/Ss`@6]K#Q-na6\D"NE+(OR5&?Y*;=KnT%LNjd.p\@g'Pct3#b'g&c$'R)dZ)BBX0hs>X4\+T@Pa)Og6gLBkF>0l5YL?7I1n++mfqp9>%,5)(q[kK["cOM!&:fV=f-s%%h$[t+%["]k9aA<jhgO)9+,o2[\e7&grZR\X_@Bq)..#)6%\]nSC`q`PJ.]F`+TmV-6&$r#W3%9?<^VR=*nO\c9%N%?&4mhUClF1Yj?\r+S%dbq^a29+i!0Tr-?8T\+&]C\nU>:N6f(Hfnp@>O/&"j!+d$j^>ooloa=T)9>2n;QE>%j?_4n:[`.[DdEPG4*P;QLdZ?*`Nb)UGBT,%"PkbMmF\!l]Y#5/I:Nfg>p#D=<n2R!;6K+'qmJUGhKWGgnqD4FkN!J5Kf9;Cd'g^Pc62HZ6K(Nk0qMZg:0=U_a7`h$=/.\@k+s])%_m@KfPJa`J?+Mn2/hW)\h2MaaIsN`;E]8<`FnisA1&c`?C"4f'&#E$U].9(*P6I,s$"cMYfK=3!:chpm1t'Yue]Fk&d&>]'3d.@E%BYS-;4luddf4V"?4)`PFWZB;4_UMtXF`%<@*4(l&[$m5IV@?8aA5jJq\+c-<GuVTJa:5tkNjBVp.[qj\Res9DMk8a'Ti^]J'?'f@%dl8\h$4$G`m)`%);p`;KMEhbTr$YAXYun/B'#+-u<3$YM;-&/3/<;Q#'I(RCBbsC:!+B7f.\idN;j&m9$OZu=LJ\e_%Yt<(?plu/%3RPnKZ5f'K^T!=4CUR@O3C89>C)dCtJ67gmj`+%j?9K=iEI^#"`ecef0^KHZ)eXl@Y-Bm%*$C8R5h*e>G;?Oh.,t;kgXPQKYg^8k%&m(TL(_jq@o)ioYRP\Qf!g.rj[)hG)TMn5]A-H;^#_6Y*U>cbkJ>M^#(C>n_L4ok,jr*b/9BmEG%\OTd2nO<U0Hn)8'*i,nM5Cpu%0*^JQ)]2'K^GsQ&+fE5ZS-7]g=SKe/,>l=8fO10o"%PVD<"O_nE^[_T@QYbV1s<Ab%n4aB_hDZu:+!*X\#<)%[[Ii]eMh_gg`+gu%VT%T>>mpZTl5MWN2Du^815O;iKNUI-a_]oNTD+IRF<8>2hXQhb8/kgp1(,Z9aQk?;dhW'1`BWO$hcL2lGiscQKlEu4:.D-ZS,?9n%;l<pqXcl!KkF+#.PT(N`+Se14C6(%HSRYLKb^l2@qHY-CT+:Ih]9N6"=h#GsC]$>[9#J5*]6:cF&FeB8rI.tUaR^??-W9/]iR_Mh%&'R)U%jp1i?j^3g#'05pPG3B-<r)Om6gY/AftTB!PKlit!o*,R3Q$(i[>KeqN$Mo!"$%3RD'*iQD-%bgTRBO%a!mb\$m=<1ApGEr%Wc&'<l!m,:d<d`q0<Ir.[T#GI9htMf,S#h7*!92#8WN(32qeZ%7n`:TTsMS[k)5EV<$u]o<2Tl9&3UR?3I.A.J490!37VNbO?rl0%&AF]`JnbS]T#ei<Je/4]Lk9I:D2,*=83&lU#G0E%oASrdW[:'E+,Hr<Lf*8IVFO5p\^``LEu+R`S-90J=7>mgV-ClnJZ?cJW\+c/%:d`S6/+\`:D'i'ra/[[E_$k#qF0k[r1tFL4!R]DNP?XZMh-N%t^Jsf5Zh65;IIshMILC]c3gVA3>E"`1Bsot_:b\WZE0-7Z%PrH-%6tLF<q#"a+VdGa<OeXZJB>)E[cQC0#,1s-hRI!P[&UZQ/4^ODd"!a@K*i_/cc-[eL\I[c!'O$rQ6IC=IaQ*NS'kdT%FH[+>Btn2_%,GNX?Iug)<Ykj4tB6.K`/bFH8Z?QQi(6iMjVZnhUquJg^D$$+`Q.@@](<G]XPFCOi[,t&jJE,6@QY8d.WIcOalqq4CjTO^X);c^'%+ekcc:%HOobSXaOQVm0jYl$2FG,6\NFGdu(R.O)_$B9h;6Hus`,*RA^fem.sOg;V1!qJo#Z<"7a64rY=Ir;;_i/f?3_M5;bWho]W%FueT2fK4>n#I;a%MWs;fcVQiM+WOLrF;RH*,]6pR]\t%j,p^V\S)0"D$HL^g5KI@W*;9S0BV+!mT_cpP[m!H$[DpONgl#'YSp\Xo%fM#-1jNSg^j\3a^o=GetVV!HS]-b_J8_QGR=YQ36p0/@kT05XHT2gWqmrLFsFkeOa0Go=:ZuAslZ(l#WVtM31d-74np0W-.lp(E:%N0%]Q+t&lJOC/&4F'\+'2ZQ@?o9'r@+jVt^J>7PLd/Y.R"<n\5@q'?\UIpBTj^2oD81t_%ZEqHh`Qg9UGT4QK^"LFgqM7FH"p._h%]!iD1K[hpd@-^sD,R>c!S8"lIeQ,qKjgDXt[Y_UR*PL0=JcrL+":JD&r*<L36"tDEpfLML`"G_KM5[daI3jsNG<L>(.uGdICU[U4%V%h6kcTbk^p/6bu1bVum)Pn.)0aQ`l'S4W>#ssM7ZiEN<7:;e'$S%#:-G,9:,okF[NPMA?MSN2Oj@'c631;[17$6*Jc4;+VKG]a>%&rQ3FVP0@W5t!HDJqd`dR=lbkD_ne$8gpj<DI2I)6LhnYfsCqd>tuN>7;Bu65e$kC\t&(@.Hrfhjhq[Je2e$tNXCSs+)JFR::gW4%_:8gZA1:`?npIWUMQ+"`07rsJ0H-Kg+nZgmS^W4I.\%Ye.MJpabXbY[%9H9p7)T=);X;DQD3US)RhT0gZoT<qBXR8oe=!q!G]&)-%7`&-Kr.<&t>VR]Z5mf6U"qI>\/l::cJ_5?:&HNo($UY8rfF7NY/r4c!>!*C[O5oE))LED-c1(s41>5,MWmK!]X5GlEkoh<V"#9T`%Q;L!R$^_P>VHq+u$PV''j\SP@#0/]km,%GZ/4Wn]^U4b0$fqF73Tmk&BV\0NlX13-:RZ?rh;jo3.cH2->%]/$k\MGC*al:5%ai,T%#XrSm@QBuuX(59tF".9f!M')C@]JI)'Ttu-E!%a/)brbHYq1n(HFcloORIpBJ!>J;c2kanYB2;cA1mLX0gj)U"c+jV*N'=!UtOKt%kG*lF2$)]m+Mf9)WZeA]G"])C6)JRm-!CeSLQ^uCCs_P[)Y?DLUs)^H3W-'G(2!>ChahpBX*Voua;fhDs7fe+:I+oqR#kQ)F:`8C%phQa:ZEnuY_qttOp75'`4/:WL^:JJR.c7I)<ia.jB0g+m0WEW[J['ocW&t:pb2<NAPg1r=-UB7.l,f%+7YuUMg(/^6-OV]bS6<:a%4=/0r,bUZG3.<Gu6]ra+3`Ng1HN!0T8-F+,F;08a4;^Qh#cTr(.&>JI-q#I$Ko#St<CML?[*XsIArZ9;]KUI_:M8bkBlCchM,-8-%)=igu%Yd"Z:;1/_4!$\5jG7l%jC#;&0+9#k(*H;J#Ql(S/2.mW#HH_IKG973(&N5R#2i=GX9HdV'@*ct8BX7`+Kd.nLONeTRXA[H%-f6$#<<dg*c@!`,gs2G\1Xk/r[:6&DRm@E&7XEk75]i@]A^I"&O$21>[WA5#D!TM]L7mY4B6tMQA!\LpbM^+Tq'PN@eMu>+SR#YC%cJ8Y:BkJt_5Zh=PTRatoDH*k;le]k!o+@6<Kn`!]@TZ7-$,P@.QdTW!U:7,W#NT`2,!^Mf:JDI."JtM>e^>85%]>3N.La>HhGnHY%aZ6o73"aoJX!/B".#$r2-)2cgpeHIQ_kKH!5hU#r$-1Z;)$AjIajS-?OfEl*&^q&kR[QO!m;0^:CK@(;GEo_gZ4iWkb4HYK>L..p%RWN9Z<F;M%s'E!<E(-r;,0-d$S9SI4eu?]N@TbZVOs4\*62jT3O]l-t+s"k?(3.Hq9At/lM[i956X/M`3%e@U(h\Ag9I:XEc;NRa%a1"`qhRDtn`umU<Iui[B")2](+q.*BLg/p%r(=RA(J],bhn;6c1.$<B3g5F-g\tSKN/%a4JB:q#-HO"5faK[2)0EX$h[LT^.DWlu%7&0g>m*#`n>gU78i-??o=<@GcmBlOgobUk]-k@dNG>93KYYg1f'B8LgP5?Ki5Du%Nc4?HFa;Wcp3uCNgOl4?o`.[fUq6J$X.K<CF%^!;c25A<NY_Z/^L6i!t@>CC)^@Za]^PT;!ZnJ?JZnJ-%t"c5*\!t:"/R.6$K@ib@93G<;k'`2;Q'AE7h)@]%IG&:M]!LTcbV=MYm%[=_$h\TQBs1hMI/91kBgYpeLXn&e(q>b4\0R7%`>#^"en!.SRt*m)Fjr+t\A02/55GOCN$3G"+U&'XBaSlrHbIA84*I;T:BB:"Z'%f.1CUZ'GT^ANgdL-eJb>/aEi"cX@;&8,Q$0S9B\P\gFHLkAr)u#R,r2\^$XAS6-E?FV;_lC;\QP;2WWm#\r\uXPiT&TCkhMBu@Wa%G$%hG^YB`%bSqTLb3R[Y^=Rs[B=*-$rQJl_PqC.6fS_37;Con,s,me<Pj"-0eG0$>EI[i/W/Q2ob49cI/#1+/qq#%NZ(B$^cUS`F%VsOo+<0,f4G.)k5DZ/CPX#64Fk/HcCmh;t!C&^j'ql@:[?`Bb:;1#EYY<T,u]"+QD2s4p[\MXeM]A%SZN2RYEpXNKkAFgal/Or$Q%,5gC:Gb'nor(`.\Ktfno*XEF+]nUoth%sYa=!XLa+I\*QB"o3?RHes+=!l':LmoKBLBJb4g2&a%"gJX^#Sn_T,Rhc@.IWNpp`M#F%S%;2ILp+FM-sts4Qqo3i%luX'W*)e/ZuG;;pq#'Obo'JB3`O5:r't3@$O84(!'iQt8GIiX]gq-b@@@J,Po4%s*tLc0!^9b&@E!s5%?5Qbj!`-'VdWU?5(XgJK3i(4DYqTk&q>2#N#:>3_Qo3j@=CC$k"GU0Nj%L__2kBh$7EQ2k@n8^N-3PB7+/2aC>_C>c6$@=%cjlSd%ZrID/O*VFQ>_!7>hm@1,+gu93eR03PCLJ#%!_-^lHsYQZc<oLrh48FnrYZ=0>O=8G$+Rh/`ZQ>-fs9g4#SF3`6EPP5TNLkaroI0g%^*/4jX0g06p]A@WQE3]F_[M[N![2>W%6/$0_+BlOl_^0_@'n?BgDi`[0N+"0IniujUYH48M+5HN^K6pSUM;-=R:9lFS12OU;X2u1%p4BJV8Q,*R:8H<'2;pH.<\WLK;YX)*$B-FooWo!s@7^D<74ki?jcE\q+FBQV"ir3!d]jcCYQP)(2;L^a))3Ya<TGD83*[!\k4iFW%CYYI!3R5W#_`(u0&Vgf@:dB81f6u5<?r3J[5fe-NU.Q=H"0^C*D$m>F=*>SkbE5X%7*EL9)'k0H,b5F\Q=J<O!$d.,_*N-sM:Vk?%c@p8kHm9r^K^,_ZDR,T:Mji&6&QpGV^-dXoA.8oV'%X;Gp\SCB,P0W*`#"nc9Kbu0"fni`l\YGfR&o1`s.Xg(r*r%`&;#lkPWI\Y%+S%Xt@dlplX7"Lfn"&Y+'E(go?Wj,BQ)bkPAaVs"/]8qS[1JX"KB84-:AC8YbKON%a17%@9-qHF$Dc4&0#8<,%M_MnRICfsLafk,%REpe@&,KCX@56/a)O.>jjdZ.VCb9]ZRp<aPiSTJ;PREk]<3'*oNj&.=MS:ZHU+k%Vh`!0D8DSH0*$3NnMgGJdGomE)g?.bfjkO4,%2ZQ1Z>?DfVW(jj(b[I\L/n3d7p7Q.PpY94_/GMBe.m=@rNj*T`*&]B(/'';a++7U#)T;&-qj7h[G2/GdS'JF-5O5T!OYU?D[NO1Z%AJ;q,M=c.`/X__CSVRl^!6n[uBOW=54QQAo;B-UEprE[dg"MU4Lup",V?,sU$=.0Y*K1R)D(-?Dd"&aXb?t6;KN7)58DCt`"Q744%@SH#ho61cQ-SKb*l>WQt&-b#V/aS54R.`!."/2%5mg0Ur-X_B/@:?6Y3m+.]a]o,?i[hDd^909[Sa$maHM$1_`HO*^a!4)$DeJm&%Hmmf#RI5ke9k4#kS:/('q'M"#JacQ\($1D6P>F3^7$_q][49,ii?2k8lS3iJ$auF4brQ4p-SrBSG:=DIQe:Q]hf3$:8>G@9OQ$O!%$CbQFm,07nT.GojWQ+`JRi#e/(H@88ooOThHk2nuPHW!5DR->0X*scn%!TH)D#`qE)RA^Q?Ep]r0V-2TX#Xu0M-l5S).l$?6^m\7%1/)/T%aj(:N_b`j3W\iEbou[0q.rARPKtSg9_`G@q`apoHthS"pd<^iq9%=6-S`ufRB-rEg,M8;R+aN`;4BunB<hru@,kXi7gq$;%Y"9M?dIs10aZeA65`isNg>8EK0\YAKp0D:-D"%/rdIs.iH%)LT4`10djDAh>9C$7+5Le<jhY-XLimITla6<^D(C"6s)6@bd2qH4R%B?=8aG9oJ_WuO$$h_:Rf1)-hYaf=u3lPk[dG#FUq4W.6s1qnD2F_Z:+do,Xomtc5K45Q;4SoL&diu>br^CaW+P@^&Xp,=Nk,WSBl%42.;q^T4@0eX3KnL^/jL1>+H@ZQQd%r3+o".T&XI8XE:Zl$)sqR=5akYAF/`H$Af&;5+$VR>)I&9Wee@:Ti3&$s,/1b\4=[8HG@@%^f2dAq-8brnS.kI*P!:cf7,%EQo3/mAiS(T<rcZ#Eh"4:VT"UVnl<^r/=l\_BW@iggT;s4O;U33hL)S(KZs";6nSWG9EDtZ`l3W<%5@@]edj"gl9=!NX]#fI$n35/jG@2H?Q=/So\`;?LQoOJFWPR"q7YZCl>C^6##ZFl*&Z2Xqk\Of+(`+Mi4cs(P,\I3BL9jbOHa^rc%J!$teA)e[YI6C4U&n&p(bE1adF+eZZH5:3IJOqD-2JN^E)qe,$PEZ40ehs]*@9$Wq6g]%k(bd-e+K:rK0=WepPOZf2X6amD;JabO%QQYWV,$=!lp7;NPf52FkE13!`":-"PE+JhsQ$dP9iR/Q`[$fh&?s;\\g`VsI0'7i<Hi<[,hnY][fCs90s5P'_ci;s@IK,;)<<#Ug%i_jfF)__250(`e64H2[j(-hdkdPE2!\tR^ne?A/XFAf/(m@3f/FKquU<=rumYs/d_XSJ8?$-/sL8m["Rk!1l4K>Lo<p5lf=S_%T2%+"D-9hQ5kD^Aiunop3r7icj218,]Sk?RL>i*b5f[qo@#h!r.hK]bKtGZ]>7g_>)P[l32Kb*PT0br:!$7(udCpH8snGhRA8&hBm%D%IJi2,lcM0>TUV:*C_,M&6_3_0!a]5&%hlXjM@M98bO+U?WRmX4d+$g>FV*)Qr9U5ZIk\KLDF:*\*;6nKMoG\UB.o>EK/]jqm6?&C%'&8!7m%q5D2!H0of/2`b\^rCs+M*'ljja5&f"C;Wq!*tO%Xa7B#7J6m6Os_,;ebQdm8)V)#=\Vj"kTVt>T\;V`h85Ss&k+6M"U/i%m\&._SNZ'1chaqZh&"_[]8moCR.iHB4l#pLCCg=AK.jkajYsQ!QJ["uK:$"]<sLV_K/]h[h1^#kp-8>;R`\tfA.P+._hGTG]XQq=%Fd@MoC)oG:WS)6Il!Gg^*j5O'*pF4:G[Y`19r1%%J7iXs6T@>EO*#o4i'$'#)RCL\!8Q6T+Rn<r<pL)0g7^&oh"eOi!,h.$(XS.)%q>q2=UupAiZpT'\Ha?An"7")OnUZJ!<b`6aH<lf/^B6.2'kAP:8[+kto7CMh_d05mDR:_]ZBg'#kj)sfEi*sB)/-;@;)HXjf/4"D%R3Fr^^a<NGfYN34WAP6?G,QNgp<`NT,P63r3cl%rQgIXFGj+rR"Vo6'fHI5UH4hlf.bK`IAJH9#=/iW9g])E0KkD/u6\rR%eO#/0%d&UUa]'ZdC")b.B)$KY(1-@GEC97\E]fOX]Soo=2e@=%^(W':^_Lqd<*?#G!f<eFu!,/#"_o!5#e:\CeUC-NF5ZWb2aNX%6Mg4_I%D8/u@Nl9sFIj$HgY=+/]7)o`";4`%+FYk?mJC^G/&#(A8<^l>bY<=&m&]e$Tb#ge!;cWZ0+$Y)e/fljY'#)^S>aN0L@<;iNN3'L?%.`PCoBJ#PoZpuh1I`F9e1k9`uBftdOp7/*M2BFCf[J#@%Ms;5l=2.(d,6M;Eed];&o4<+oG!,$A(0=+c7PTrOX_tDn!:A51d#HYB%5*-%KCOJ>2Jk?/6fQA&Ch03-1"S_R[JZ.0n0bC$AEZbn@Me_f-rCj1(,.']d"?6$gKrF`d[1J>9FhJ?U%@7esSp_RfW[U:s`'e][%O.=;7Ma?E9WkXT"+&n0JWqG$-CZ$3h^/(:f<n;DA&j$_K.$U)tjLRg;:3<?'a8J0!+^TajeFFmhqQbX.h:EfYEqNFII1Urml6^[P%]<6']Y+?,WPNsmQ,CT-Fj?lE,'>8:=r5hHlbB6AVje5V\eEem]\h_DuP0n>F)b#52*d*^.T=t(L+%`oj22)aVo=@E6j^I?c:Vi#r%ngR?ZL:%_QcjjWPLL"o_=#qU.St8Mh/XDHi]kT)/Eu%E2(7c%`A6S>=fHJar48YgWlo.#E>!@CYb-gHQ%`&p%E-+XZBV]rB><[LZ%b-jE-n1<'o5(7\?\NH7I[EOQU*haBk^N<#[kft6SQ\VbFBY`8iFf<+>c41j3\NNP2(dgBl@/=VbqIF&W@u!m>DX<LCq=rVl(A%(&%,o?0[J>q*[&R$[+!:A6ud@D:m1+EqeojjYb$#<*BJ6c&/C-X4+A'O;#Rq[85SKlY4U&iuG7Y<f"oOr>ZLE[1T!aV6OG2m^FRe.Dk%/kq(,;Pr]JLOGmS\?hL'!SSi)o>#9fVpU3m9aY4S[*chZ:pn^+ma/@=+*B!dkf-NTk(O(:.E%nk>_h[ja3S)N)r0*mIA:)Y8,VN6%af,m`;/_`23-N[5:r\X6fV=GtnZu.78(M@75*#%^[8S+g#n&a1);H7\3JnMX(XIBb0WI!Q1,N[Y4>'4)k=6i-oCVp\UhA2&4\@i?%3!1(/;QEuC/fJ$l4frlj[@,a^Ir0eG3r[P9BSZZqm?%M!SX0M2F9q2p"M-S`/Njt=YH%h<2a/>TQ5Ifcc\@P.a3S'@+h?%)M[AX^%*]]q7"h02GNM0ErL+N7O?"rMVTubfHL'5ocRFJ'-FPbZH:5$DXQTgNU>s/N`QNt/r]'/ELFDVJcV2k3+*jMK<RnTr9A8^)d3_5<1%V$_Jn3DOo(P$ZJ>$-GiA"Hc4EhfbO%+fb/c@,=X<kgE[]4m8HTXBSRrpKtP#qpNo+H9/*AnKsqmnkGGY+8U)M\rmD8aX:L;U/0+4%;DZ4iTa-8UoI3*il%,."</,_(W4UAiBh5Y'qpH^@\.l_BGq%P%-SY4(YZf1J-X)EtgjdXRP3N/hRMX9SXeAc![$JXThNUG.,'e.%%5'6f:%8e=BI0s&cZV0?D62PE]Wrb0KWu$(2W[Ru9;8prdlHmLrm0-3K$E`V-be!g1%<\`dNKR>/+42C>otlB@3\a\Tg@!C=MpJ+u%f"+!2C)O3V?6lK8>\unscR))UR*U3@US.nsZkb7)hhm.L;h:B:fX'\OTj`&;%H4DcD/#qZ!NkJ&J9D6Xh>cksl<!g[;0hN]k0X_D%CVAFpr=JXu=rmP)&ae2\1`G`t\^ZKu"'UU@]eIF#dT;/-7C3;\W.iYt1l@R3dYa]UQD.6Gm.)B9EO?T(&[fh8^.A-BD[E/O0X[XT%=asd(KA$rW]A+2=?DJnBG'3IoJ#S\Kgr7QTLr?t\U=m-4OAL:499#Zd(O)U#qr%_5qi5rAam*bWQ*h);f+%I)ViZY-h:2O?Rg)sF%c'AR*cjgf'Upq`9i147C$1F,`"m*3o1LGDq,$G5Y905osi#_R(bO)?Aoe+SK5/"Y1K5p!?C$G3qm83#qNBJ2.+$Y*PqK-A2:7pt@%;<lW$4^*9FZU:k@3p=.]T5O!mm!Dpo;eoX'kj)],]!FoP:QqqOd-mA]]qP'GZq'FXGP8!6l-:?`^Q5"8MLW4@6hBd,B<UTmmd/@"%e"&YEJ%G6Wp>8AN8[t_uBDpPXs(?E2\cQ8T)Ikl(o:>9A+UtBCG:jC#+G<g3#.>TME(d4M"DusGj9-PeU/i-_cjMme[`*>:%GF9k%=_mNCMq&GnXWDi;2skb"8"K.cc]k/XXk#^1TW(B5%.2Ct<%_F2U7lJkd5:drfrJkd4$.NnF^pK<U&AMW[\<-%Y&:1umEmk?)M5(;%ghcbh9-<H=%e2pBfHYlZG?u(Ne;ZU(Lclj=F_sP&fV=J*4+$T35CW;U,jN[u)MoP#qc"3qk;m\tF_?J-U3a4;/+I?IAGZc$P#9_g%4[P%kQl[\Fh:WsKW5ePP.DA%r;sGo_r9RBde;YJPM]Y/FeJ<:;O5?Vbg7u0V4*re#F_?KpU;j0&G>WR--nd&]X[d`cmd*bW<+C:I%(L%RK_/Wuk3E;n8ilBB239,X>XO_2e)IBDsposP%'Q_de?HP8lGXVEtC7WCH=qT6kZW74B_H0p'4ebu3I(CZTP*&(X6mHheO)1U=%<JPOh^@NE1aJTtbXXTZ4\(A7%efIfUC+2.<nZu;;o&F@UFAce5m,UYN:.^*d%IK7Ke=Ab^PNo+Wq8oO[[^@`!JR20MZo^@V.3E(@%2lBBJB]\'Bq(7g^$hQ)j^\nP*;MY"]HR$3BC`l,XNq(mOn/oQ)]aq3R3_c5ts7`EUS/8g3^V2AiJ#&78.UPY5n&Y"AUF.upO*qZd%+a_"$(^C6`:(&M97)8R^!d%1?1*M-[coeP<a?OrPbY'%,h]lK"4$E9hNHG$q_O\juqT/I('O_ZNXY.i,oK1+c3oT>^NN9eiC@kk0%3=_YA7*?9R%nLM4j_GY[QF=;hJ:3R286ANX/-=O\<5'-4e]u`E044&@.H3C?H5@XE_E%aO`<_<JD86e[>#rdRjU5ipL2[Sn&MIM'%(qW7B5u'g`@ou#4`'h'h>sTn.YjmqIlN^r:=dL$B&GY6dpgI*l=,I/;_uje#(k[:>=3=omcC*nNH2(P8Xjagol6Zq\0!$EdF(p%+%%%T+Gf.Ppi(kY5(33LrtfE0;SVV\*B8&Y_4fS,\cL6\lZA!MLdU,H9q.mZWbH7\+,c:FFfWrl]eZ"^\Wj%+CY-rSKZ"4d$rX2!k"%FN3f>$am:8B/40sfg]9c?.m>bk3K,*ZCDdk@0lZuqnhrP72lBN4J`\BX<E1<*R'qj#`36c:b".%4VC3N&/kiZPS^9T7MZOVSJ)1q%`KrOhPKcap7'dA1![GLp-UYYh+@,:gWo%8=NPA!=-P^o%+RPs2TT,0K*/LF='$nA_D9$K-b8nq/@2l<a5Y=/JQ:53QPjXj_Zq04p%g&1Km"_HlPT6_f@.t)p`4M(l]lcOUDh&=b.f<qF0fq)b.I_5F'QA:_%ZL_paqXQ1X=7j3=/#oLBn^/Xa[O+sj@qTQE=Z[S6mu9-b%SMt;mZ[0r%j"9_ZAJo$j[k-&qP[E9N6*p7d-5HEh[$]KTNZpR#&(7)+8KU4;+\VY32XN]6/ghA,Aoej2#rNdpq'7C2^s&S>'0]10%*J_1uR.(-0-:W)]!7UWV>Ym\!q?IhdB]SnZ\d'q[/&l+\'N).@mPC2ija-FTMN@X.O4YkQkqO5gW_>02LeX'n^hF#T=^:5M#I<Ju%.s?j1pca7<1o\R[kXKd=-PQ&5J6>?lpM>i*@i8NPkJ.M_M5;a6>HY!@g^8ulM24sha:N\#'Gb\D%Z)0h.2g)mNbS!N%rkuQC`2@$%<Ybpjh4dB]ii(uk=7=8,qU2nrC>#qsUdB!<EU`NL#Dk77VF-`U(:hE6i2.K']0J&+@L/>4k_!?;)"WN5O!TR,+(NT!Wt^ss&Oin(%QErM"e6:.llk%@Z']RX:iSN_Pi*q8NF/45gM9bYb#/2J08[*c>h@U$)Um?#pr)((KiODP8l0AeG3HTFA4J9''?aru$;@3T%mML/q%(?7TB^uD[g8T]EA$W;Afg-T-6_ct^+Sa6h?)mRJU[.XtiEY0P*'BKkJ,BN?ls./2C_f5@[MYsUE$30tR^PtE42*KfW*)n]ed(e\\%`^bOhfQ$V:6P17Qku<$D)io9<S\]qAR!hBT_-C^&=;`]98E7A_qT.H[#r)R7Yp2OLX@oE#@[ot']T?"5g!jc^K_!C&o1q-pL;V&u%D:jJ?OAfYcqY5r/2gZl?s3`\*pb7^_3AP!mR$T6^1/pIL-@8iO^#asOB2bWP7`<#C@ut%%`si-`6qk3=?sip/T2[lS`fLa2'.CO#%KV)%'4Sj^i7@'&2\uHld_rlS^@n'KZ$#E,,r0]9$^e"cagX_>Cl^>K`"PZ>8peAuWcFctk()*<L=eJ=f)\<n\VCe?5gGhb@-V5#\%mA&3Ie\H2:X(PfIPr&0^E48m@emp<*K^ZMn$b`KQ+_I5qIP)%,TL5(7RdOiR>S2W;]QO@`?8)^aWWgQbg`..7'3HHUqjaXHNQ0M&%A7ieoI+J?Q2Me0H!ie`:nf\3mauIOS"2GEaaE_A8KfI:HP0U2q*[(-s0(PBT#KJ$TLX@m/OGOElk;^Vdr[<,X:E>DbF5D+4*G@Ig%OT[nD*S:sDAON4A1!&i$N;>&4C8l,PEb/q_o.(b5<WCFJdI_e1]^nI$0Ad]HG5'%XQKR^HD84]F\iXg&!;"(X/?AD)E8`nJ$]I1.%O,+1&Z[@=GJVdK6?s)hOcH-.JIk`Q0lQh5FFG3#;hm1MG9&RS72gSYhq@.OA[!^.\^'+%0rGpNQ!3Nl$2N"?o+qfQk4SRte!M$GL%jDtkHI$?SpRcMO`<=8PMAkC,fYCH,Z)$c(FhEd9E8</'dcG@%nL>E@VMNB.tO!`N<\\)R;*:S@nY6NB.>Ta&u;eH[[7)6NnOejG^%\L]3_M,02Rmc@Usk1cnKO[Lt=&bIa0cf)"b=9^!YkSc'oM\F&9:mQ"S&e)2S;Mi+dm#Yrb2*,/GLQNkXnMH4;q4b'#h"V&MPFt6\%N>[u,X*p23bUpAPG=q?"[Pu=cn()`q7opTe8m"+?7FeTtH`hSaB=%0[GQn*fn3RBq7DDneUKc=jWr5[/QLW7]='oo[C%K$lUX^98%k%N_8F.T)3ECD!h>-]Z0nNh0_JArP]:N:hP`+Iu[>K"s=QX?R!$o4dckGbto!!+HU>Z`0_=-eXg"#8U0Q!J,/Gu%E'XjK4UT-`OE%I*_T3A/qV]p!!"+>@VBs1]=p4o;h]d20s&Fk\`K:^!qH(AhPa5DbMbf0b'8P9)KX7O!jdBFqS(1.T8jZh:>AX?UFQ.?0t`9&&sS,%(lRc-H#CQ`kLO<mA_PuZc)s`h?%FU&@HQ?g$!0XO-,DL=4G:2GrfTDF7a8L[,G+m8q>2)$;-Qoo9ORACB@#)kP^g5$7P'Qpj6Cf7%/+hC0Z+KC?p/lA_h0EUBL:687CVI4>7PtSBc&K5_V/t:!q6-,uG%LA:iL05fX5EIE\RQ5#S1&h>b3+Vr4!"-I-2jul;Z7uS3mREh%fAgK02p.KAQ*(p7>I3_,nO1-DlFPPB2tlY$7oh4a`Bqt>%,%B3RPp67<\oAZdl)Meo[]B:`Gjt3IJ.C2+8FCgd2n1rim=:<X[Tu&%EO7Wbp69K5"V#ZJm4nD0DW/gaEGN($mN/jk!Qio<Z^OJ53,3:#Xja9D-rnO*@hCPlSSd7_1H&A3Nf#?NLdK:[Zsou-g`("VD`L:Z%19Z?`&%%dF:1gs3GpRo0-b2q\cEB@BE8/GK(U8*pR]u82l4<,XfCAUIgQp3e/'j_q[RA-dV?9l.m-]4#khTl0RTah@0>r1rN'`3'%6am1[OK('s75OnChX/hDQ.>>V?JSZN>FcI?33QXIOW;7Z_E8/#H^o-#B9M:R;l79u=$gdCA.<XPaE`f/@)W'7;WOni,8L3@N)Y$e%euPKIad$N>7/-7&/+f,a5J+3fDiGRX3idXGZO?39=fWX5Dq5t_Wb63\GC0'hlcSL:nmD.+FT7b?l]X9EJiU>L0><_&]4\n8qPr8_%'RCj#bZZH*gHCj`C3!m.GMZ!7Q/U?$/$!$g2=AcI.(M*\JBK:>j8;gZ:\(sV.jas$f3p0F$@i)XEHaT9afebtde;ilUR5:(D5Qqt%n*FGAfF1gLFn2[N<Xd::4t`tR`R9%Z:3f(/`H1!B:t%6N=UPgNrlU(7&7P_s/:895K.2U4'=O,A#.AB1Pk/GuIRV*q"043bcjpoM%:YN!a-BYj#%nX5P7?KN??nuEu#Rbc_))2d*a=_0^fd8MbjmahMY``9MdCI@;&Q7=:LCM4t"X`LRQr6gZ@\t$O<HKfk!oUj-Td>jT%WW-<'k#\;ua@'S$/+]g(V$7],=a5&06`gZRR<[7&_;olp+_RV4N3<:c%n5F([2?j0M->\;;FEa+TP/i]nh>T]U,/@5..TDH`S(:b%Nf0JiO7qN:eT)k_Y&%;(Yn99Z^9[7L[l,I[mrZeC6jtm8r"1RmbQ.5k=b.11!iWo'VfSUj(FUu5l-*\YR>nZWOu>]reR@5KkA3.+%K@4jl+]M'MgSHM@&YG!u&8'jK0qE%>r16;Snh"P8A=Z,oSR+^1=TXu16k6brh'B`QYk>@kGnl$$Akq_^pH_lA!$qX?@=i<d+6L)u%mDL[]A@?[E+)f@CD1'q6KU&_VK<]KlepGl.K$qs^U"rofr-"d%?=;jC&%@!H*nSF27C2jK@M($/JC0tpN&"rAWZ@H#6h4>ARnSU'%a*I9e`Oj^%6`oDnU/cUh]morFQ<j.D(/@+%G5?nGi'J<eYPsm"kAH8ZepBeg09n1X3ejX;Gt-<Gs/58?Q7^jN/$Ub[s0,jR"N@U*%jrKiF:ZQ4SaAIn>nBtp%gJL7T;JOpn%V=oFe+2*L`YaQUSA;^0a;.-ReYid*>SDr^k/]D?)=k>'fXO[:7!PSY-U#c\4gUn=MV-7\%Z=R*D'_>FKZT]Z-3J2>1E6GH[``fc.GnF"m^/6`7;hg:ba!+-"k4f3AF=MX$`b*]cG8RGG7VWJRh3'!c%gZHf;n5]tN4qQqG#AmI%dg[IGg\b@e8G6_@hg%HQLPB2>d_ME&2TDpB&8<1S41p53d12pTHJFPCe/S,dYt:p2d38uV]php3bBY2r<_=FpEi1/E&[Rc6nC\e<%o)V&(?*cZ-kNE56Nc1jDbG<T+J+dbESDHe<KQj_LHH/Faq=KEr+Z.I7oU\!%F0dg;(`h+6X<a>/c)%3RCohd&KZkNLb,3iS7l`Mt%"Y&f5/#>_ZcCC^88Ei("Ka,*n:T@<+i*?sWnu9hu+;13&PHJjL7cpq\1e&LmVC.>U=:<pb1H99FG>;<F_@ht^05DWZDgjUuOWkj8%.jpc6%UolW%VIAl+RH*4S`uJtm9HEP_%MQ:QHM+8Kj$69VLkn9!!1Dmek>KP9`E7&00p?[._paE'(aRa]nEpCW%:BN"N\(ne.RG]%_9o_k9+W2YQ<Hig6-EF<r#NV2<GEhq0_AKu!J8\\XHco/H)[#.id+BmaT58;?%GD?"NcJu\/_jg@,()VXebkeC'g%:O6^sc97Z9p%&_.L:LlBJk#uVUM9br&sUo\W?/HN*1Y=U=F(09/%fDoT.WGNd+Pu=qb/U/q;O"*]EHWI-^<IJ^Xl3;*^jY&PODL=#rrl_E`[`9&R%hG:,I2p-p_([aZV(TlDsV,a!aUSYMi&]6g[*THiEVerueR6fSJ6R#uK3i+c^N?20mSOKh@ei$\U+N_$:G>d=d!^ghU[4&KE>GH>o%4R2$OPI?5V,*?KT_`1(Qdq])CVKmBR#ItmblWMd_@V@NiM$HEVT_fT<--=0,@GooLQeF/d#jHS&(\#J%2i.XVjL3i[b*9aQ%D8#Y%>)bos2Kb=2^@(W+@j%uUJ,[&=7%=2CI2q*nou<*@5JD"'5Du5658e1U3Gqgg7-DWgU"<dE;6Gct4b=L08';\2#Z>/ol%gK_a`A0\%$,$m?g)AB%C^lA+WfO?c+B+ss@AY,R>CiXn3>MD0:fEWA#FcXc&T2>8km06`K3h?pkmN=jc`sDj?TY#[e\?/flGqN%LfCM'F%iUB%eN#+eeW]moX1TV],)eQrodLVj*R4HN[2%";ZmVU@.9U@*l72EGEVKmMi1Us0&D70Za#Z2gTE9Lh4R9L[6SCsTWa&?dm)R`7kh2$#%^%&GTB"8LUgD]`$7_&#=4bBk-h-.@L\D%6=Z$D"E#37rgdlLD$o$44%GX&pNhTVV@AKLP>*SpUCntSdrdg5ia9FOn@"(.oQ]#8Pe%8)%A3=h6se>DMRZ,0AP$[]dnGm;?m2F/m>,FH-*r3LlGUU(Pr2)W])bqfPru4%Ia73nZTr_A>tV8BGs,/TX_[ZqC&1:PY+(&_&;`%'18mb*Dt>[P9"Ym.bPJ,D$/9"9<F@?dF:sKUZsQ!1\uEj[7^.G>,u1(Yk8*,=3"\NXlK'q<)Em5g[(QLZQE.D7r=Uij?hY1Xk;s%%gSZB*Lu#f&X[YjjFmF?MpG;?jM"*nlhnF>RPjF>'7`iB3n,(#TLkRJ/*"4I,-QN%e.c!Ra37+g!E>:UVM@8g.(;DtN?")e)I\jaK%lM0pOUsMEhWWUQhMNDmAH:tKT-HJra3/=N7if7F>B:HCCNt&HHNZBq)(WlYAT[e&75l3n'<Uq-j0!lkI*<kaopLbk#Hc-kPa:AKO%p>s<jYCkjs<o/O/\@mT2kNC$p>K>D]?,h$&\]1Tn"<RgEK(,DY=:q#UoQkV.R-?Xqs1p?i@J^tG;iLV&<SJSQ3i;q.e?21;FTe7F%j6pW"C]r?o`?uFO#NJ[:r0O2Nn#57=0l9AO[g)'e:g=saRXh%gdF\9Ci$N\W0GA$6`K=iQQ8I1kUDb$r#Is<ud2]+GRHVHOl_$:(%qeEEhLKSuL5rl&"4u@!(j9Q2fnA@`NZPm359i/B!SG<6p<)';6["D7B"j`tO#P8Y2!_0UF<Y3tPXe:hiEWr."oEl*E7*W;>U7$5a%J6l\kONmD;c2Z/WHDY4dXk]8/H&hbS/'\al%gV5jc-RB3Xt%_jNmDg?#!p,F[M7s7O0f=t_0WEc:F$Jf[rK$3.N\8:a/cd!%>p"?%00eit]sM,#Ms\Z5D6R#fHu8CR#jl'%:rtM[_^i8&)D(W2F;@pJ'Y`6lZsU.!4Li_e'H!r<IqaWIlf?3E[`Bk#'gHM'c)/lL)'?;]%Nki=f0.m0_<qibX`MH/>1F#sJ[6^$"oGiqj<']'j%'Af%&4\T$K@"\ppBu;qTe-`QLKCK(a/)'1nNmtGN\hRtT)("g1a?R#j[Gt6%SFJF/9?fbC5SG<V$esXm_O@(W_*Y5+5R]g'&j0HU2+:)PH+pKoRh]3IQNdagCO'5.QRgO4B5:gh78llbg/76cI;)2/W&--pW##7u%M8%K%Rd/m_^+u39ZULp3:TasNQBsoaHtgLK/0G2iq8/".XsP2MTVZn5fjUK;lSWlZDb#j9;p?`^>[q]\+nNQ5W1_t)f6.'S,.9d4%o?)X6gchp?:@0(STX21RbA6Y'[._UW$i57&S1&>/mthF-d(RtQiV9r2?nSBUpVbhj[I0WF\tXs;T5n,R4HJCt:BWX!NG#-S2T&1*%M/=bZKB).ZA[6US\7!V,mqdtl\TW[@V_,RP<-QBjYN?IDV2BoCb_:8L(AH/^23sj2<A[7'!nq&/H(g,><`GfMYNX(8Bs7])/]gs]%cWi">*(T+h]WbpNj@<8V[_^jA[2$peBb2WIYG&e-<2,dPl%PhPZq4=88@s``pX6A_dNE*.BS-o\_;eYBf$p_p;&(sJ'>U'*kLhn5%n0""(^Tp0E"A.16'D^,U.N7):jY4AG7>!.k2:A\QDr$^0POj$40?hh7TtRha)H9Ycnp0elgTI9e=7nmM16'iG<n.%J"^3Tb]c[g>%1\+..g(O),Uc,0Waq;cNq_'Mo6PU%GXVW>W:dp"Cl\.nn<`/I+]eGt3.N3tF0*q9qdoE-1WU#6O.MI'7.Xl)S*]ha-p3NA[f9BY(%-1usAo#oON2Fu.[4a^X\'tM<ip@5PW'23V?*`fM#=/duYR*[WpfZ2SZ@@5CtA_>&T?IH&YMbr:ApR5HqM<S'r_'`h.F.H0%"j`]J%L3BeYC&#ud@N+MQAhc(IF`<8<A.Q<)a4CO1R"<j,``2Fga-^`=%[O@9hWc&#Ua@42+OY"218-(-12Vk(2jnO2'0B?tgAC*i9iZ7^%$14B<PK`;70@TVTe!I$SB24ZRf$WN_;)=\)I,nrO`gQDaJT8#j_\1V>L%bFG12W8k*g3lH*jX)XBbJG;q9tp!Fk+EF6@5Z]1a3t$%C/<_QCXtA:*P?/0?TX\-Y-,PM9"(Yc+>r31a4EM`[Z@WDq:bIQd)4N0n[4FamHMK$m`HS3[u[_@KPhl=)jG5Aj_0;4:$A#4c"?@]%pEoOVq"F6cQh.?0U'E("j2G.7_EHaH-_<<BB+Iq2<bi4IS4]C+iXENG(FPFDR5%Hhgqal+61&'>Z[s41EAH.<RH"_Ci/U`/3nWIl%Y_,1."^f##Z(0/s[@Fq"T#g#0?_6KC>4p`B+6\Vqk.-E@-+gRT8a0CsfFrDpbZ6(lGil%_Z+*j;dbq3Rn8gIP?)nR@M3Pqu-]uip%Ei367H1#JO:/#l6k.gCZ=HhYLm@hAnptA5kV_rpt_R"rG,/_l=51AJYCc`6g=nas*nQH%d@*AHf9R/#XVmi;u6uL$'rRYs1+PY^/%^(4V.(kW$K5D41=_B8KEXbI!?n3=\f7JM+Us4dGAri:X*(akI',#L*UR#%lo^>drNa@%48n0j9351^9\["j-.NI8,<6tHP%2CEiV%/:O`Wb`kfC2$&*?r2:j#p6!E0Gsq<OM2->7`bUbV'/n!j@)Lc/gJFMd).(X;]2(J5Y4Gj\5)6=YHrmj('Q[Yh'f-Rc1<_aWH2I>%%0K3fZNBtBjj@eob<7f;3O.=SYWX.^[?50HW6G\_`i\4u:&#Q0Mc&Cm38Lp0Omu>!@qonS%1mTh8YgS-/'"3nL05$5;%jd2]0JI`k%cXJm9J0t`6m'MY*CtMJZLb+jS@k>eS6j58n-crFn%:le#FXMKg4..?.D0Se9d-K#t8Aol]2&U.Bp,F&t,@GEB&+$+ng?-dqq>X/\%W##7_5U)@:@fambOG)*s=L+Z&>d$j3f>Jh:1!Z6?4KuWHVKe?TqCTG5Qq*E^Ip.IYGEscg`$kL&0JLpkT%%Sh>#0t%PJl/)X3"(>%2O\))C-d<(Yt*^p-JaG8:CaH<UR2r;#T7M#61e)Rd9MF8M93ZJ5KR/&Y+TL$[;TcVoME4dB=Q70ZlIRU*eT*3<X]0X)=57gd&[[E%Mn_sa&B#p!J$[g,J9Zf(P3n#jOCtUo-:jcqb##>:-bl2Sc#n`+)6FEVV?kWp)bUNY4]5o',4[;J.ieP;_O.4r$4%)!H+lh_Z7^q.%!_Eb8I\*_LZkOAO1g^n)-KB*[TWTp+!g`""B\6P!Z01A'g)hS+3ElNQ.0.e4"TcIGd6(VH1e2ba^RZt%,L'7SVUbKO[]2>bWqc0f%h\m_f3/"/G=+JPt`"9?u1MYf/fFFbHeleQ`a(0fk40'DcbB)>6Y,JRiNj4&].s(Tpo.RL,V&aV'2)5QIF#l1b.Qu)Ae]R.+cKWm%%l."#C<IEKFr`/@(Ed&SEZa#QqEVjt2k+->_/LaR&o)GSXKsj^khct0'7"t$P*N`k8bu(L\=L/kTd,"TI)mhp)E9G+Cs2UZ5D9XM=%K!pP$i*JIRQmAn.Wn#=Xf1]/r:=N:;pX0a6PCF$2><T1K#=5E80*f!XHFXg3e;LFcM>>%CIpAGO7amE*Jtm(NO'e2%$J,UHgn8Pe%hTN>7q;Cpr])&g*qmdW]>e"tB[(8-%OI3ekekO"$5cpJg2s8)2PQ1%R1G)UJ]R<0$9Q2Kn5nG`u$r>g\#(I8-?lH&C))K%2EZ]gg%.NFgaHYoN`A`iGH.@3:G!iQ&`/io&h/]tK=e-\^]Z42W1>JeP*/I_u^?1(F0^;oORAb#u<Zu+DHDA"VYKYr"nfuRfi%-<i6*F-t?%j-OE.^;TV&Y^KVb(cTCT#Z"t>Rh?#&a?GN&i!b.q!W*284lPNL;sS&%=cS:m0VPrhfRR\;LYi/T)$e&cI1@>OQjL//5graJKsna(%6<!PRcXCcP/<*5sJ[q`sg2Qr1]`A*kWj9t@UGOY2LgsN2d&4ul$IZhD3j#ZS=d\r;$(B>AN5)SDUY".9)h$8YqLF>p1rN'I1]8f5%"T0[;p7_?/]CUOOad@PO\1__[%GIMt\kt"6JX=W9CW>A#6b@=`J?:Z;)tXRncf^$AG@XB<G5V;C+^#;mfGa43_6IXDM@AEuq78G0%'D8F&f->I;ZYIsk+T\E$lj@6oi0*+lSqM/+\$#9`EnjCECJ`p%Nk.*LmkN$*bVP>!TFdX+mCsdL-aM.%i6e1V'fE($W97P$S75UC%nJ@'@V_?5u/\].4_E0i&O/7oN/*aLuh5N,W=8,fSSm-<Ke">c@=/12Yc?&71QgpF1ep6OlHWD?qipK+3YX*EQI3!$R&21AEZ\O@\%>3Qh*_YaArTl!0,A`-PnD&X2Z"3f`C&*nd'Z9\3?$[+i@",4"?:OaLXjNBP;^4^!unJ-0b2KHt'ko$!4>Wr[N*h.mRCgqsfL*4Jo%&'@GqOOs\B0'fBa*]?kM4O@Aq>lpDY$CV>_pjg`W.<!</Am@PHMqU./N[Q!VFG8a_N1n!UHHAMjL(n#B=SHbt%3l$e=lL)P">Z+M%bfFrmAHDGe)6o=3R7@8CfB]-^)d-p0d__.:2RPFao1)boJs\Y'R*oGo(`PB;M9JV&nX*C;a9K+Gbf_gQkqG8ZP()#>"1J-5h83pn%V7a@hqk?5-?m.]_\%2@kc\#>UC[BU`52Yc\rg*%gYL)EDDm$k;@FOLao;HJdAFoS5IL0I_Qud4ZF>59P@]Un1dP?SFFhhY-@r&eK%'*kMVQi\VdfMlO=]8-C]=7-C+qA?0_l)erehu=>"D/duN8MHP51eWa*4$MDn])A*G!IegOjhBPT[GK(b5)iuR^^PsekN&iP?j<*>%<-pFI:X^$G.$VUpp7MUIbLN9\#c+q;QhBLNQo7@&n/3SY[+uIj]`T?:@"P*t!&."O4aq:/aQ2P2$R*-#6q42io4XOS!0R;J#'S?<%Xrb69]1i-MQNG$>@pCDS^YFY@JNnasQt37Oq$MYia8hmG+L8.smMYFqZi/)6-O_^`:'NH0oB2708He5m&T2R[a!FVAnGEfqDMIsP%#e`p99bA`WKV>U@%(bDjne9[l/Z2j?$e$bIn#HA*G<]?NN4o'Rh":I6N9\Sh1D4Sha9+b>[/OOL[bJjmX%!j<@QlE[q!*WI".i=S%(770Yj$)bTLUhV]2u`*%M"sNa@oWV0cnT4$@HSh$O1bQ;c/&hZ&Lo=g87_p.".N^/R1Z*mFYV)-1kXq92.53K,>R0VO9^+cY`TIp%6(K1Z*"c]a!O?\ZZ,)0b&bTJ.khj7\G;GRZiReVY3//;GE"aM<Zl?%hN$&V=nS\I"b0dWn:!UF.e2,.JD;Wa9BUE=SU[;Tc]tSC*%\$Wn?jX/pbhAI^O/0$g)pem,kCXba_`X@2@(,UK<JO"FM@S$$_GV]S89^jOsE:p0aO9]`d>O:VZFl6<-3+CbPCg1JCqdsW$$:227%K_DLFdY=$`*M`m<Z_?`9JL[n]:uDb$Zs'pmfR*eF,6:?j#8qSk\G]#NafcJgR9SXZql>g?gQ\m3%4#(eJc2Inls!s:oOVNGS"1U;%-!*IeCr('m<8.D)iVbJ"0GBJT"RCoVZ"<QY#IZWSrG2&Vkel4;Wtl_j4>)(e%)l?'\o'cQW?7sV?62\l)5Q^FkXP)YQ/^W9ij>?>%HVn;M_cE&)hhFcCY%k's`j3W'o7uM7BmDQ/7<<;f:\+96\)K*p]I[crC:kV'<>.0tDjpEZKo6mdQJY:CQ63:A/_]<;aGh%_bQrPd%a=#;I`Z?Gm)i'eH,Iukt.<A.b4X8O4caNrpjLh)]4GY-^s0CkE!+$47"uaDU/Tt75'cP0%0V[Q3,NWaJ[X3(J9F0G')`!6:EH2Q\%Q.pSULVr[J\q\0M;:s=;9ZAZYHTfHe"r:!q,d%[KjPFV(Q7q__f8q\_'8+FaE:eRYa5QVd<>8*8`e`l8`c6kf^CO5!DENsT2A!kZ%r7E?EA06EW+7;+^/6i@5?1p)t]G5kc<uHpOEa7+-/U`2#-mgPrd/,6+T25qtM1LQ/Y32p4JR^fC0,O\7]Ipf#&":EN%A-VQiVAFq%oV"]4=2eb@iFOiYA7jh+8Lls9;N:EkY!jkR<"Johm-lVln+&,eb/'3MU_,Kpk&"3Idq[2:l./[=O0[rIS%"\lA&237C"s*c115&>%S%eI?,GnnbN=AZ<n3r^i^Y.i"%tK^P!/?WERVBemr`\q3$\Zg+.rS[s7TWc!<,Ct[A;%2nR"LP/KT8,2I9lJc9.Z^QBBiYnKA<7'%*d1?WrF7uLp4u3Vf#SI^`B+VLg/l"ni_?H,"Shp%>8u8'<enISW[tru-?dn!+9Gn]C)>MR6t!G.Z;Co5`7/(Cn=!!Ef"idY/5Z<r%>\\9:qjf"^#E3l@Dq62-)r:j4CQUo-eMe^g?2R_>k(fG2rLf@\k<T60o9(dMZT;53[.k6LD$t2%oOnJghD,a%Y1\omagHkL+qV<u%Wis'U&4=lP+>aenhlA)V;m[JC/&ucNfm7$[^Ca]FF9_')!?5Ct$G\Gj,p?etiABQl69QUPiD`/M!MPDqg;)dXTDUR<p:qO@)X_H.%6LB&+!779tK:jJd_"a_M0#M0/O*($n,D(>-O\^GSY\ZuQ3c/Je!lW\i*3%"pQ2t*47KL0&U(k77eu]eH%8Q;nBG(l;I$eWd<K7Z6%`/kq+LpreHiID1T!/XBjr4P7r%Gn7E?n2e^%;iGe=H;LU\ld84\mm_Fi@>2hU*;[7P,,&Uj]4:X0Hr3m*"_F$WY)#kiYM2H$SWB=%XlT'2b>Oq^0U=LNi;fVd2DFD[=<:-P98!hXeWNYT1Mt+@PA_bug9XohjDA.ZM[I-T2S?b?NSYX$Rm":.HYtQk#)BcJD+ciU6BR].%^jdRcEW6*8PMM,fGrl'Gd9''e9%Q^Fa=P7a7O[N4iIm[?8(;gM1Xh&dV*nG$B"`"MYn3!3;Mn]84+6/&c!V4fgENhf/-`OO@D`c]%RfLW29.9iG#[k"r;@:4#KrXgUQ"".-%,.Np!;kSE2i]9jJF)XlXqY5.VNK".ja];2E>9"Y4X1#f)DaF>^T[T)=bBcC8EL2rD6OGC%0+`,;2f*^j?t^,'#(54t#c*Hk/UH'=OMM"L,?u2KDb*D8Pslr5GrKZ"4_*ZI6R:Bsg<VdK?cJnHfi!Rab\a+c%?P.+D++0s^dWdm%#D>\9\PR6S<6Oj=?E%n$0)!o4"?hNg3%@Sukr:TnE6>3MksNgBn,]UCI/5T+JZA?6$KN;47*)@Q7Xpl/Ct8<^Q-XokQ;sbTCFLf/%TgiH$b;t%,@(;o]*koY=!+)nVUo>HUq[MWk`m10jTI,h'SCfsL#6j\n0=TrM2Rl#!)lr+fbna:?DiOJVbB*J`6`%NSX-QrEr:Tc0%C8ni4G4)4OXU&>SBHs.d23>#*.mh:"qG[Kbi6T%[lMYZ*=cCN-*?dcZ&Y-5U@_Eq\!X8P4/nQY>.JIg6K2X/!LQo>o8VV.?&3am4%$mk);aMb/A(fQ0r3F,uM)Z?&X(@D9<":-)H201d,^=<\)g[d6k^rC4a1NY0$dl1ds<eOt@6F'kllf"9U%!atDGXtp"iQFXjHD`ge%8-i&lc;BH5FXHJ#QhF(]7d8s"7?939/P:@-B7PECbC(b=RD@`6E'uBKq<24TBKI!)(:2;lkGE<72&H'$=GD6]#F.S*@]9jf\8gBK%*t,3;s$"aXWYf]Q7:7_YWm))9K(BP.!XrTgPY7H#<qAES,/;KT0ZbQ"V+#H:LlSJI,X97L?@c*Ap`Q,M$m9:3'G26un8ihmTsB8S%%hO#[6%^)rrQn5O:fJRg,q:,$7[g4DJAfhd0ueTQNL+S"UNEc'At_3ILYnSC2ZZ86-6TT_jE=;BlsuQO3]!1VC$tI)'uVpY:d@Jd%2(ssF.)(4@Hnj<l<mH:?RQ[.@pf3p3Hq1G5:T_RX!2iHWb%=,5gthQcpoLq/[$0NM!Kq>jO1Q1a2XscDq=!/Om.n-bEHqN6)^@9@%ppRm9/4P6jF<ETc!IBV3mKqZrKp(F0d4)FIVXjubQ52\d*U`_W`;1Hk.'t3/oJ3[=*?]YgOLpMmI=6]B(%h]p5#&<0DKT=!l,tnD%a*$5TMV>=G?4M/)q5;NSX5]s:Ks)Cbf-u7#ke'Y6XN':D$=YmbH5PtgfA8bnlX*.1CMRIPYk5>*''^lHTr0kOJ`fR*&W?>#]"UFI%eY&#6646Z;=Yt@Xl3LN3N)P]%73[SYNU@d\o's+HJ6%T/-\U&1k;n3.5JHiGd@t/Y+RN*2X#e,kj(g0bp'%&e@hj.UmJSLQZ$^-J%fpDJll<mn[s7D!1MY*Vj@+Q6-/r/eNd&/7)(FAsqFrsCl*AQ69V,qbn+sco5VEj#[c/fW?I'j]Kd,5^\^`:@g&Mr41alZ2!LF-7s%ldH2)0%!<3f^7Gu0<n;3l&m\SEShqDmUE>;1N?c2Y&?+9?Xg0&<,mcm^(CP(9&k>&n91ZnDi=X^WbA"I=#-_`e+I!U^q6r#0BAV5%`u]OM)q(9KD$5&I=Q"<MG9]'Dobnb-i)_]j>ZmS_R@t3XIPJf/:<q;GHbY^OjA*FW9<@`EB_74nB'sWq2ZhOu=4)h2^QpjW("h@]%TU2\"&apOBbd9^qE@BARn.1T"F,YM4ZLMng[r3UAiU\JN(I8!c3`^7n@SQ3FXI$$UM629+V4C!AFU:5:h*7j4NlD%ng5<n":dlD#%D.lG,ITc5FTY?@V4e__UW50p7?YXOM%)6DO,DtBUoPtrO_\;neDVeL^&*LTcq\OR9r"jT@pAa\uX.p:LB"0gA"ak]7Kg7i0XOIi9%6I/%$6@5X6?H>0HNq+i7o.+n8?4@A?JHmE'ZP'X"kK-`+eWH<)i.ViD4Vg&DrIJ9^'-'Q<4pJnh<(#!U#=/0r&($u</`;=)57Be%%ZM9\7&mI]'ig7[Sd#'<)p0osa$k!U":m3/0*6^M#B^dBSDFGS\rB_6e_r5>\WefV,/%Q4F#1giln3T'T6p/g[63o-./kUp9(.4,"%#MR'1nUg["N--M)`5B'g1Ui$:SMRm2Bp]q='$iG8Jp'IaBFjWd8tLk[*\+d77Z*81]pocI#P^tucl2V5/Zng_Y'.6>o:X9,&&#pi%_E.8n[#U98ADD1r?T>L^mE[;Gp<N*<U.MbJr/+s/DrRt![s+k9A)hg6!k6d-+&U)-kL6lR?#t6q4O%259j143/If:dMB4g?CM3XC%<`\i9+-!28Q^#"4>j,Z5Okm<u>NEosD39hYm@kUe_*6k@-gSJ]!@tO0PN:DQ1]ekT?Df<!eubC]"CN%0ak`S(nWl"\qS>e<=$t5\%nt:l/&k-I=.E\t'Cp9`9mGgjMhk^P;LsR1e'pS'Z;L-X'MVCI*#KOunFaSB]c2m$N.r*&Q!j-`NJ9EZR[+b?*_U[YJ&DBG)nmJUM%2A^mlHnJ2BX(ES*qjI7C8i2aF4PUK\ifZ[JM%\p#-MeD+E$e#as)U%07X:M8MO5%$KJ;M]dRH$\`q;K<@Z[k23AJ$+*6C"E9P]"t%<mdH!.g%o2^"o(+/);(<4"2sWP\B3Z\_j@jh2Jpk-F%hU/n]'kenA?-7>(<rKdtAGjiiKYaG)%/3H8@b^<;L6'@o:ETI.<3BEa54%k@tqge^/3PKl5C^4KW@*C-u,kbm*c=6"ron.rsgS'k_]^;Z4`850k.s+T=BoM>HCc?6]E3@XG!Pd3@ct!)gop"jk^1X4_lNp9=]_%=D@/p\\(`WHpWhSo0Tp%k*Ep5:Fn.0:YYRPm*%e<3,Y4!Ag2Q&9:Q9F/o$XFcC5=3U)/8';]<'@m@iNDEudikm9r(SP</K!0UI3H%7h5g%-:.df7tlU#G**r]EhXh>Ut0,OV$#[m/%DggRX;BWX7Se^[!7T>]hZ+kJpjFf:INV/<qc#;4WT^ZV6Z+QJ"bD*%OV]_%u\nb%=jVtJ(YV1DUk72(Sug.mioslu:HSsh0MsI8:d\hsB[lpXL'C_DclTVDr,s/hPZln\(j3T/%3d5g02kH9>T]AuI^+N#$3e$IV(d<\%PYrp]7k1?u4g\*:fg@<%-*L6?4VN,NetbY`0<n8d/p_c?2#TS];pU,:K9GMM?B?&$ghID4]HVJj\^d@XH;I%WT)/5a*XImcp.A]t%nWfuYL\aV0UkelJ'O7!gY=rhV&7CcTlP]qm8Zp5^=BZ.S1g%2FXqP6;?lp,LIe#N;QH#eS%]cjhZ)rJ"]!iofe,`6r;6OXjM/hg2%7WPM1C.QQPXa4?TU(hVWP,)0T>hP/B,M"BIBFa0iO_D4tHR(Yad?=5W*#NNMou`,"LNA(m$u!o5p!@)cVV0B,j\-ci_PQD=(07jt%1Q+D09=p'3h.^hZ[DqH>'fAE_l_`>iW#'?/G<0bYa0tGdQc>ac"pVF]65/'=L%b!nm*(P<["BS4c0Jk2dqkV$d]SU4K0\h_l8eI9%#sC)F]c^b7e(+Il\b8?)R5OA^-8)`.>*15e>&AWNe2an1_;=lX'oCGB<Ui^^*/:f9p\)I@l9kbf?j@EOWUsO@K/7*+3ZXaTC)qtH%G44aiKTj!u5mf!I]8%0IDAO>3E-AkWTS>Q+jqVnr]9dWd_qD`!K-3pqH(?/)mNpIViYid!J^/_Yf4Y)m".C(fmdAc#K3%Dnrq,pU%T?-7V]`7hF!0NEP$>6l5KbJB3pkL##n*iad@IP?5TATYmI([2nm<s9[<G#`/ACA&GX>XCWi9KX[[CACPp-b4U,Qdf3E)eRu,Fi>L%@_+\<6[5pFS1[TrKcKj]P"I]AS&:giGGf#0$f%mV!.<d=e4"kT7&H2$qFbtY8$O0ehFiT=@.4uUfDL.YDmgWko7>!XT.g#uTc.bM%l]RldQS/)lh-<U-CCK@l?#dggA(9e0I)QVH\Y\BqrXo<kdfgg@nMJI$pBCe\QOMIRf7>HTpPV30k3G0l8_o;kHdKRDYa$m9p]u&H%FLdII?SYl]Q$aoL=*p$37DiJ9.H]c[Dt[lNd`m4Ybr0uVR%O%T-$s`sC%/#?q')B-L2N@m*G.57YgM`5!:.'5V@$0F%*M4@2:$86%75H]oHM:oEJiOl\d>3aSfjuV1$5'W1GU+M(bj8XS@K8*$4'@YXF+5ia&hpWBQPSY@6k_>u9k.`2QN7s@6]@0/3Ar?+OO<Q?)rJi?%"McqY$]TZk_;eM=0h)/'m:B<"?taLCfOlFRbAr;s^f1.oXTW%Tq4iAkNtlrRnf"2Yl)I4$4&7'#hL`n1J@;,_6n&7b#&JfM#T<n9%^eb.<6m@hl(%rZL6sr(!@&2K7*/Pf4EKl>JOTAukKGlRZh:O-VQL[N$*kk`O`Q0`a-B4_$a("OlSlC[')TW?-'I%q.U!NEN2[.N#%@,t1SBUm!CiuF+EF2eAkcF),5S;b8)n-F\P+rEDJOfb<'Ruhc"F$e3"Rna`<CoLQq?:OJc9\\OiT1tZ7*1+bff+Ga1-F5gXh<L'E%X.TQ\NB^m-"db@a:5Ult`R/H/rBTS(4-,N2Nt8tUGn@7Y$s+WGC_>dE-W_Mp_RW!QLVgCQ^,`TAhY7A&?H(.Z:sB2JZ"\\$K6&Zs%[['tJSEJIQ*\pR14erK#EbiHc>KMl/8>:(H6HNuGM:7jGptZk,\OX6tJke77kL"58BtT_U2R;qaMQh&YJiP!#aojIj."u#rke8mC%?QKXiE,Wk84$>Q5O`&1$?DFtRbn*o<hiF9ki)RMTd\:rGcTBsIkXtkag>K(f:a]T?bR@gC4u.a,F]MSje!.3dY@q]mnt&Qsj4E&Q%D"[#=c5(p+'DD-OPJ,(qhIM:XF0`E^\R<om@H\SQrHbj+$nL@jiRYtj!(U).+b1MOT:n[^Rog6,%\a+1Y4-=up_=><E"u7:(c`=V%n;W'lBiT$s1eL7C^h4f5)e`jTc].Xup;oc6+<UYR3uj_]#Ef\X&sPb>g-q2,Z@Rj5leZ5q*G29K2dn3KOh%uHa$XZ"((-.k_&0D+%3=<J#H$\;"*\1"0K)ui!,]Nb'X`6Z1ec\\sFGAfAP?AfCI0g`L?MGpBc,dVLEtZeo4&co,LiI^X4,'7uLhHH=pj$2d;9uJ.B6']S%2d.mb1>L/Q/C>Z1$Xpek0\^%(gd^_[<<cBDTBbD`o6<m/+BTVd[QsU%\2%`?0SIEBGSW^CFrkjen49aQOn\9f)!r.G\WWp.=!I)I%oY+'L@O=Y20LT?*l1PEZQlW8g(b5_u1(YAZ?n7I8ON]>O9<[]8V,41f?8DV7P!mS>FlU^`1f)=+aM7;&NW*m!lie%#iIL]+W<"BY%rW.)[ZFiS5"^c9?=cGsEp7)!r#DQC;)U20S88%pD6#%7?8QGPQ-aK[*6Hd6=S=JORWhO\oN3;3<jMaEW__tX6R!')&(7"r=:b1b6%E4NkAj!k.Hf!6%d^mh;`bW.nWSMr,L)NVuM3Z'k,7/+EX#T;:)brWE2,&llhLm[,B:j2<sjdi9-hX913<:ErnhJO./-M9VG;eF_p%hAT*K2:*7_]@W>!N+/lePV&@]esTun,XBh*F6r4":gGS2o%1)cXaQ./i14]le\^\U-)it7?]mq^gpO`::Qol79Eo1Ii;#j/k?/Bn%6)3%5_a;,jh/<.S?&:b5DUX8#h@hFPWjd=*]Q<>t4d\>9RK#Naoj&W<&9`NW-<@O4b8U]3MV-X$`,srIA'*m@Cf"HL+96+o5nh-8%DEQk@40)>V,c?F1kIHFEo-Oa*8EYN#!*o"i!im()oWT(dhA1?lEg<n0bM[O;?0=aK]$DQm`'Od.)FZ?9(e<G&E#uolGK4l4p!jDW%Fq,l)M+iFN,G.qILf*X6(#QH3G_OR\'p*FU;%\g2\YWeEH9U?4iUGQ&1jm:MK6oJgC2$h>Z2A2VM_9]K()b9XT`<?nqZ5^aqaQP=%UP'6<.P6d&TdaH9:ID'r?/p?TOlA17oYkJcaC[tHclWc@W(bY9o?R>!-?:b_jX_Kp5kMq/!mlT#_1a(+E?I;AckO'b;\6$LcGjY,%/5Zegqsup:ELXN3388g!>JLIamOqfTfFQcB(tW6E3%k!P]7LH8RoPAugPr;^I#^i"gg3MJA=JURpE1:?V&umJ_etHm;)/#oI6=kL%Q.MJio-@cofiY*H8rbe>k:2q\R):C+R<r)IPVT\tqlh_f.eGKl19Pc_*$Y:`FR7OSjK,e4fDs2n.P&<Qo/XUr5R6N/p3YncT<m8&%50f*mT'.\bD*+[c\rdY_Gq8.u#Kr<XHp5<7A\*c%\\6PI$bo*2p1toObK.?9r0(2q$ASZgW<6'=2\BuUhf_WmVH4d/WJS*NRDoO!%^*X%-^#gkCfQ8pYQnnaWjRS*72;Lpmb-R0KBn^ncf)Xnam</XPTJbYqV\90<$d8uIXA!rM!^I]qr?Q-'+=jNY-o[QnhSTIZHQ/h<%H5!_A1d/fNYsq.rj2E+^@t8Mo@K[7'?@4OYaB?8m/Vu"^W#`u/3"$*)KLmNn&EYrK3Tb<i'Ku_N-7so@*GEhFjC-`]r/KirRQ9]N%M?]fR1]@E!L\&sh]Y@c`p\&oj\MqKlDf3$T0O-kbPstqK<^F4<..p:O_r?4:!6?0"BTOTlf,Ojtrt;),*8!ZZ`&fc4$S*fr#Z9.>%^M[:;U1!hKV]X]hk%1G!Fd%tf,Rat58d,!HRr*HQY__BI(p?S_<j6<`>'!Qj+UN8k"GKU%D3b[.DJgB?7^1h[X6R]L]<K5XR_i+Y%GQ"*1okDJ)K:R<#BRZk-cHn>*ZCqq_;.5#bMk1PQ>'4V"r*Zgs]Z(X0::*ji*d-SIc/,F5K1t%($=_aC&=KogDKsrBrLHDsQLH4F%g&`)k-m/8\7E0sK$7$4#[7.Mr+>hRL0`qD0jG3h)!sa@9O`#u'JSbIE/TO3XN#n[JY@Q]ICSI[&oQ0T8!B+d&aeO!MH7;8cS6L'H%PKpBm1B`6m6H?qDi^$Ke,/6)[H6XrE/?`JZTD&'jB"$D,VFqbf_+&D[+oc82\:1HLh2(U(c4@2'M"";rl=gq]&N8Y?Xh\seO[r$u%/-el90PDeUZigVdJnD$.Zc!6DEmc_DUtb9iD+l$n^dp6bKUj8p"rqu@.#?Ekeu`-[<%_JZ""#Abc,V+D[`S[NTZu^4:P^?9gUI"R%'q\WdR_keirHeB)(IQ[@BP(UkNF\'7iu4C/0#$p&-RkKbLbi,>>Ckb9Jc5+5Fb99'0mk3UaRd`rU>Hm>[5"N,X-mmD`)9\[e^GBP%*O'+Wd4.-96FIe(#U@$)bqM%',$7XIq$#`A7d(j*"O'>SjH`5["IM<*>WhVV0s&bA.nc>R1bheHV!A#l`B60e-Io("A=I%FX1`"h%A#?aJdmG+ZdIJd.\lg59>V4Z1[nNf5brgY&i[#OY'RZX:lm=.:g2ROpRd#[mm')f$'-P5>&]$1hJ/9RUZmYt.#<U3W.Y#?fV!?1o%rY^=!Y`am&(`aiq>!Z]V943gc?`%D14^S'p#4an;kmX`KH#(ok[Qu3BDSg)LM:`i%iG[SC=4/FK8T-KBaC8M4D5J@GnH@k'jb2u<%biQ3fg9hrNqjW#elH-;+IHb==0=O,>PJ^h4l:YFabQ7CaGHDe,ZDih=QJWTloA$]2cmB]"0lC3[E90V3`_7V&$D5&G.HGh.6G?qS%O+V&8iA2u<g@p_+D;"%afl_^=aCkIHBpD^`Xle9Y[?r"u9u&mm@EFJGR@.K&&c!*4Da#+Q2S640R\9&l`EA"D@TU?hZ^GMc)!l@(%5hUSF3C&2.1s(NP^D07d.J>!p=V1TlreU)*m-/s'1P@:dT\=&AOqqtC*?4"8ZmQ@>\.qZ5lrfJ`%G>jumSrs^(Zfkf+_^U<>,9sp%FcBi1_Yd&M()VW]WDlb)Y]KGA?Q8lD40Vr\'XWR&dG`<jhJ^8Eq$4?Gd^!GW.1rsK,18TDZ.SP`Vh:S?eej3pHOWuGaE<[YkViga%"Y&5b]O-_pG6W2*@t';W=j]LV1VUND\]?@cOi&Im$/`a`^_M+J:Q9'?Ta8W8bA[%pqY&iPJ$Aq3)0KS#BmNQZXt;q^b<5I]eo'\r%n([G#WirVrFmdhjdcRPK?SfQ;R^6WdDn@i`7Bc3.f0htQ.MCFu$R]mqkd/YQR3*"tR#Sg1ZG]5'D0De`6T:M_8YoG4Lc#%im2h",%)H-'X5at@8K]'spWCCRaJ0PpL37%rn`Ppj?]c%:%ZYAs%#9.$Wk=O0>gFs@\QA_U>aj6F+&>k.dnOMCRRa$9X,.L'2@AK)eMC`7r%d@I;+fXq"8M;JZT>19b5hD3jOA;VHH@6I`k61_<tmkrGkkIo"V,h$ALjguQ,38>hA[tMFf+,.s!_gq6uLD!AXHQ;WOK"-SRkasEG%j[&2YSooS)D'<(aJM<W@:2p(+I'NqQ53l;dCI1;!o^aYn1OSrD8mPbn-tcLSS1`3F%>oXRoJNCAhH4SG52fY#@\sV8'-09n:H%K8%:_<-A^F[db;>f2^%2gj%\a[ud.6Pg>%:gD)*E=p_U=^HR*K29KLb>]F<>o6fN6]H6N..836k1'u#Smf'cGU]\)*B&(BTlFV4Wu$e%Qqh8pYu:i0]<#_Sa"R3)/oK!iGUQGu:4X@D>`9jp2te+>#?8aVWmQbad,iu%B;6csa>$-2P<p>LS%(.t%3W4B`-3;FM+5a([1&ls%`l1&e<tRX&j!:6&C?r7,(b]n]Ee*%d/@G_ZKMZ'nI_??"f,Q;mM5?fQnf1/aEcZVi<at+C4k=fSKtOTm?V`GJTjBpKLTq7S<Gp!\%ajMVa=0<+IkfX[rGq&F*El9e*[$a9!`)pVZdcl$B9HG60L)uS8I$sQO_9mEGXdnMRcVi-+fl4t:8T.2A;YQ7mD4qb;*X98MXeS&L%iSHkUol?USU(t]Ge\!NEkt/K+&8HJn%'7&t1l6dBm=RWP23,ldEY<D<]seo#g&l*[GtHeIl/j)&S>+%D&MHE+D"3_8`c&j?WT<QK%\0Yt)<?ne!P9BL#g5_TOKM`Xq2d+@GV]PMOWKo>[49EAA(kZo\7MQcA77UlC0qFG$?J]DAQB\d)cKc)\S'h9fQFjl&Nqb9HF@7N9%4&-+]`QQXZ9hG7D:C.S/biLk,5@=Gpk2c0`ASYm<URO*q-M_%IGCVLin469/$9HkZfI"*Ibd3#K6n56_NU^Np3'aAE]PqF2)LY'_%.6=Ao\`@gIr(gIQ_PZFm,Xn8/)-04iXO0lTp-W*XCH(m\'Kn&qo+CY9?HQ.[g!]V;IBVf]:NKdJZT1Znk-VLXArh<VC&.@fgW&u6%Tmf11$h<"V/>,%rNJOHO>`/%SKk$H)V=;DMYL@#W=B#N=#)'#]'\BEgN/QI@["`6AM-`MIg]DFM<.9Ft2'E@%?`'bZa[t:PWg;0g%aA_Z42>aM<CnG\>7W43<o,74;eX$oLE^74`a+O"I_"<dEKLqhjAOqhaQ4[PZ'>h-2lYD42NgM[$"+ooa5b'_g1#sSc,#cg^akpNX%*smR;&2F`Q\n-X48*6lAX3*H7_"ii$lhdDDEe3Z^?45]G\R@'%E=0I4*u'_<@PC.n/N_kg:_Va;-9Oo9'+DWGh=d%-+:KD#Rno*E%E8d@]S"f#'<<9D`^6Zb=jUsJ:+&%uiVaQIG2*,W.Pm(#E=Ek]g99<\?rb+UT6;gH3*7MJ+#E7K\^N*\#Ri^oJiKO6^,*)jbg9f.%%R7j3AkM]`'/GJ2A:k$L4I?U!"LOt@IiQ-VU>`d-/Fp^nS@ne\2Or>GK`*NI2AJ%i@@i#/)Br7/]Oq8/'kfEmZRPaqnkmN8RgF[S!%>XrJ(A=G!0r$DZNh!T^>4U\r55\(f3C0ker<\difp,8jLYiQ@LE5PAs0LB<5Mm8lg7EA'[mD-aBU`i272HqrlCC.'l.Nc)TBQeqT%>&K_g5t%>dhG`?P]9,\pfX<cMYL?k9)\jc"b`GKem.-`<jP7TkIBIi,K;a9qca?Iq&LN])YFcf;eoIp;k(],Vl^buq^qCd1,'=kl%Fs_,r-ofZji0,&%ZU'Bb?m&e)pE*+O%QE*e.[/A994V!D/Y1k02ofQdH-Stl_`_+1JgiFK_n/";ipug38.KC7Vkmt+Ih_H8UH/!A%/tE[5KJ,n+MG93b$H0AiaZ3pg5jM!eB8UV:H5a7gH;7$lCtro(@O]Vtl;u7hGGbo?_pYJ\J`V)eVp;&m4q/ioUP1!Q2]?,iFrX#c%23p8oi13_`cd0/P\%9iY^8l_Dn6o'JjRA7_-<d92`uH`<LPX%P*M`[E]o/\;>d+K.9W82dF#)(<oRj[\3LsO1qjbFFJIQ\Qb#Eo$%kJL2hP6IhgbS_&<Z]6di1i&!Zhm\,i`XcMLCtO2mg0R%."8*P2^Ze2$^bl,c[r$4AVK\`=IME"9"oqradRQP,]`/&,pLr@8$QcCB%G(j?Ycd;oT)aR)nVI:6DhgqXVk^NouGNZiADq.^nNK\bS^'2a&BmE'R%PA8",*Q^o*&l,;]?qT]U^$orB@.Rm\qQ>aU[NIfp(qrS%ipWpSSJOE,/-&ps(C.m86Gdkc'*Fr?!E65?>#imJ)EKp?D!j9<kH?lokE3@+?+;h<eW6ZG`_T[RQ/"><5MrQ.UAf]dMEC=<7#:a$%gJ]O7GD<]:)j<3=1bM(-WO$rOpK<D]S/p(_j\<mK[(mSMmj<_3D>&dEngh#%Xn8uohR:e=Kb#ahm"U.5J[o]XY?[`)>KCu&02@EM%<@kB)lbSCD70$pa%gZ2'WaU1r\!js5S1[]V^hn;3dEVHT%2j_KVN)r_/5AnqqJ,;TH6<U=F<#>&(05u-G4m6E8R.?6Ld!d1dh&++%ldhF'/^%EKdE%FO(QfXkR/oQX""&@;Sdr'lb)h&<kZOEACV9[Uh<f[Bc-LDUr2,&%)Y4_Wo=,]VN@q,_:Li:0=AJI"n_oVX4D6iH%FHS775j2kFN>s9%*#o]f@P=%@,j>&2_QWIsN`iHPe8hNXTH;piS/G-=,kIb:XbDB[8/=Dt=JB0Hn=[M3/G2+hp]HI-5YqGs`QPV4%]#Kl%L_DT'\Vt6)lmP7@jFRL;GK4F(k9FWEc(Q!,%IikF#F1Ei@uE*_i_]]eA:?'cB&dC::L)AX!os1FC(jpILG)Zhn\b,W=FQ&R%Yg$YVC@p(j:nFo?aQ)=.JpZ<#!eZ3@CiBMCa<l#nC?`"XGd?9t>XpM%h1RNQ*\];$',ahJ*c^?bOdX%u$NkCic33-f0_#OPJP9*1%s,\pU$iWDD)U.+07Tn<!&'E(ukeh?e0Z"$an-JI#g!$+p+t*P_S)b<':Z5:qmjd>?JV+1KCVe=H$Ojnm\43a.GpWQeNXDa1#8nYo%(1W3A?^k*]bmQ-JfJWReBXA>/1ggkt.;6D4odej6q"b+j3K];9Z)kr18<H2kQXCWK'G*H#/BeO3lQ]<d/?jehYRf#<Yfn_E`Di("%*_Kt9(gSlQY`aN@43n3E5)SEX.j<SQ@$Drt<a5Yj(lf<^8_WU_drW'C/J.3WaGZ.kWc2/&I"-/?eJHLXist&Vb5ch%M[YUGP1B+C%j^\F\)32/`gtJZ2'35J-Zp\<6Wf@b\NN1;`@Pmo_j##1>[IK?`&B6ge+<(t51CcNmB4A.+BbV4AcnQ$c?[.T9R*pqCB9HH#*bI3"%m97$_7iRb5T6ROEMJ\-$`Q%R3;cHBRQ">DFm.:@?.%1k?,)_(j_2AnP[j9\eH\\^:m35aBitcCY-R>V+YDok_7-kEYhWXL%]"F&D%rQiBE"@Oth1trMC(h37LXA^h]PoN`GS\t]rUD,G;5*Ad8Hr9K'e_ck>f4(0"f]>Zg`(L<LdH7$0=FND<kl`?&f;N@[eu0[fO)0.!%5kBpmB3,2f@*(+oMZ$L%-9`"MU*DW?jE.ReRWQ496D.rqaK_Q1E,?#<0td`&L@N0!JnIeaRO7o/jZWOd>6V$QdGuk@rX2-QNf0_6%=r8FJe5(e`U+Wsu3&-=H_8)&_KT/^7d>^FD>\RXiochuI8nJE,pnD.p+JaTBC9rhd2WDrNIehPs-/\.`m+fB%X]i-8B)Z)sc:ic&%[?tfu^egX9?[rT/P?%q4P5l$ZL\um&YP_*%n>[5egWtBD"t%(!]oU).YMMgJpW'c1rF_7in#)>s13;`GUu^-0oa4UfCV4s>/,:K'%]oke`'";1=U48/.Y9_N1`iiI,k[.fO.nTB:EU8r9qU\jC$53;14F8B2r\^RdP"#B`f3Vr%5GG#nn:?l#>cuHCPr!`GLp,%cEf#[W%SC'u?Ht>L.CNOr87[InDHt>d6CQs3XY*<^tHt>d69=0)mLtWg'?MLWd`]iK$l/D!XC@>Qt3u#?GgS^2Tb^Cnla5-KK&GkfAm\'7%%+jr[CB1o@Zg@+.a3gmtUJ0pGcVo79_.dA/[e8k#O"FNHH?8D`dmGeP$+jEf[&C_K^+VB*Mp(BYsMcfd$$MX]2F+]VDf`Gh[X\MVX%25,ejn6o,=Zs=b\46R#)%Smf(2=FmfoNrj@07!+-,_n&Bj<%RQ?pB$M_6hhLo+AO>juSiGZQkgVU-5$MN(#i(6!kC_6OJPuR1&HD%P.6a.U#@-q["lU4jna3A<O.8!;,-H:EdTPb[24^olU?t,($hQ=r:nu;oVcROQ`2$g]qpeV;(:clkT6@f.Q%a4`j::('#WDA"kh$:%o9.%1S2XL^c,@!I2+\Mr.pqD"<!)Lu(<L4b`bR?N<i[>)s/oK3)tgq0rqk&sMN[P`=?"=BP_cu)Xn(/Lh8u;=7:_7,2?2\E_j-);%%d4:#ghhKNq;hu9:$d5/k.fL!6sFqZ\D$8TMb!BTO4<fjqN3SMVU-BA9pFuhfi0Hq1X.8n/tu&SXJn+3p5j-+RQK^kmnQC=aY9AN%4Ii*bSP5QIA1&0@9(oN0L6<!0:8'h0S=sI@-g*pT1nII;K>?[qljP3;-p,==kp,T./@)n?4C:(::,JSu,;p-^50T.5B#+=XjB[-]%FPCGJ9b$qk?F].bl;C+#+sguV9_?062:]/?bNK>E-8YJ]a0jEfVG?$:PqH[sVtietb#53:4f"oM4'&\UilCoj9V;$[-9>/Qc;^_9%(I`tMTL:R@lMW2IW_3FUaAGt.9TKOK?PB4Vd);RPA:e!FGld;C:IT@%pet%qk1b8;a>L6&TdOSTTfqJ:<jI?a<@)tt<]/bT'W]iP%j,&-Uip*f?W'SV,g<[^=L0gci<P^IOldb+F?u9bgrj`Zji%,Vs60X8Y4f#6_r]HgQ#2^rn]S#_hC3(3Sl\#"I%Vm.(XI@a.#Q&?.%CS"W14.'JWZ@aZ."aem2<O.61p=[lo\NJ3rlVt0FP3(BJTT_O3M,<o!^.p,(IsEr>Aqfqtc!&4&gFR5!2;bL^l\r0r<cWhMp5Flf%p4QbFUK,DW6<Ysl*_KV$ll`.l>2_>Gm8F$`'A8[bVR!V%4HeB`mDsBtX_R="%o`M:\8I#oYheT)IcS*Ef#;l\Ir@6$E:k_E<4EHf%VIn6ig;B'-CA,PL8PPca["gg]jgk_>+1/31@4T1<XD@$BDV\s[W^44S&[#hlT5F0(+)e4Vk8V*#E,0+l=mr[t2gBNUmGRM_YQO=l%baID`@280<3A^\!W1p0X2=s<0qlkr&;fG51m5>q50HZ@nM-IJim0i6]/X?0gLEEn4iZf4`AgDi<GYUZG2Imh-`JkWrhqJSUA"c%J%`\!bN;>4jX@u\TeiqPeC25@<SHfRA>]P(**aJC50<#o^WA@:AiN3"pZ:a820.4;^]Eh0s!<&Kq]j,A:d6,g+aW:a!k%J&UYO$3tp%K7I,!iA1XYX5<a;*Bc(@U$^B01Gg')_9jfFou,9p?jBI``h['YIUGsM\<Y=[E2%;0["H<mWF`0]JstTml9;/'T,Z5?V8[l6A$>@)%9GMtmJ&FcXYt/4_7&*nc,)s;p+QK53CA-nYX_aD=\n-58Tg?q\3]X7a=3kZ`eIT%dR`tWgCF>[\g=J]*rPD3&k.0&'d)0u(o\r\G%@(39P*A:3:m+>AmCDC^[h$R<gfKq[p['0I$K4t/8"(][S$F#G@>6T@U\CHT\*c@80@,aYl4t^`<lsSjC_*1&#Q0_r?<llCXmUqU&%2-G,(B"Dl1I>$F43pNI+7_p_*me`"Q%Am't4`&scI\s"0DZ0><]=M9FblAg3:(D6-ls]u['YM?dY*(qAi8p&2@bM&#;)<8$m3)cp%.=7U4r94u5\$DaOIF-</=BoME[<S`<:WBnao(92I^TaOio5M7:?<@X!K/3%_QP4_*WSC*hE0\2N-8L-mYpM6Bps\Z^SCZfE\AiLE%C=gA";3=,1?m7hEZ_`<R*(NC=!IA`8?)'Zo;s?=Lq?s4LH#<;[UH`$d2/TqO*och;e^qj@DL,@hX1HFNbIm,;$$S)(5FmLTMTF!#%m%-VHg"8C\k6nT1_;>1][?nZ,_6;@qmO.W.Z+H:fTQZ+RAKSHES7VT]h;r8'6h$,!QRUd`]"(k;lN$h7h`njKn\7<]Nbu50NuB&c%]?&r.Y_sPDe(.##s(q*AI-j7I\DpGlO$3KqoX11A8M%&Ic0NmM:WKd'S6'gqFk6Ad@@Z^Mi''L(Vr=fG3:&9#qBm;!Ok9c<C$YrU%7q@+Y"YG3#<f8"=I4`=tZJs)rI_UaE)nhrs3UotNM\Z8,o4kl7q_cmaeKt"-#hASDBNH:lrX5d#4dDF\s6=@/[%M.<rl+qCY+S)?%s1F*1m16FVh;<Br#J^9HA"795JbB]U5Dp=lA-;ndQP1L+m)ob*7#!VJ!!KN$(iV^\Zro\c8`5%$2+KjG3lM*G^*Eg,Aua-?!3d^J%!9UaD"2V<XC?,V5/[7h+>UKtoFT(bu2=_5>BL9$ANB@HlAus[P.nq`-io0EjZQjQbm@6).qs;E"'HW3KSRqn9SS6u2'oc`.5jJge%%pDgXAl.6.;D[7O]94s4(!H!)p>p,s,o`6kSo3[OV$"/8S^cW7FOdoC>3k,*G-6+iKm'8Cd-`tCJp8[LcM8Ve$g>]I4"$&%%IJ4>%;Wj8UfTT;:k@'o_ioq=c-_(0?VjurY;=2LqnZ9uZJ*LdC$C'gJ<In<<860_[75]*fP\A?OnNmsN\]"T/kq-5?+_SJJ1bIh&GblK2%*Cd)R0.a"N;[2OOb*DK^J#lR^(tt*?6R@*-BL)4_,gqdqlq!rr.G0bV"4Fq;SVGYCNeA<1Sbc6!i.1/cWe#1rBf2L(X[^$a!u`t5%]Wf'ZX?)>?*)AGS3_'G%Xt1Sq9g*b_mWZ""^-cR0!Y;7hf2Hp-`V(SIGbFe1.33Nfm)\U7=h3fgqk8pL:Z;lj_lhK2&%YbR"9D]f%";0:M'gs@oGsS%hl:/W%X/I7SM"S)!BumV$IrFSBnql"F]Ui!]_8K@<3!=E#)L:fsFTrJPk8Ya640jr1>mF@ROk-7TGUmM=<1US\%ku9TGdZr<M%Ci"\jDGW\Na*qZoV]0js25U)_u$Xp"rOdfRdhpI_cF_u_L9nH%h./$QhH"1q>Dt`a6WW[hO!tDh9"EX>;T>rqJIhq%Ml9;bpgPJ"+Tb1p29DmDItJ.;K6kT4,A:&hBu&J6<7W_4r/4S4>\\7(lB24&'[-mfZI67Ur)O#)ZAPA#,P]R!2X-&>`DVmhXd%UU%,SIm[B^T%lP^(GIbRY<#!meTd@)SLQ:=.ZBru@58(b<5PKH2m&;pk#lUs<Ob'5\6k`f=Pn\1cUiI[$132cgQpm4$L2Rd[+2r<DG+%2SQiCF)$HNpU<Tn(LY?&LNhR.XC6kA*HIi4^Nf\=NTUknDq`1^a#@5T*X6OG`*p'87:jroS!O:4,l:-nU9n$Qb(:3BcB)aPqL^B6%fWm!9Lm;q3?Pe2DNh1&P\5LSkGt95^Xd!-!%*us^kak`tc:[Jfnk1FDk7PJ.2MQ=i"9B6fLhM#@7%l.D;<q.&mAj(pWGK9._B*i,%NZfdYe`L"/V83a7,"\TVmf?SCIC!s^8hm?8<YN.17i@3FU'okf.8C<m^CsauSh,s:g7H]^$d\msB<1f>Z?fLW(1F"ON0u4uRHN7n%h$dG#2<4*"!1<*;EQJaGEr9[Ap/AM=/,.54-^C[f0J@D-iI3.c#DO4I,L$Sa/.YkC7"FO_j@fSIek%MiN*6Q11N_=ckLR_Y):QZ-%W<:mX?<[_KcSgE?j/\Fp1LFYs,M/s!*I!\h68@)/F&KdhSt_H^"l,VIpJ1Qc:6L%6Xkh/]gIqh+c<u%.nt:hG).4;W^`+fd`m]]g%(HH;Ko[I^-M/Jf^Ho\S2<"S-Df/m*dYckhDK/'%R)!P?bgTZ-fPT2k>s5,Z=o%?gV4pRB]n2oQJbc"%&0n\HdSM<06.]JjbWNj*b%f"oF>G;$-%bcWct\:3DZcda@[R[$j3UMS;Mp86:OXab;ma,p]..]*gcLH!=VnS?ELk0:bnJ=$Z#JrseX]eWTZd@8k(.&;S9#^@^S%Q*[SN\93q&0s5uUF[g:05q'BRjFfC[W/N?"ob=:"g8aX[@dGS0E](m]drJMA8B\&[QpA?c*(3hf3\L#^V(^J\Stp[9jR?.96!`H1%lj]\mBTDf33:1pbI]qLf7:[W-Fu,8/CX8UpYOQ%ZWiqu:\4)_8:-;d&W.cnF/Uf-<3QOth('#48CJujsm6J!EV]8UsdDm_Fj1Zsc%kEr53^*4b"q^PZj@,r/Eb[\'H.lP]3PZd5`0e/QR^RNSNhY6@W;LZ0$mC`#5lj]^C(U*lg>*IqM?SXW._N&!+-MYb;,Bitt?B=,i%ps;)@CGe.J.f>6:L-l1fikcd@$,12HpA!'sM/6[b,RRm2d='B/Y2XmZrZUJC'.I[KIMdO"9R!OR<\`3?n[49H(@p)0&bDa.S[4Q>%&?"!uJ988(Qp$W;bdP:>$="HM]W$M._@N*:;>`q+f1'SAgL<"p6MI/ITL-g:*5K/3=V*RrL!eEd(8bNeYV&BjN>*u:TgSWh\>NuB%K*e"]gTWugoIPGCiT<;(cLhPkXJ7p[8pM=s>Uj<FmC62k@,Jq$,L^Y?P^/t_EbSRENpGe*j%4C^[,,*'H"'$cm[bo[EVi/?Y5>+(%p=qp`f'@P,Vg]!9gP>`(a7WE&laWVAf'TuAWas-r<GfEs:"A0,^Sol7^3ipDmus(kX&!qHI>]]7/hYsiH^7dk(&*su]6Npa]sBrn%[V<D(?1N5S47(J+j_'e+IP.fWd]F=ul`Za_GO26q0!umPd<"K2a35ib\,*[rHM]>]%t:A:>]dqZbGMsm`RiRba!Lc%j%"Ol\)q#3%rI94^^&NS0mBZfN(]/"K%pm(fdsuT-Z>ng=O478/_Z/S`e_o-CC]Dsc5L5)I?,P*0eR>joJp?Rl?/$]Vp/i^1\$f_P!8;(ok]76I%i_\NuYI1@iI^j2M=huC[\98pE929.PRn5mBX=!\tY8bKG!\MVF06hGK.gs]f43RSpBp`81`eu_@10<M#)?q-\EAlL_:dqhRPZ;6u%c3mVt'2Mau1@dPpZeG*T['othXeKA@$<>SfTdMUsAM4Cu2_7GEU)=lHUp?_29R78r:tq?kg9m41=f32#-]Du1!U<h&)jVrN<hF6o%P1RY@!r`_Fq!4"@l-GtdrqS33r8FjZpAQ-81a2h=5Q(@RJ+scdr8[eUO10W7b?oaHs5dU:qVdM8qYoeFs7:a;naG?7#DgLKdC\:a%q9qR]B2aoVpV6Um?iEKdXUdVlj^3K7nLlhLpG82Pn:,r^rXZd>nZRHAiLf"Wp<-hBiq)c>gTUYJiucV]IJ=o%s1dr5Q2Bh5VgjbK%#VsuZfaEQiEXCOXG,4GU"&ae[]Yom/k:8dfLMTIK/kHR_f)-IXMn9M(dQo1N(S"[E4IkMh3T^o=dRhm7dk)/43FK97:n?WHD[Pf@%`T7n-5eqjPndhmnplh=gLQB:q\%`^o=n7j;k@R,nXXog-"nt8'3^rYX.0;]#Dfm_J^&:l3M0Y\9jN!Vu"2/./cfH8\gK._l_S.]=%eQ`U$N[lD"e^GWDPohc1b(HpN]ka"E@Ls"kE=e"bC_2Jr97p%t.h+hmr%n\W4s#KPr6rcrr9mn0'1cA90gnncY8<he&hbX!hn+gZ%X1NYE3:j<r9&9;3lYQ3PDBh&6)YRkhTeTZr_I59A9S[K3G6hW/!>@3Vcqk>L9\p:&gPAs:YcNhBcbK;OG5*O8/;PKF2'LLL=Q@Bh%+i-#2qMKG*Ydgd>X_Rk9]h%NOp[c%\EO-#H5^sbl)![,+6-QNfOhfL#>Z2+W6,"+Z+fCI<bnA=$E?&rjgq_ZHN'm+E8"lm#7\TUZ%1^Z[@dO5fH:SUb\n\S`VK(KQ]#<3@+JCXo$aXMpcpt(#3-i`r6`JDM4g]&.Fs*DHZhqm5hiTi/rqWC(jqpfWBK+-g(ah@^;aKig)%bPLTj]nQ(Q*WQ/ortfhV(_2d,dI4iS-boTam(_Jn52Uh_?O&Ohf58D)r8%6gs.=N5l>Q^K\)72Jd-nHp1XW2r%P^:P_#OFVr`oF%%VgTZ)l1eG[^\mZiitqa*If1@<pu@]*r7dkCqY,KC^]3k#s8;%%LkHP)CpD^mpZ&k-_DWG(5=8Q1iP3,)mr(GfeXuj1Y<W!Y:U`Re%nDh:_h><N\g7$5Mr;Kc)IeSp'l2<iZT*kKd-lM%V7c;>VmtJ>,^'ArZrqjH9D^e6'eoqA1MR&r5s5dVemB9?ShLG=DO+70,dn>Zp%KtbPncPo!"5F<DV`Usl@&H;6=i@k40pr!.%53g46s'Pf8iVei4KjVTGkCC+Ga(\D`l0Sp2#F$CM<jEm!k/T&Aa:S`3l#oRq%6J9Q%JFTd/%"(!!BXIq/!ZiK.C]oE%<%-qJ:^_)l.2N6l7=[(R&]j1hVHH]1-ta?7@dmA%_Uh!p'O3oEhin\:>K*jEHj(bDXKT_@!eaT8%[U;u,QL?qF*S='L^Hh:,l5`B+&I0K"C%0u:%ENu%C]`jnF%-iNKXNHTjD,YO)/5j$lXhnI(:m$>jocfc`AeuhaQ86&Q6H+J)sANT%E211#J\3`dFC31r%1GN8L_T`\Ta9,p`lbS^M9O^Vd?[b?JPC)8&&WP*<]rqSftea9,j5<@6'4_N@qjUnJ8O.D[%!tIl[ngh+FI;O%g;0""6n=HX@)Z3OhsL-f*\LGX4MlZ"0Nku1!iZ2\GBh"=F,6<B0^CB9&8m,8q5E14n&@$>i!n;N+9Fe61ZLY;=(Ks^qoAmi&c%TP%GuT`!#q`a?3kp0R,LC<rmclsZXRjHBRuku2gt4oH<I>Mc#^\d1&eOaH#['GjDRD(;GJP;,+f^EL-YF:K%/='^1,bH0\RUL[_l-@`%U4oMr31H`Y#lPRZH&ek:8`YJZ8787i#)NtbV+6WQ%q8Puo+AuQ<sn_]jcT.\:2M,3WVBhXE\.^t^N8&3?eDFllIa2Pdm`*OO)q80%:6Dpg08pb+GpQHAL.W'f:RYai$%G4I#'LR</ffPsf!.J:c7:6>phCUh2\=)M9KSue8%ntc9FA-o9MZ%4)odm08pF890F]g?LIPk%%6,S[7e1ngXf+qts2%Vr8F8dll=KY$$&oh"jN;:RA**/_eMW(CW;2<gKLJ38Xo)/9aQ[[d+IP<Zur"Ia>DZR2BZ@mM;hQ3_B&iV5c%oW+YO(2K/h]n3O8WQA%LKH$-pT[3it/X,7T;GT?NY/U_jL`MBcM#H,+kcSlS$l)Vf;(ZE8KUn0f=6Le+b3[(*GP/\:Oa0di\I'4/%#DlIB<Xk[u/,g*7GaWbkTULKJb4?*;7dTJ4(P?^,^Q:j9gN9iD/k]b2eT$6RYJ`<!RW\i7!c_J(*:1d]1%OQ<aM&Ik'/N$HR:6V8%-HUL1Ho9*^L(tjmab.9[B-MeA-;TUC<Z,5sVN!gL.IB%JNEf">G_KVq-=6$:!4(*GJoSb%"l_MN,T5e6H+d-t1e0aP!$dmR`gg?A%SeQ52_F^HR09A#5#E0)_#D<s3&'0:Z^9V!G(aL%DZ;OoZ`M-"9hR.TqDVg\UT=9c-+\(Dm%/pV7&.4D.30Cm(XTL-(EEI#t8Bijr%$36MYYTdmoAb-8nVBY#Th6rLo'O,.H,&PY,4;P2;YqcO%&F*YHZ`P=?7T>GY=@/MMG</34dq_KPZ4gUSCH[&6Q<b\Z7)4E6_^1CE%H0Kn-_hA=VA2Y3k,T[HfBqC,7XU!Uo:p%X@PC/jYS!OKpBuPWW3suV2SoI_oh%`S&=K'ef,#SP111DAr73Ia\&H9RbX-N.;^c";(%Hm**S*ibYE/mnnL;E`IV[+Acq;Z,Ce3#q9,KFuqKYH2D7$mb_UqQ.#tfOB.G[!T;B!F^-Q.`=Cf!+@@N]#NiiXOsBqg\.usks@M)%L%o9ln1`Ul7l)e>+P)oR]K>L&CcA6A"u8_#9Zfc>IeuQ<RIA5^2^;sd0gq.F+cU)r$AO"&.>+=.L_J#m7NQ`E$Sk;I<>uO@gu5k9%M)0"4Fe&!J;P5FF-7+?(iJL?!3Jc;2KRE@_Rb%&!J[G-M)XJXgdHS+gKh^L16&me&l]`=tA01YLoLu0P.:):(&7u^=&Fhmph?n5W%`6]E821u0N`uON(L]']'(![)V4",KlQBp\#ZS@gB(rrsS:^KSS5iFXWK5H1-LW:4B5&WJh>*tTReu5cK)^[5m@];7Nij$aB?"1"V%b9O3a5&;IQC87.t$!ssNaW5W-qY3k7&42jK9#K<bqp\/n$S8;7i@IlE[MG,#:!_(=Rm[XR`W,pkc-eJ*r:"$0%p*^_$]"Zgq]<lb%f%)U:C=jkW8r@8oA?Tl"c=B!rb(H/dPtQ[R9JBS"H0rKRoC2JH:(*Vj;CI=N"21$o*M*e5S(2jaP/ARf#W&-[(QOB:a+[o2m>J-`%5fcR"AW$Y?[X9i4U,5!**/+'dFgH]4cZ=/(ko"W_/._qUmoE*n'Jj]UYp*L8-KEq$c]S/+Vl!^]!R84:DoruM^?jl.EBW6Z)[JSW%Z8.8&EH^;O.SBcZAu?4]F>9($/ul(O>g.F>G*9Mf-S[.4!A@LFH-I]cMghb9X@`;.j/c#'7KJ=o9_!snY/(GMp$?g_m%=DL6cNd?%M9"U<7VddAF)g39c>R_u;SU[thnplZK>T2n`g"Cq5^8(Y,5XhYfM0$.BR7C>-=Pm$gU0*u;G:eV7O:]:7C*ZE,F^n%;a+4n*Q(j:%;h0!+7WMp=GaIDA#J)Arg7kf4kL%jI'(\)&\RJ'TOc=G_+$IZm8K1ssl(Ua\NYl*42pT4Eg?fH3-CD8:X*(bU/3XP=rWXln:a)\^%!lERPo!!`2iU#,*qidr*`NJSaPm$:bIT)^@EOC%+'n`h["\3;aK!>+cb:W@+e`DFb[=J%n%?(\@8"Cipf7cbJ@csK4'K14cJ.d:a%0VP*X4$5$l!=1+]piG2-]$mB&6*#04c>_1ee8eJ(=*^sDG8bBJFMkaqO)5Ot/5.!QMTj`."n9Y,e<AS0XOL#-&O7'=;@(A3m46q"%kAC!>4<R4_$QDEsr*c)S&IXc-4:MpX^;4C?J?=\T!CD9W$6Pe]*pNP[!ChnUBT__tBVtk;(I.0-1uihj^*4%5+Xf9ad`[]gRPX2Z%jC:J;UKK"Fh'b+JM?44P)TWh6VbB5\KU3Q+YKA6N(L2(j1[GoY7FrcaVMK.ujZ_B0YT_@=o(S1hV2ig?]msRV1'_&=d14A>0*a`Y%ojgq^a@SIS?Qk.oQJ#E$n3H1Q9&$SUD.,n.82!TPOQRIE5RC?hUdtH$/;-?r!A0X+@b,@WL/'N=cN9oRO0qSRB4TVc7^jS-c*sX0%[ZMm@$&&c<!Aj>LB=^7hM?OM$5Uc-@K(ncdh/-TaX4=j#\X6E2'C0=5G:j8h)WdZrUM*.H@jYXq@9`J">&(ZPG;7G]d2k`j^JGRT%e+i9Alf%^uX`cBI\cir"i'G<*850,<<sg'3XK4[S[0!YVW3%gUN#cS0UcUN>aeF7p=;3Ql;%dm`TEbR=g;-F(,VH<s<<e8^A@eXH%ne!ae`m"Na)$m43';DLC.2H8:.p>E>D*!u8R^oW`=0(/1YWHepJ9#=j&*>iIlD[4c@:isk<'I#1JeGHo;L]pu8`5$UYV/jc1N*>m%)>=g\KXucS_3hiFH.SdRnk"tKE$\E>/,%A9[q1]hiDGKo>40<\lJSXrD2J/.9Tqd,#YMj=%V('S@t&l&Q:Z"78]`XmJ6=uB>nSS#%rMVN4$7h4F.;>1An@s'WmZDf9&>$AQ1^Sgli5mgDOi"ht0f)PdR\Fp[rE;*SjsEOW,b#8'75@WDDqh^c`^pZU\us^GaYAB;E\^C1%,i]?ON0@\[a)*DEPF)qm2TrRrD&$,[H,fs9q6^"h/#S:o2GS.]\X#kBjHcn:d5L6^dg]MiRfrQV4KJeB,VhY`S0cpc)s+&gD3Jkc%n!:CR,iG3K>1b0aLMiL1_D[gE4Ei(ugLQ/^2H_6O2OUd[Rfl1Nc4_e`-@tC99=@DcZ%K5q@@JP)X=ijIc]HRD$^&HN]FM5e&f:qW%PB@LojtFhqn.+`Z:Y&*FRaGf>`+gHNA[Y?CYp;&4MB"C::A0nX;79WqZ#"X>2W]6:Xcl<$l\;tJb/K/*BUqQ`::st'lQl&<c\'DU%&lr/`[Ubps+NS"fT[>fWn>k6,4.YhBMU'?;.dQ0(7o_$C-_4qdZ>hW"o/,bO/*!EEinJjh:?!jnX1GN1\hO]+=XT=8e^R50-aE7:%`U8UqS4)bnUgm0>8[(p8)^lROd?WN%JnU_1bV#$:PFFKMC:$]E_`IZ?)COKbmHsi"r^7f0G7a;0(f/aq(CeiIERIu0=>ipKgXB'Q%-CoQjg*WR>E4/KPoSO8uP>&DK/u<EJ;0IjNCm.Er7FU>[%i7B>Ec>5kPh`"t0%q6frcWcF8T(TgQ&C]hkWFsl0gCc;O/3ZIe=+L,%-usrW=NXs0>)u,(7l,'O]-Kh]J46*tOq\bnRa%!0.D,gP]-P^gI@1Uha_D_iG"Fod]r=!34^;mU\QC3:W870G/GQFNiC9Sjb0)Dd%a`=_.EC7Hq,M[+0fTdD<9cbG02Tn.^>f9)V1<&rj'e\C^$=2)r'$J+-@>Lb(g9*'"_`3CD;8?$2<ZRVNn@4DMgR5[1E?&ft/)Y.p%,82\Qa@`]G;fPk7;'?e<M2HM'MM(iWCkcgE%C&cX<3p!i'T$Rd8R]S"*V)$DH*[G'P%$1&NsH0j04Bu;4=.Y(ac/2GLYd:mN@D2J%:u8-1Bf"7!N43u%B!B/"GiC<?-r#G$M&?V4Vcsrf-O^n,*W^eMK/8u?bXqRi5>G+iet!Dj^a'+29@1h9mnV%,OaZG`WTo<X!8'!X%__haG0du:NOM^35Z"L%9H:q>.F\b5Yr\:VBC@rtELKRp-<Z/#oE/'aHdVK0nh0=:1foXM1gX0hnej]<MSQG;!EH>hPKP-.cY1[WI%,j08a87k6(l%#&Pcj<id61rAGTFisr0Mh#JVk8[07\\ot+m$?`CfE#6+SHMcgar@XGuVR^gfkqJ-=N`FRR;uXUG>>"_"h0c]H]9\%SsQMA6ipnVY<"e20pWL^0\\07X()JqB5Tb<2[*Y$AnD]EH@T]hfF<rRD`(=Pd<9NXVJYQ.FqZJR4HdnSAkSrU&44]*6Y<<s\Gcul%T#55s]T7M/Mf'r7Bp9B[MW-lf1=!H\GS0HIid",%T`gNu,4cN$%$@L,pj:7h(9(UskRrGYI<3PI9EE6%&%gf?VE6m#T[ek7QpPfI%b]\sJ#bBq5aZqZ+7&$B+\SX3!'WNu/Jt*b#-M'..TI:?U-.GP2\kenRB(;*#eMGY,Y5#HAcJ.i!2;FaY5WEUQ[c`c$EclO5627#.%=4?GHqh%CDY$]FeD6%3&2/STq`@;,.&KPBD?,'145f)Z$]h_b=6,9Vdpsp1Big`?GBl69lfZV]r2T/[%>,[#)RTr*qMlnVf>XSd9%EM14u3n`K/$P$XEjd5-)(N(;n2BI303Kj(KN%5u.,ePGs\TDu1$gKik),[qE?6mKko$&QpS#&K_j32)RA02$'Cl^85:5l8)Y[eO)%#8gp>Lm@kgW!gA(dH#55TfaL'\f.h_hs-YfDN%dX"PJip7T5Pdc;8\"/?jsD*5H5CAK6:M%@^!D.>=B;0X>ar=b&'[a4[P-dEaPK%=^<roDod>p&B-Pn?]E_jJDQCbL]@dGcK5QBN"8V()fd%opo\0,O?eP/3](nKITGS@$"T-aTt*PYn5c"%Qt#KF^h,`GR6)Z*F2O2'%A6;=kV'WZ>Ah4HQ*$M3>/0q0aCV1G/rXP56,12A1haqMg`,sNuG&8@6*DKQUFPGpZQU^F'&GB!Lao`(0ZtLQQ,(WX=I/Vk8@ZG`l%3ua_4)<j"&;i<54=lV65M\KLHKs;>HGqDuu+</1E$WWLNC-6sQMACrT+II"r\BPe@j&*,&m!?>?5c3`#^kYAp91\W.XS,>mST&5o%&'k*+ka<<Zq16bbfdA1-Jab\+E9?%d')/_@n94uoSF(-]^4;S?QCRbp.WAFKcM[R(>dVb6!XKlZ$>4fqo4HhqHp@ju63V&KgJR'5%]X"3_C_N:&&e.NTjTf2>eBsO'OBoKBPokh+JFO4#Cl%PMR2sM:+4)K9J/KDYbZfIsJCXmWW=KA<IUIde"-!LmN"/YGaaZS"P<WR1%.t/T7\COhchLrFU"3Y$J)@>V1/Z^M(S,c83[j7;V@+gUU^s%i]Lr<cpis-c8ZK0#daW@"TA\.C68TlsPk]>9B(OC/_hl/`'hlN\G%7OS2+7_n6Z-RXAGGP[Ci-iTZ[oL[<)'0g]dYV5I!'7[CrMu>Y?lL2TSYiBIYQe7<s:2?&3Y<*/qM?L2lM'(D>]u",Z\BKBV$$&Gf%H*81t2ar*Na]<)X87.2#*C^QL.s@L1MJ#.^2aJ+E\!J?.q$ORZU26Ds1n:9j12]T4B@5[K$f+BCAts9O=jT7<>c?L@9b+MU@ukZ"%P%(bgGST)?(^GE5?uHCj8X2TP!a?8]JXUaB:*Oj+8/*1ADQi#ZL`;2"O6Q%WA`qpIUQRY:n@a\G*:9#0+8L^$CmBe=Y/LEp((J![%68QCoXK.\//mh:00#KNg!)DDSN1P<Jm7Nb#&XF(7]Q%Q&-fZ=N4NAS:%F0pf1'UGbk)TljL`MZRRa5dE[qXI$DmBNVEZtb*CedRl%dLr:FSOX;FTg1.K^hfT-b[*5#NE/&'$dh'AIL@bt3[DQ+#mYp1bhqZeqZ-"ef:epMYuh+2"#ODi(^9cIWLVb(0HD*^%X0T_$gl4G%0f=>W5AaL<$d6omL%1";S'i<:^AE4Q*p."?N625[Y,-)ahg%d3%PLK1%C;\MY:S_<Xo`Lh.\d<?S;X/KeObAuD/m'M@\#0Y]nhdR%$]$>c\;fsc>+Fq[A+Wq$_Rc6@p2I*W)?EOtU+SULpK9[aXcp.t5uhMPf]h=+VR\SXGDOPGX7[8>7/L#62+:0I`LL<e8`s#ei#$P3%&LVuGX&RB$Lj9hjd'B:tD=b=,Ai"G8biKt#eH1pOjkV+\P^Fa>YBE8kU-p-$Y_I%urWk(#NpHfdi)%CM-M(`Q7D;:XCD[Cim:6U;%\#3+L*b?jE+eNl9mbH$M*`tG)l5f[@Bn/MW;]liZ1!1XH,<'BQN+*7(eN.WG=5q`F/ElqIG0QS4FaZRGq8q[?Hpd;_L2106j^Ypj%gb!<-4j1(T-5$""Ru(+Hgm$Q,N*_3l9]"l'VR=RrEKlW2X92p4P?f@ILqVi:HR$Z:+hmK`l,e/P^g&4WH>l.5"/97ZD=SD&"rb_-%J)Ku/gMXE45AGYPH`JTZ4>"ILX@r(E:`oVg8@'tEfr"?]3(*6q%XSoSelRb^W1\7_51`fu*cU7E-16';]bQXBf^BsJR^?*CkePB1%NT>2t!$0'oc\C'W'Kg@-Ti-Gj6ZrOiNhf(rXIN5#pLMMKfns&BmD0jb5&]0MHE\bAa#[hE#Y7$jlHB;C\]<d<T>`;T5BKGlY@dUT%:h[bf^9?[Y8J*H;i>if7o_aEMkW$cD)`*j/4\Q)B\VVohNW,=q7cr+8/d6&h:`f6R^[_V8%'j?p$QHM"Wh$EDW,#EP?oA$i!hJ;>%6'AUUmHn`*`NY`UFo5iB10g^tOsbR&)mi."$okra-lq8C![NIgm4aukf4;*%3c_E<1?Zbp@?=V.;pIaCN)%V_2J8'uFNt\h$46C(%(iVtuB$@12fa^:<:WOBK.9pnD.-_2p*fbsP3OuFtJ>C?TDO/0?86OU5eRJ3ElA2gdS?dFLd%HI_OggO>Sb(6sbLCnJjuSnp,A!@A%+Lu1MU4Gnh8nU'-S9G3R/Z*_o/c+59_TB$O.f_-n5g5!ud0llgMS)TV(D@AOIU;Y,QCQ0hB_fHr"(9hK\A?!>!/,F<*lA3,`Oje?%m!QhR['%f[JlcL+^J+Ma'bt=rRl%d"JOM;,id.<7o,]g0-Eci[,6Y;tDtcQm"ot&CLr*C!p=0q!EXbj'S9^^CbQ``/!ekCi3k*,p%'?scIkU;R`"#uM\lp'/USDod&CB0H1>7*#U$6J#IP#S?(nlt&bL8Da+I<oJ"R#=?=p(g/,kb]R!PQGoahL'PYTNL%D11#Jm6[lH*%is#6p5A*/dPiB&]-RUPRHG,-]a"&/6dD`.I/rBaH>GKeG^;[r4+I\DAm0sK.k4PWi_rYL"%Sr2%7KqVdDW@k6I*:<]RHS+EK\^.[%TK^N;R:]]KQ;%SQjV5c[J*usC$>brrVS0k79F>M4`^=SEnuH,P7QL@F)Vns!TEr>4IG:Xq/\atk#)0-HU[9tILkq1!gWcXF1?F5(%%e5qrD_iB.FA:^l`(6a5JUG^%hRd&PkSV<"fueq&9jD[7_D=aq2X)_>RoE6^3"lK(4@h[Q+8Sm)p?8_&g[,3q=S<6M0+><`@fZ7]%c1D=%'>00tZKKVWd7TSAgeDhEcdS&>4Eh*)':`f0CEWR^Yu4K#dX#BGh3sZM>b_KJham&G)'HRF=772KokAut)f<+p0]r73DO)k9%TA##\DnGcWceYg0o\0Mdc)ndEmL1R:.Ta,44%"7,T\$L0M^'p^f&Ah,M?IV`jo2e>Yq?S`T,ei1LWq_to!bLJ-4oX$GkC?e#jZ#U%B53I!PT.%U/M7#o$8Bh@8D_e^i$Q1%:3gj@='PA3Z^P.kF"Vpf7sPskj[j3gAn,+`LhIkeo:m)=[[RIhX^TUd(a\:7I#WXnKa\f9%[`'#oH0-!H+;YX-@jZO,ap8-P)>>mEb53F8KT"SoLjflD89l-7<l'08F#>hFYNTjRHA?k7cFAch"OQr%hQ0!u&O]P*LJgb=WZXm8%=Yf-^dD0PB.\86WTNU1u4VcH3$8iP+^me)8[EN6,.t;=I<FaFNaeB*gC;(M2,s&ap_+l4`._@=:Y.3J-aY5oJ%A1qEjtpiUM64(B%G-(s+;6e),H"pm?VE;N(msBp29\2<:B_srV$@O@rib:2YPA!+07"5MGUA<rbWV<!PG(TdYm?GMC4*&un(As^E/bd(VKPX`C@5Js^%f?UUW^6<gd)I!%k_US-bPJkrDaKC:mGW:[`DLsHMLI7>e%87@`br^i+L\QXrl'#U7So)N-8:9B']qtlq4ek#%%usYf[sGBSm,%/G%V0+%lH+^hijt3O!JrEFp0EI?f)\5AU`tbMfn*8bG2i$)SK=dcBp6\<nZuE9Z%Ql:F9DJeZLWK(lnsJ7l?8u05\MJpZXR":g<k10W%E7"4M-qt0R+H&R6(R],;c5RuC-36ks]1W8lo'6:Kf/P`pNqE"t8VXUp[RKqG*KE"hf+!e4r]mn`X#W?r7jnnX>Dj>\'3)Ut\S-J2%@ejjYe6p0.jd0'7PPIN!(G7^h,RL`R6ZS&'_\%qlN4KLXU^P#LL9GlV`WW$UD(D6*_,Y%"(i<1?B&agE/=L`8n8#C@8"1uBPeD@V%::>mGKSE@5f*cMfkLuTG'K2C3]_MB9]e:.\KJZdAp(,4U`=$L&/(sYCg20m`''5GJ]EOHSq*>d+oNoGg[hhojnP/j2m*+lsnO*:_%U(@_oP$,Jr6*J_G!ja9F0.!u`YiZf-ZbT*BQ30Tc0-YKC"p28/,(,Y_bjG<!m>0^M8-o.VU5;1WB#r8F6H!Os!B2Q'\3P;5O#2XZ%qRmd8)F/P=WLOr2(+5OP+H#/\SF4E_(cV\P8u0VW`X$6Th(f-9+OLr9RbD3C5Uc3t/>XX6U[a.VpA;1=:;Q;,J.A<(+m'sQi\_pU%a0P"4&A$?s=lZ1=#ZrX!NfZ7F4sFc1p,FHu>_(e5$q)acaI.ZNpn1s:Tod@@7kJ,CX&qXLYg3/=Op)+4'nGMR(6L:%1hbp0(U:2p%kjpm=77i5^mi#Y=r#OiEY@`\I`J$38$o-HT$NUc5NWqGNFOM.J&4=rI?qhY1'SuKQL*SFQ>UG$KUC[^_NIrY?XT014;%#$(72h:5%"l*Ik16R<?Q2qVK??hSh8+/sl-U8bM=HW+`87]&'iaHdmjB/XF@f0'5;%(I:&;]hp$o,IA*s7*h9uP,KJ5J7ZUVXD0UBuLm!3"`f%!E0%2.`X"cb9&Dj:E]:e6ejC+4!K'N#;Z2OF#o/E;9qp(GbcOZ(M5]PFHVC/*"Uq-N](<RRY4rY'?_M"@fk^K!]$XFP;s9'_70sg%iSk`>^k]].F3Xj<kp_pmnjCJfS8lS;[UhNDkkFg$2ih\e=4ijGCpm\a+G7j.op^RqPp<O[OZ=Ua)Asq4bFhCF!]37h[N%1l+EB(?%aK00/YXKDZC`uOU_+/>c]-3YW$\?]>#el6Of+V;g-@1CXiT!!di*fcoEo`/][LO2YZa&uVV4SD]f<,5c<_R844XCaR3RFoBQjBZt%icJBb\`N2cp(XeMK(D6`1IR;t^o0?qA!jWb?*0j)>(Lq1)]U!jhm)-^h"B)K1ih`0\uf]@d=[`g7,12USo!U7TFGYI%fNiC<\-38%Y4$8:FXJA6?Mnn5"-Yf$Y\>pFEPTrW&CS`j_BYA2JD8?/G8$h5N2JkWGZk1eLJ<6l<7!'C'b<>ULuNbR:W4\HdmkD7QT%KKo3NQu%)5"Yk+VP8l&G!/iMR^1gk3-Dq2gLu;=ppu`"+=iDB-Isl0L`S/Lj^F9eZ+JRB>dS9CfS2$@(<&PaGD]BVi>7[fUu"(abl/ocr#qN%VpB)dAmZRF);>n]>Lp9N=+r?]7>WTWC=D^"^_Hbc0h6$#?shlml/q1=O1jpK5Y=Ot8`%\`j!Wh[(6_CHaDOn4E?$GU(C/(hBPViY%=4#<s]IJq]A;eQ_:#&sgB%shC9-[ob-mo!c1R]oVnp;-nWee;+r;1A8/bXkX'>4Fq&A)Q8Nk<]rdMue<KInFS%ME;abToZt2p+IE%5hs[Z,Z287;IB';Pi4)=*YSl5E7P(nXWornKZk'Ze@a<h-68i=g;Md9]\Ibu451aLES<8T"d0$j!E%5s.e7nddEce`OVr*2W<q@<%L4'Xll8(-u@osG(k[dKIbfTGB`/LNi0G3af[DS7R%k&7Vd!Jtm`kUf'iRcJ>@aJ1u)<Qf'#L%#CbCqo0j<+p@4,AM)B%PW:[cm';%@$\h,J5*<hHmsP(A%@!k-N,M^R$#>sH4Fq>\>COI?(!gYic(aGbc2K>fh$eLAK+]r$!GDO^,%EKK=DhF&;WNcaGS#ld:+;E*Hq&W%kMJl%nGV)ZO[.N6-Ei`V]JCMG+tYF;<(h0\B)i`*E^i%3Vi*%"1YQLn).(ld,VIdRmF'RBa>ULX$R1_`[Nm*4XIMV[9Z%PWpF2[d%M<O0X72BFq6t'KW!Kkbd*%Kn5$=fqVb6G4Gcd?23Cn<KiEr$!G;$q/c0CL*oVNkXI_)uV(Jj&CW+qb"kKdiu^<)/+e^ilaKQ3aus%"ZQ%I>:^r'Q(u$&)>(r4R,MQ+=&-osB(d8/jGPH?#L$!,Y7`VSBV8nbno;5ffJ*qo<.SlZq]#KlE0Zeq*#3bViQa6>C6RFWQ76Po%(<SThQCmL?2dqG#/_3qYG^sr>(<YcYTc6L."':U?!227^]1F[Eb:G#9>spVLkq'/]\N,D.bX1N,6Tp0tLl9[1X.7hcJOqIt+?#<Y%Z><B)0-YG(,t9(h@(U,EZ3fQ+b5JYK5V7M#M0bBA?5GJ52Q!?_M5OThEa=uYT/9sY9Z@g9Jld'uLRY%l*W=e1SIj\nSZk7`o]\]%%9=8&Q-W++[6$b7,*deY*Jk^"C,FO',`Y2pE2<ddRmCe_)RZ:m4h#`dD(h<>kOR/JiOGfCqCK*,;6ZA[UaWuej.LTq@=D/b;km"&N%mT[J#BcstP!LU!O]^X\GjfL&/dH'gT7q?2A+ZGPiNiu=E_\;b*!]Cle=;*K&nIhVdoZIhNj[E?^e#3Me'?4[BZ7Q6GNkQ,Fm6$1A%=/K4QN1kdb*,ig;\J5X.7I2G]NhbbJmW$6(+j.VsOtmfp?nmr[lnV$a\qE"YKV+:E$q9b.'HFY#D>E`BDG9]=`#GkW&]:)4$7Gl7%`Y-trBcF<;WPIBO3#t_m?\2G3T%ttpOk=3'][WX+OD0P(i@o]McF+WG#.&I<SnLF1;m^f:R0UXt_"R1T94EZ`K79s7lU>5TNX(]O%p<m@`aCHHf]Yo<G@]LRL(AUK^g/qDS(tUt`%50>d$WI!a(mW,)@LMp,+Q=K2bnVrX`F*:o;])b!.;-t(];@C'%\&j\?5Hb!JeKr2%bJe^o62EbUQV@HChJ%,n8AVr!.j5;R1,+&3PqLM8'XIh8X3>$mSO_c<[qm4IR$lEKXbtc?L)'a3gOFSI?f$6Vq[#9!rl*=:lsM^)%Of`5$6He5*SX\"4cJu>H#r<6lBn5FMQ%tEA)Oj<4CcF0W>T78/\`rrC8"`/c->eg9Kl1:_^Mj:tQ37$R?sh.oKFUXu`('`k1d"Zm%R7<b"kRS56_;KA-`T4QG[[GcWZiV76-FHk:\8`b<\J=Noo8&2sokHU',pPa'%(Q_X<>AFInF"SjTH/$XTg$@*o7^t!N.bEA'kKFK%F3>QrRkWqnMUXVA$%p]oI5XWR;B4@$c&k5,igK\?0hYj`ahs4_[[p!^oh5EMcR#fA2M'HN$1opH!N>1g"S8_#Cc/EmSb(&,Xln:3%<6hX-J"0kSk8>%]RU]l-X_/Mb4jQGj1G/)Yf-Qkt>JG<PD^?Skc?O+oJc:b:PD7=&o:mIn#.J&fBY"0"hUUu4OTOJhn2ni?;YFKO%F9;um7,".^AN._NUr\F*]ob??ZCTh'?g7k7$KB:^4a&%F&B-8#h*?Hin3K?#c;GD1Z\PA["de#^9FpUE"I^0u^k;rI_T;'[isdM.%S7Vc?=r?\QS=dG,^hY#[+(%.1'J9oK4KM264LYSh#&Eh;Z`G-7(UH9h;#fh,dM?215'fi51lfjLPd6INCRUIHW9K-_A/SHXDX5i?%@9`9-h+M%K[&uLsRd,O0D*TOURK2ej)c94K1HP2nf^]naYgrf9Jn#c9)M-NJ0W)Y<&g)$4J1OTD+#0.e`G7th8/^Dt$S1T8k8Ns2%H=:fA3mEH1io8K4_hZTj-b6:L%#u]$pC_qgjg-dg"K.FA9b[#%o.+3H!3D2N+O,J./lb?IXEDETdn(r,cVi/<nrL'Y5h^A^I)NH,%9'Ob5oYG*/<7982ji`t8@)jk1UXNP+UQBJkUFV;K&EY?=S;mZ*4=h*GRf&shafkJ*j,=/WKND]F["O0(D^h\p!I@QkXFXolYHQE<%>TT4M)0CNeBpkMY\6(S3?JCop>;7mB=g_/=<(%.a*U-HfITp*s?55m&)mu'<G7_n+JZ&eHFeS\@pD`SLTGaQGNBcY(!"gc4'DRDX%3aJh@%`_b[C!._PhH?H[KTgoi3_IM(#i1:OBI10QN@NaFNig-]kU9AT"(^>4:lK_%FK:*rQ;+2/_*a_<)baG$n-Q<Kqk9-]O#Ydd%oL#k8(If1f&R!!Vm`O-"4qUr>i"R2-5i]A7Vb03D.F*IG;Y3;IIni,60U<miB]@'e5;#n)OCW_X,Y]L43WK8,pj(hWo?ZNt\5-)J%:k[_OkKC:tXo7rM3KmgBr.4eF4PC&DPgT^;N+mhEP"H]n:T0#a((93<,T<Vq&eF?Z"<pIiS2!;rM2JSG$SEoC7L$P"@"Wd77L+>H%M%?%%8qbQE;IY;+T+WGL[`/V<<?S,n"R0h]@cjkQSisBsWZjO+g,R:db8FcIoWW6u>g0h)Rr@odC,6<G-&4pSpSdX(<,PD>X&Eb8%c4PE!e?B$CY'<..J4jLH::)r/.0n&A$Q1Kj_)h77U"bb_\pqnfakFX]SYP3M\2R529ia8-07%r4&@kfD;Bgl*gmBofgn2I>^C]#F%:Pl0eP7BWSHlJaus64Bj,KKiO<_^J4)7=T*Irs/j%;jt_+(WJo*%HOf66a/4OXRf_O=d*<EgJ3BMYI^n6!K9'JmIGH=1S+4)b?:o%AmLW=r&a.VPi9s@]gWh:)s]N%rsto@h%+l/i0;Rb(j527K<6&7p<37/AC3W,7I.(6^SiNTrfrH=n<&%$LDr,9*&L^23MD@Ue:c`6%(l'1s@U.k!`>BfF#!.t!/9G4)+I;htDsci6G3hB]Kh#gK+^)G=F,%3gZ:JqM$1F!_oQmg=H$qZ4UJH1Y-aZWE6`4D:@rkmXiQ+Js%C"S\(?"?CcZ>NIHk[(%YGk(G0*$/J=Vt&[V]PBW&CTASG:Yp-<hlD&#2$-6se#GLt7=V%-:#8=f2$@u'DP6>'F%:G/"0%B-H;M!%%M(o50I<gUt5bXp.U:#`dUGa@+>7;CsI[e@u?p>4eQo<Sqdc92j^FI-b0"H9'W\.F)E/ZI^7DHCb8@0H9@4rZ@As>\/99+Zr4HCTr%M4;!VO[cg99Y(4u_-lOR6R<&$"%M(pC*\@N.>:W'#g-3>E)>9(RF)K#K(?.=PV6AYPkGY^(AkrBCbb]fkH1ob0q8L!:07ESb=^Z]%FF1<'%3Q^TWQ5DKOCa-0XJfCTmE*KOA3C%e\-lZ)G8'+_XN.q(/$"tXHa7/SmpoTe^pOQUJ$Z5T>h8;aj8^4f)U.I\K+]=$OlQ<]%nG(\ZQ4;^q)>#M!X\=%oi1AT<!VUD9<.T\Vp+Wi8TuQfN\iW'(%O'88$?>A1qqIU@O.S'acX4D6n_qBp:N*u&>X6\G?JKOfkSmP*%"=/c-'XWb<;?=UqL._81[dL't[u-Q8(2*0!%iGh%?]=gj0MiPH66<NQ>o^6pj4BZ-E?W7A:^u$!nQ>r6Pio?BVcDcfUO2L?FZXGi%h,<uO#GRiA`t*^b-Q`:<o6?HY4IT`Oa4i[,cIj9lcIG$`YNN,",4ctV9\kO_dqPV@bk(Y+MR\jV:NgY3Y>YYsMTjP#W1(s%+fU('%-f(B\Lh&[d^4Ru#Gt@]aL2*lQAMnHTh4EspA=c,a8hSFe^.0C=G/F,f$8V&rO67]%O0@(HO7s,;4Xt_>B1SuC4I<+iI'%`C1/H;F%O2L)&GH^:sLW?7^Y2J[n*fibO$!8L=pQEKoOda8@C5KnkD5WiAlSu/TUZCrEY3,8^mbrDDbPNX`3&FsSq[o0\ethi?<hml.d!4U9%Fl5\hHJPCOP9#e*];EGi?pI[Na_JudA;-N9X\RoiT'DGUZ>a9I*pKu3VX1,5P9#Y&gD1>Q["-6'P-WgX&C'hC1`jrl%K<&8]R9&1%1g]'Sf"VQOG?0Ed`fFgCk?'RtGRf5J1u=h#:o],dF0UVAf;cdK#Kd`ZZ1r8rKV9a_\QD/WV<XUB]H?[JgI`a*IbM]'G^IKUGcd"C%hi#N=;>4;TC.=l`/TZF9nRgYF`RhZ]IN^P-*>lBba\A?N+7B5^IA:X_o9#<:+9R1nE6d56c)JZLIcJ/03JAI?32'qGReZd!B@7$d%Vm8qB>l^GPBVq@qfi[JGW!JoU6"S\n,KL8p<rbfcW=:-ah5;;gfi4#2\C)(08Yu8s_s`Q`^A$'4:RCPAd\a*^r5@/g1cebP=<.ge%Yt-G)h"J3=):c&X0.qJ;XtDo`dA/Cu0E0dE/j=c>d<PCCrag.r[Ca0KEjaY,s7>>:O@5@5r7SD@?GAPs+4'*h\G~>%AI9_PrivateDataEnd